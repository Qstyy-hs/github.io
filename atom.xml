<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kmoon | 个人学习记录</title>
  <icon>https://www.gravatar.com/avatar/b44e96ffefad9d96e45f23234d4c7ac3</icon>
  <subtitle>千山同一月 万物皆清明</subtitle>
  <link href="https://www.kmoon.fun/atom.xml" rel="self"/>
  
  <link href="https://www.kmoon.fun/"/>
  <updated>2023-01-18T01:20:44.141Z</updated>
  <id>https://www.kmoon.fun/</id>
  
  <author>
    <name>Kmoon</name>
    <email>3453863492@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习札记-JavaScript自查文档</title>
    <link href="https://www.kmoon.fun/2023/null/"/>
    <id>https://www.kmoon.fun/2023/null/</id>
    <published>2023-01-18T01:20:44.000Z</published>
    <updated>2023-01-18T01:20:44.141Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>学习札记-CSS自查文档</title>
    <link href="https://www.kmoon.fun/2023/css/"/>
    <id>https://www.kmoon.fun/2023/css/</id>
    <published>2023-01-18T01:20:26.000Z</published>
    <updated>2023-01-19T02:52:54.444Z</updated>
    
    <content type="html"><![CDATA[<p><strong>CSS</strong> (Cascading Style Sheets，层叠样式表），是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的计算机语言，<strong>CSS</strong> 文件扩展名为 <strong>.css</strong>。</p><p>通过使用 <strong>CSS</strong> 我们可以大大提升网页开发的工作效率。</p><p>css参考手册 <a href="https://www.runoob.com/cssref/css-reference.html">https://www.runoob.com/cssref/css-reference.html</a></p><span id="more"></span><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><img src="http://image.kmoon.fun//images/202301190954628.png" alt="image-20230119095435587"></p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p>CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明:</p><p><img src="http://image.kmoon.fun//images/202301190956905.jpeg" alt="img"></p><p>选择器通常是您需要改变样式的 HTML 元素。</p><p>每条声明由一个属性和一个值组成。</p><p>属性（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开。</p><p>CSS声明总是以分号 <strong>;</strong> 结束，声明总以大括号 <strong>{}</strong> 括起来。</p><p><strong>注释</strong>是用来解释你的代码，并且可以随意编辑它，浏览器会忽略它。</p><p>CSS注释以 <strong>/*</strong> 开始, 以 ***/** 结束, </p><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><h2 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h2><p>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。</p><p>HTML元素以id属性来设置id选择器,CSS 中 id 选择器以 “<strong>#</strong>“ 来定义。</p><blockquote><p>ID属性不要以数字开头，数字开头的ID在 Mozilla/Firefox 浏览器中不起作用。</p></blockquote><h2 id="class选择器"><a href="#class选择器" class="headerlink" title="class选择器"></a>class选择器</h2><p>class 选择器用于描述一组元素的样式，class 选择器有别于id选择器，<strong>class可以在多个元素中使用</strong>。</p><p>class 选择器在 HTML 中以 class 属性表示, 在 CSS 中，类选择器以一个点 <strong>.</strong> 号显示</p><blockquote><p>类名的第一个字符不能使用数字！它无法在 Mozilla 或 Firefox 中起作用。</p></blockquote><h2 id="元素-标签-选择器"><a href="#元素-标签-选择器" class="headerlink" title="元素(标签)选择器"></a>元素(标签)选择器</h2><p>使用标签名作为selector名，语法格式：**S{…}**（S为选择器名）。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;style&gt;p</span><span class="token punctuation">{</span>  <span class="token property">font-style</span><span class="token punctuation">:</span>italic<span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style&gt;&lt;!--下面的文字是斜体的--&gt;&lt;p style=<span class="token string">"font-style:italic"</span>&gt;italic text&lt;/p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><h2 id="包含选择器"><a href="#包含选择器" class="headerlink" title="包含选择器"></a>包含选择器</h2><p>指定目标选择器必须处在某个选择器对应的元素内部，语法格式：**A B{…}**（A、B为HTML元素/标签，表示对处于A中的B标签有效）。</p><p>例：以下div内的p标签和div外的p标签分别匹配不同的样式：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;style&gt;p</span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div p</span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style&gt;&lt;p&gt;red text&lt;/p&gt;&lt;!--文字是红色的--&gt;&lt;div&gt;  &lt;p&gt;yellow text&lt;/p&gt;&lt;!--文字是黄色的--&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h2><p>指定目标选择器必须处在某个选择器对应的元素内部，包含选择器允许”子标签”甚至”孙子标签”及嵌套更深的标签匹配相应的样式，而子选择器<strong>强制指定目标选择器作为 包含选择器对应的标签 内部的标签</strong>，语法格式**：A&gt;B{…}**（A、B为HTML元素/标签）。</p><p>例：以下div内的p标签匹配样式，div内的table内的p不匹配：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;style&gt;div&gt;p</span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style&gt;&lt;div&gt;  &lt;p&gt;red text&lt;/p&gt;&lt;!--文字是红色的--&gt;  &lt;table&gt;    &lt;tr&gt;      &lt;td&gt;        &lt;p&gt;no red text<span class="token punctuation">;</span>&lt;/p&gt;&lt;!--文字是非红色的--&gt;      &lt;/td&gt;    &lt;/tr&gt;  &lt;/table&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="兄弟选择器"><a href="#兄弟选择器" class="headerlink" title="兄弟选择器"></a>兄弟选择器</h2><p>CSS3.0新增的一个选择器，语法格式：**A~B{…}**（A、B为HTML元素/标签，表示A标签匹配selector的A，B标签匹配selector的B时，B标签匹配样式）</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;style&gt;div~p</span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style&gt;&lt;div&gt;  &lt;p&gt;no red text&lt;/p&gt;&lt;!--文字是非红色的--&gt;  &lt;div&gt;no red text&lt;/div&gt;  &lt;p&gt;red text&lt;/p&gt;&lt;!--文字是红色的--&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h1><h2 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h2><p>插入样式表的方法有三种:</p><ul><li>外部样式表(External style sheet)</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css">&lt;head&gt;&lt;link rel=<span class="token string">"stylesheet"</span> type=<span class="token string">"text/css"</span> href=<span class="token string">"mystyle.css"</span>&gt;&lt;/head&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>内部样式表(Internal style sheet)</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;head&gt;&lt;style&gt;hr</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>sienna<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">p</span> <span class="token punctuation">{</span><span class="token property">margin-left</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body</span> <span class="token punctuation">{</span><span class="token property">background-image</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"images/back40.gif"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style&gt;&lt;/head&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>内联样式(Inline style)</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css">&lt;p style=<span class="token string">"color:sienna;margin-left:20px"</span>&gt;这是一个段落。&lt;/p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h2><p>一般情况下，优先级如下：</p><p><strong>（内联样式）Inline style &gt; （内部样式）Internal style sheet &gt;（外部样式）External style sheet &gt; 浏览器默认样式</strong></p><blockquote><p>如果外部样式放在内部样式的后面，则外部样式将覆盖内部样式</p></blockquote><h1 id="背景Background"><a href="#背景Background" class="headerlink" title="背景Background"></a>背景Background</h1><p>CSS 属性定义背景效果:</p><ul><li>background-color</li><li>background-image</li><li>background-repeat</li><li>background-attachment</li><li>background-position</li></ul><h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><p>background-color</p><p><img src="http://image.kmoon.fun//images/202301191015463.png" alt="image-20230119101546421"></p><h2 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h2><p>background-image:url(path)</p><p>默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体</p><p>background-repeat 图像平铺</p><p>background-position 图像位置</p><h2 id="简写属性"><a href="#简写属性" class="headerlink" title="简写属性"></a>简写属性</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span> <span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span>#ffffff <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'img.png'</span><span class="token punctuation">)</span></span> no-repeat right top<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://image.kmoon.fun//images/202301191021256.png" alt="image-20230119102107213"></p><p><img src="http://image.kmoon.fun//images/202301191021651.png" alt="image-20230119102156609"></p><h1 id="文本Text"><a href="#文本Text" class="headerlink" title="文本Text"></a>文本Text</h1><h2 id="颜色-1"><a href="#颜色-1" class="headerlink" title="颜色"></a>颜色</h2><p>color</p><h2 id="对齐方式"><a href="#对齐方式" class="headerlink" title="对齐方式"></a>对齐方式</h2><p>text-align</p><p>文本可居中或对齐到左或右,两端对齐.</p><p>当text-align设置为”justify”，每一行被展开为宽度相等，左，右外边距是对齐（如杂志和报纸）。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">h1</span> <span class="token punctuation">{</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">p.date</span> <span class="token punctuation">{</span><span class="token property">text-align</span><span class="token punctuation">:</span>right<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">p.main</span> <span class="token punctuation">{</span><span class="token property">text-align</span><span class="token punctuation">:</span>justify<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="修饰"><a href="#修饰" class="headerlink" title="修饰"></a>修饰</h2><p>text-decoration</p><p>删除下划线 none</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">h1</span> <span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>overline<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">h2</span> <span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>line-through<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">h3</span> <span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>underline<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h2><p>text-transform</p><p>文本转换属性是用来指定在一个文本中的大写和小写字母。</p><ul><li>uppercase 全大写</li><li>lowercase 全小写</li><li>capitalize 单词首字母大写</li></ul><h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><p>text-index</p><p>文本缩进属性是用来指定文本的第一行的缩进。</p><p><img src="http://image.kmoon.fun//images/202301191027431.png" alt="image-20230119102709381"></p><h1 id="字体Fonts"><a href="#字体Fonts" class="headerlink" title="字体Fonts"></a>字体Fonts</h1><p>font-family属性设置字体的字体系列</p><h2 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h2><p>font-style</p><p><img src="http://image.kmoon.fun//images/202301191028541.png" alt="image-20230119102855503"></p><h2 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h2><p>font-size</p><p><img src="http://image.kmoon.fun//images/202301191029521.png" alt="image-20230119102934477"></p><p>em </p><p>1em的默认大小是16px。可以通过下面这个公式将像素转换为em：<strong>px/16=em</strong></p><p>百分比</p><p><img src="http://image.kmoon.fun//images/202301191031563.png" alt="image-20230119103120303"></p><h1 id="链接link"><a href="#链接link" class="headerlink" title="链接link"></a>链接link</h1><p><img src="http://image.kmoon.fun//images/202301191032291.png" alt="image-20230119103212253"></p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p><img src="http://image.kmoon.fun//images/202301191033437.png" alt="image-20230119103315397"></p><h1 id="表格Table"><a href="#表格Table" class="headerlink" title="表格Table"></a>表格Table</h1><h2 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h2><h2 id="折叠边框"><a href="#折叠边框" class="headerlink" title="折叠边框"></a>折叠边框</h2><h2 id="宽度和高度"><a href="#宽度和高度" class="headerlink" title="宽度和高度"></a>宽度和高度</h2><h2 id="文字对齐"><a href="#文字对齐" class="headerlink" title="文字对齐"></a>文字对齐</h2><h2 id="表格填充"><a href="#表格填充" class="headerlink" title="表格填充"></a>表格填充</h2><h2 id="颜色-2"><a href="#颜色-2" class="headerlink" title="颜色"></a>颜色</h2><h1 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h1><p>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。</p><p>盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。</p><p><img src="http://image.kmoon.fun//images/202301191035985.png" alt="image-20230119103526946"></p><ul><li><strong>Margin(外边距)</strong> - 清除边框外的区域，外边距是透明的。</li><li><strong>Border(边框)</strong> - 围绕在内边距和内容外的边框。</li><li><strong>Padding(内边距)</strong> - 清除内容周围的区域，内边距是透明的。</li><li><strong>Content(内容)</strong> - 盒子的内容，显示文本和图像。</li></ul><h2 id="边框Border"><a href="#边框Border" class="headerlink" title="边框Border"></a>边框Border</h2><h2 id="轮廓outline"><a href="#轮廓outline" class="headerlink" title="轮廓outline"></a>轮廓outline</h2><h2 id="外边距margin"><a href="#外边距margin" class="headerlink" title="外边距margin"></a>外边距margin</h2><h2 id="填充padding"><a href="#填充padding" class="headerlink" title="填充padding"></a>填充padding</h2><h1 id="分组和嵌套"><a href="#分组和嵌套" class="headerlink" title="分组和嵌套"></a>分组和嵌套</h1><h1 id="尺寸Dimension"><a href="#尺寸Dimension" class="headerlink" title="尺寸Dimension"></a>尺寸Dimension</h1><h1 id="显示Display"><a href="#显示Display" class="headerlink" title="显示Display"></a>显示Display</h1><h2 id="隐藏元素"><a href="#隐藏元素" class="headerlink" title="隐藏元素"></a>隐藏元素</h2><p>隐藏一个元素可以通过把display属性设置为”none”，或把visibility属性设置为”hidden”。</p><p>visibility:hidden可以隐藏某个元素，但隐藏的元素仍需占用与未隐藏之前一样的空间。也就是说，该元素虽然被隐藏了，但仍然会影响布局。</p><p>display:none可以隐藏某个元素，且隐藏的元素不会占用任何空间。也就是说，该元素不但被隐藏了，而且该元素原本占用的空间也会从页面布局中消失。</p><h1 id="定位Position"><a href="#定位Position" class="headerlink" title="定位Position"></a>定位Position</h1><p><img src="http://image.kmoon.fun//images/202301191037730.png" alt="image-20230119103758690"></p><h1 id="Overflow"><a href="#Overflow" class="headerlink" title="Overflow"></a>Overflow</h1><p><img src="http://image.kmoon.fun//images/202301191038046.png" alt="image-20230119103842003"></p><h1 id="浮动Float"><a href="#浮动Float" class="headerlink" title="浮动Float"></a>浮动Float</h1><h1 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h1><h2 id="元素居中对齐"><a href="#元素居中对齐" class="headerlink" title="元素居中对齐"></a>元素居中对齐</h2><p>要水平居中对齐一个元素(如 </p><div>), 可以使用 **margin: auto;**。<p></p><h2 id="文本居中对齐"><a href="#文本居中对齐" class="headerlink" title="文本居中对齐"></a>文本居中对齐</h2><p>可以使用 <strong>text-align: center;</strong></p><h2 id="图片居中对齐"><a href="#图片居中对齐" class="headerlink" title="图片居中对齐"></a>图片居中对齐</h2><p>可以使用 <strong>margin: auto;</strong> 并将它放到 <strong>块</strong> 元素中</p><h1 id="组合选择符"><a href="#组合选择符" class="headerlink" title="组合选择符"></a>组合选择符</h1><p>CSS组合选择符包括各种简单选择符的组合方式。</p><p>在 CSS3 中包含了四种组合方式:</p><ul><li>后代选择器(以空格   分隔)</li><li>子元素选择器(以大于 <strong>&gt;</strong> 号分隔）</li><li>相邻兄弟选择器（以加号 <strong>+</strong> 分隔）</li><li>普通兄弟选择器（以波浪号 <strong>～</strong> 分隔）</li></ul><h1 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h1><h1 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h1><p><img src="http://image.kmoon.fun//images/202301191042847.png" alt="image-20230119104234801"></p><h1 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h1><h1 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h1><h1 id="提示工具"><a href="#提示工具" class="headerlink" title="提示工具"></a>提示工具</h1><h1 id="图片廓"><a href="#图片廓" class="headerlink" title="图片廓"></a>图片廓</h1><h1 id="图像透明度"><a href="#图像透明度" class="headerlink" title="图像透明度"></a>图像透明度</h1><p>CSS3中属性的透明度是 <strong>opacity</strong>。</p><h1 id="图像拼合技术"><a href="#图像拼合技术" class="headerlink" title="图像拼合技术"></a>图像拼合技术</h1><h1 id="媒体类型"><a href="#媒体类型" class="headerlink" title="媒体类型"></a>媒体类型</h1><h1 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h1><h1 id="计数器"><a href="#计数器" class="headerlink" title="计数器"></a>计数器</h1><h1 id="网页布局"><a href="#网页布局" class="headerlink" title="网页布局"></a>网页布局</h1><p><img src="http://image.kmoon.fun//images/202301191045487.png" alt="image-20230119104533440"></p><h1 id="import"><a href="#import" class="headerlink" title="!import"></a>!import</h1><h1 id="CSS3"><a href="#CSS3" class="headerlink" title="CSS3"></a>CSS3</h1><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><p>CSS3 被拆分为”模块”。旧规范已拆分成小块，还增加了新的。</p><p>一些最重要 CSS3 模块如下：</p><ul><li>选择器</li><li>盒模型</li><li>背景和边框</li><li>文字特效</li><li>2D/3D转换</li><li>动画</li><li>多列布局</li><li>用户界面</li></ul><h2 id="边框-1"><a href="#边框-1" class="headerlink" title="边框"></a>边框</h2><p><img src="http://image.kmoon.fun//images/202301191047553.png" alt="image-20230119104723514"></p><h2 id="圆角"><a href="#圆角" class="headerlink" title="圆角"></a>圆角</h2><p><img src="http://image.kmoon.fun//images/202301191047361.png" alt="image-20230119104746321"></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><img src="http://image.kmoon.fun//images/202301191048372.png" alt="image-20230119104802331"></p><h2 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h2><h2 id="文本效果"><a href="#文本效果" class="headerlink" title="文本效果"></a>文本效果</h2><p><img src="http://image.kmoon.fun//images/202301191048183.png" alt="image-20230119104837139"></p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><h2 id="2D转换"><a href="#2D转换" class="headerlink" title="2D转换"></a>2D转换</h2><h2 id="3D转换"><a href="#3D转换" class="headerlink" title="3D转换"></a>3D转换</h2><h2 id="过渡"><a href="#过渡" class="headerlink" title="过渡"></a>过渡</h2><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><h2 id="多列"><a href="#多列" class="headerlink" title="多列"></a>多列</h2><p>用户界面</p><p>图片</p><p>按钮</p><p>分页</p><p>框大小</p><p>弹性盒子</p><p>多媒体查询</p><p>网格布局</p><p>网格容器</p><p>网格元素</p><h1 id="CSS响应式设计"><a href="#CSS响应式设计" class="headerlink" title="CSS响应式设计"></a>CSS响应式设计</h1><h2 id="Viewport"><a href="#Viewport" class="headerlink" title="Viewport"></a>Viewport</h2><p>网格试图</p><p>媒体查询</p><p>图片</p><p>视频Video</p><p>框架</p></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; (Cascading Style Sheets，层叠样式表），是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的计算机语言，&lt;strong&gt;CSS&lt;/strong&gt; 文件扩展名为 &lt;strong&gt;.css&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;通过使用 &lt;strong&gt;CSS&lt;/strong&gt; 我们可以大大提升网页开发的工作效率。&lt;/p&gt;
&lt;p&gt;css参考手册 &lt;a href=&quot;https://www.runoob.com/cssref/css-reference.html&quot;&gt;https://www.runoob.com/cssref/css-reference.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端三件套" scheme="https://www.kmoon.fun/categories/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/"/>
    
    
    <category term="CSS" scheme="https://www.kmoon.fun/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>学习札记-HTML自查文档</title>
    <link href="https://www.kmoon.fun/2023/html/"/>
    <id>https://www.kmoon.fun/2023/html/</id>
    <published>2023-01-18T01:20:10.000Z</published>
    <updated>2023-01-18T06:54:55.988Z</updated>
    
    <content type="html"><![CDATA[<p>超文本标记语言（HyperText Markup Language，HTML）是一种用于创建网页的标准标记语言。</p><p>可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。</p><span id="more"></span><h1 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h1><blockquote><p><strong>细节指南</strong></p></blockquote><ol><li><p><em>对于中文网页需要使用</em> <code>&lt;meta charset="utf-8"&gt;</code>声明编码，否则会出现乱码。有些浏览器(如 360 浏览器)会设置 GBK 为默认编码，则你需要设置为 <code>&lt;meta charset="gbk"&gt;</code>。</p></li><li><p>HTML文档的后缀名</p></li></ol><ul><li>.html</li><li>.htm</li></ul><p>​以上两种后缀名没有区别，都可以使用。</p><ol start="3"><li><p>HTML中不支持空格、回车、制表符，它们都会被解析成一个空白字符</p></li><li><p><code>&lt;!DOCTYPE html&gt;</code><strong>HTML5 标准网页声明</strong>，全称为 Document Type HyperText Mark-up Language，是一条标示语言。</p></li><li><p>保存 html 文件时，文档编码和 <code>meta</code>设置的编码，一定要相同，只要不相同，就一定会出现乱码</p></li><li><p><strong>href</strong> 是 Hypertext Reference 的缩写，表示超文本引用。用来建立当前元素和文档之间的链接。常用的有：link、a。</p></li><li><p><strong>src</strong> 是 source 的缩写，src 的内容是页面必不可少的一部分，是引入。src 指向的内容会嵌入到文档中当前标签所在的位置。常用的有：img、script、iframe。</p></li></ol><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="1-1-结构"><a href="#1-1-结构" class="headerlink" title="1.1 结构"></a>1.1 结构</h2><p><img src="http://image.kmoon.fun//images/202301180941609.jpeg" alt="img"></p><ul><li><code>&lt;!DOCTYPE html&gt;</code><strong>声明</strong>为HTML5文档</li><li><code>&lt;html&gt;</code> HTML页面的<strong>根元素</strong></li><li><code>&lt;head&gt;</code>包含文档的元(meta)数据 如**<code>&lt;meta charset="utf-8"&gt;</code>** 定义网页编码格式为 <strong>utf-8</strong>。</li><li><code>&lt;title&gt;</code> 元素描述了文档的<strong>标题</strong></li><li><code>&lt;body&gt;</code> 元素包含了<strong>可见的页面内容</strong>  只有 <code>&lt;body&gt;</code> 区域 (白色部分) 才会在浏览器中显示。</li></ul><p><img src="http://image.kmoon.fun//images/202301180949197.png" alt="image-20230118094947158"></p><h2 id="1-2-概念"><a href="#1-2-概念" class="headerlink" title="1.2 概念"></a>1.2 概念</h2><p><img src="http://image.kmoon.fun//images/202301180946725.png" alt="image-20230118094558721"></p><h2 id="1-3-标签"><a href="#1-3-标签" class="headerlink" title="1.3 标签"></a>1.3 标签</h2><p><img src="http://image.kmoon.fun//images/202301180947577.png" alt="image-20230118094746544"></p><p><code>&lt;标签&gt;内容&lt;/标签&gt;</code></p><h2 id="1-4-元素"><a href="#1-4-元素" class="headerlink" title="1.4 元素"></a>1.4 元素</h2><p>一个 HTML 元素包含了开始标签与结束标签</p><h2 id="1-5-lt-DOCTYPE-gt-声明"><a href="#1-5-lt-DOCTYPE-gt-声明" class="headerlink" title="1.5 <!DOCTYPE>声明"></a>1.5 &lt;!DOCTYPE&gt;声明</h2><p><code>&lt;!DOCTYPE&gt;</code>声明有助于浏览器中正确显示网页</p><p>doctype 声明是不区分大小写的</p><h1 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h1><p>VS Code</p><p>Sublime Text</p><p>Emmet插件 <em>Emmet 官网：</em><a href="http://emmet.io/">http://emmet.io/</a></p><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="3-1-标题"><a href="#3-1-标题" class="headerlink" title="3.1 标题"></a>3.1 标题</h2><p>HTML 标题（Heading）是通过<code>&lt;h1&gt; - &lt;h6&gt;</code> 标签来定义的。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>这是一个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>这是一个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>这是一个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-2-段落"><a href="#3-2-段落" class="headerlink" title="3.2 段落"></a>3.2 段落</h2><p>HTML 段落是通过标签 <code>&lt;p&gt;</code> 来定义的。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是另外一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-3-链接"><a href="#3-3-链接" class="headerlink" title="3.3 链接"></a>3.3 链接</h2><p>HTML 链接是通过标签 <a> 来定义的。</a></p><a><p>在 href 属性中指定链接的地址。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>这是一个链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></a><h2 id="3-4-图像"><a></a><a href="#3-4-图像" class="headerlink" title="3.4 图像"></a>3.4 图像</h2><p>HTML 图像是通过标签 <code>&lt;img&gt;</code> 来定义的。</p><p>图像的名称和尺寸是以属性的形式提供的。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">decoding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>async<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/images/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>258<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>39<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>decoding 属性用于告诉浏览器使用何种方式解析图像数据。</p><ul><li>sync：同步解码图像，保证与其他内容一起显示。</li><li>async：异步解码图像，加快显示其他内容。</li><li>auto:：默认模式，表示不偏好解码模式。</li></ul><h1 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h1><p><img src="http://image.kmoon.fun//images/202301181025266.png" alt="image-20230118102534228"></p><p>没有内容的 HTML 元素被称为空元素。</p><p>空元素是在开始标签中关闭的 <code>&lt;br&gt;</code> 就是没有关闭标签的空元素</p><p>在开始标签中添加斜杠，比如 <code>&lt;br/&gt;</code>，是关闭空元素的正确方法</p><h1 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h1><p><img src="http://image.kmoon.fun//images/202301181027193.png" alt="image-20230118102724157"></p><p>大多数HTML元素的属性：</p><p><img src="http://image.kmoon.fun//images/202301181028203.png" alt="image-20230118102842163"></p><ol><li>class 属性可以多用 <strong>class=” “</strong> （引号里面可以填入多个class属性）</li><li>id 属性只能单独设置 **id=” “**（只能填写一个，多个无效）</li></ol><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="标题-1"><a href="#标题-1" class="headerlink" title="标题"></a>标题</h2><p>标题（Heading）是通过 <code>&lt;h1&gt; - &lt;h6&gt;</code> 标签进行定义的。</p><p><code>&lt;h1&gt; 定义最大的标题。 &lt;h6&gt; 定义最小的标题。</code></p><p>浏览器会自动地在标题的前后添加空行。</p><p>1到6号标题与1到6号字体逆序对应，比如1号字体对应6号标题，2号字体对应5号标题。</p><h2 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h2><p><code>&lt;hr&gt;</code> 标签在 HTML 页面中创建水平线。</p><p>hr 元素可用于分隔内容。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p><code>&lt;!-- 这是一个注释 --&gt;</code></p><h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><p>段落是通过 <code>&lt;p&gt;</code> 标签定义的。</p><p>浏览器会自动地在段落的前后添加空行。（<code>&lt;/p&gt;</code> 是块级元素）</p><p>当显示页面时，浏览器会移除源代码中多余的空格和空行。</p><p>所有连续的空格或空行都会被算作一个空格。</p><p>需要注意的是，HTML 代码中的所有连续的空行（换行）也被显示为一个空格。</p><p><img src="http://image.kmoon.fun//images/202301181040443.png" alt="image-20230118104050391"></p><h1 id="文本格式化"><a href="#文本格式化" class="headerlink" title="文本格式化"></a>文本格式化</h1><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>文本格式化<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>加粗文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>这个文本是加粗的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>斜体文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>这个文本是斜体的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>电脑自动输出<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>这是 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sub</span><span class="token punctuation">&gt;</span></span> 下标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sub</span><span class="token punctuation">&gt;</span></span> 和 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sup</span><span class="token punctuation">&gt;</span></span> 上标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sup</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>big</span><span class="token punctuation">&gt;</span></span>这个文本字体放大<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>big</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">&gt;</span></span>这个文本是缩小的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>HTML 使用标签 <code>&lt;b&gt;</code>(“bold”) 与 <code>&lt;i&gt;</code>(“italic”) 对输出的文本进行格式, 如：<strong>粗体</strong> or <em>斜体</em></p><p><strong>通常标签 <code>&lt;strong&gt;</code> 替换加粗标签 <code>&lt;b&gt;</code> 来使用, <code>&lt;em&gt;</code> 替换 <code>&lt;i&gt;</code>标签使用。</strong></p><p><img src="http://image.kmoon.fun//images/202301181045179.png" alt="image-20230118104502132"></p><p><img src="http://image.kmoon.fun//images/202301181045051.png" alt="image-20230118104529002"></p><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>HTML使用标签 <code>&lt;a&gt;</code>来设置超文本链接。</p><p>超链接可以是一个字，一个词，或者一组词，也可以是一幅图像，您可以点击这些内容来跳转到新的文档或者当前文档中的某个部分。</p><h2 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h2><ul><li>href</li></ul><p>在标签<code>&lt;a&gt;</code> 中使用了href属性来描述链接的地址。</p><ul><li>target</li></ul><p>使用 target 属性，你可以定义被链接的文档在何处显示。</p><p><img src="http://image.kmoon.fun//images/202301181059252.png" alt="image-20230118105947216"></p><ul><li>id</li></ul><p>id 属性可用于创建一个 HTML 文档<strong>书签</strong>。</p><blockquote><p><strong>注释：</strong> 请始终将正斜杠添加到子文件夹。假如这样书写链接：href=”<a href="https://www.runoob.com/html&quot;%EF%BC%8C%E5%B0%B1%E4%BC%9A%E5%90%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BA%A7%E7%94%9F%E4%B8%A4%E6%AC%A1">https://www.runoob.com/html"，就会向服务器产生两次</a> HTTP 请求。这是因为服务器会添加正斜杠到这个地址，然后创建一个新的请求，就像这样：href=”<a href="https://www.runoob.com/html/&quot;%E3%80%82">https://www.runoob.com/html/"。</a></p></blockquote><h2 id="电子邮件链接"><a href="#电子邮件链接" class="headerlink" title="电子邮件链接"></a>电子邮件链接</h2><p>需要使用关键字：<strong>mailto</strong></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>菜鸟教程(runoob.com)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是一个电子邮件链接：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mailto:someone@example.com?Subject=Hello%20again<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_top<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>发送邮件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>注意:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span> 单词之间空格使用 %20 代替，以确保浏览器可以正常显示文本。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="头部"><a href="#头部" class="headerlink" title="头部"></a>头部</h1> 元素包含了所有的头部标签元素。在 元素中你可以插入脚本（scripts）, 样式文件（CSS），及各种meta信息。<p>可以添加在头部区域的元素标签为: <title>, &lt;style&gt;, &lt;meta&gt;, &lt;link&gt;, &lt;script&gt;, &lt;noscript&gt; 和 &lt;base&gt;。&lt;/p&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181102777.png" alt="image-20230118110204729"&gt;&lt;/p&gt;&lt;h2 id="title"&gt;&lt;a href="#title" class="headerlink" title="title"&gt;&lt;/a&gt;title&lt;/h2&gt;&lt;title&gt; 标签定义了不同文档的标题。&lt;title&gt; 在 HTML/XHTML 文档中是必需的。&lt;title&gt; 元素:&lt;ul&gt;&lt;li&gt;定义了浏览器工具栏的标题&lt;/li&gt;&lt;li&gt;当网页添加到收藏夹时，显示在收藏夹中的标题&lt;/li&gt;&lt;li&gt;显示在搜索引擎结果页面的标题&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181110563.png" alt="image-20230118111033513"&gt;&lt;/p&gt;&lt;h2 id="base"&gt;&lt;a href="#base" class="headerlink" title="base"&gt;&lt;/a&gt;base&lt;/h2&gt;&lt;p&gt;&lt;code&gt;&lt;base&gt;&lt;/code&gt;标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接&lt;/p&gt;&lt;h2 id="link"&gt;&lt;a href="#link" class="headerlink" title="link"&gt;&lt;/a&gt;link&lt;/h2&gt;&lt;link&gt; 标签定义了文档与外部资源之间的关系。&lt;link&gt; 标签通常用于链接到样式表:&lt;pre class="line-numbers language-markup" data-language="markup"&gt;&lt;code class="language-markup"&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;     &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class="token attr-name"&gt;rel&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;stylesheet&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token attr-name"&gt;type&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;text/css&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token attr-name"&gt;href&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;mystyle.css&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden="true" class="line-numbers-rows"&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="style"&gt;&lt;a href="#style" class="headerlink" title="style"&gt;&lt;/a&gt;style&lt;/h2&gt;&lt;p&gt;style标签定义了HTML文档的样式文件引用地址.&lt;/p&gt;&lt;p&gt;在&lt;style&gt; 元素中你也可以直接添加样式来渲染 HTML 文档&lt;/p&gt;&lt;h2 id="meta"&gt;&lt;a href="#meta" class="headerlink" title="meta"&gt;&lt;/a&gt;meta&lt;/h2&gt;&lt;p&gt;meta标签描述了一些基本的元数据。&lt;/p&gt;&lt;p&gt;meta标签提供了元数据.元数据也不显示在页面上，但会被浏览器解析。&lt;/p&gt;&lt;p&gt;META 元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据。&lt;/p&gt;&lt;p&gt;元数据可以使用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他Web服务。&lt;/p&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181106127.png" alt="image-20230118110647081"&gt;&lt;/p&gt;&lt;h2 id="script"&gt;&lt;a href="#script" class="headerlink" title="script"&gt;&lt;/a&gt;script&lt;/h2&gt;&lt;p&gt;script标签用于加载脚本文件，如： JavaScript。&lt;/p&gt;&lt;h1 id="CSS"&gt;&lt;a href="#CSS" class="headerlink" title="CSS"&gt;&lt;/a&gt;CSS&lt;/h1&gt;&lt;p&gt;CSS (Cascading Style Sheets) 用于渲染HTML元素标签的样式。&lt;/p&gt;&lt;p&gt;CSS 可以通过以下方式添加到HTML中:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;内联样式&lt;/p&gt;&lt;p&gt;在HTML元素中使用"style" &lt;strong&gt;属性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;使用内联样式的方法是在相关的标签中使用样式属性。样式属性&lt;/p&gt;&lt;p&gt;可以包含任何 CSS 属性。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;内部样式表 &lt;/p&gt;&lt;p&gt;在HTML文档头部 &lt;head&gt; 区域使用&lt;style&gt; &lt;strong&gt;元素&lt;/strong&gt; 来包含CSS&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;外部引用&lt;/p&gt;&lt;p&gt;使用外部 CSS &lt;strong&gt;文件&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;最好的方式是通过外部引用CSS文件.&lt;/p&gt;&lt;h1 id="图像"&gt;&lt;a href="#图像" class="headerlink" title="图像"&gt;&lt;/a&gt;图像&lt;/h1&gt;&lt;p&gt;&lt;img&gt; 是空标签，它只包含属性，并且没有闭合标签。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;定义图像的语法是：&lt;/strong&gt;&lt;/p&gt;&lt;pre class="line-numbers language-markup" data-language="markup"&gt;&lt;code class="language-markup"&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class="token attr-name"&gt;src&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;url&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token attr-name"&gt;alt&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;some_text&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden="true" class="line-numbers-rows"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="属性-2"&gt;&lt;a href="#属性-2" class="headerlink" title="属性"&gt;&lt;/a&gt;属性&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;src 源属性的值是图像的 URL 地址&lt;/li&gt;&lt;li&gt;alt 用来为图像定义一串预备的可替换的文本。&lt;/li&gt;&lt;li&gt;width height&lt;/li&gt;&lt;/ul&gt;&lt;h1 id="表格"&gt;&lt;a href="#表格" class="headerlink" title="表格"&gt;&lt;/a&gt;表格&lt;/h1&gt;&lt;p&gt;表格由 &lt;strong&gt;&lt;table&gt;&lt;/strong&gt; 标签来定义。&lt;/p&gt;&lt;p&gt;每个表格均有若干行（由 &lt;strong&gt;&lt;tr&gt;&lt;/strong&gt; 标签定义），每行被分割为若干单元格（由 &lt;strong&gt;&lt;td&gt;&lt;/strong&gt; 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。&lt;/p&gt;&lt;p&gt;数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。&lt;/p&gt;&lt;h2 id="边框属性"&gt;&lt;a href="#边框属性" class="headerlink" title="边框属性"&gt;&lt;/a&gt;边框属性&lt;/h2&gt;&lt;p&gt;如果不定义边框属性，表格将不显示边框&lt;/p&gt;&lt;pre class="line-numbers language-markup" data-language="markup"&gt;&lt;code class="language-markup"&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;table&lt;/span&gt; &lt;span class="token attr-name"&gt;border&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;1&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;    &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;tr&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;        &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;td&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;Row 1, cell 1&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;        &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;td&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;Row 1, cell 2&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;    &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;tr&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;table&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden="true" class="line-numbers-rows"&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="表格表头"&gt;&lt;a href="#表格表头" class="headerlink" title="表格表头"&gt;&lt;/a&gt;表格表头&lt;/h2&gt;&lt;p&gt;表格的表头使用 &lt;th&gt; 标签进行定义。&lt;/p&gt;&lt;h2 id="标签"&gt;&lt;a href="#标签" class="headerlink" title="标签"&gt;&lt;/a&gt;标签&lt;/h2&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181120042.png" alt="image-20230118112002001"&gt;&lt;/p&gt;&lt;h1 id="列表"&gt;&lt;a href="#列表" class="headerlink" title="列表"&gt;&lt;/a&gt;列表&lt;/h1&gt;&lt;p&gt;HTML 支持有序、无序和定义列表&lt;/p&gt;&lt;h2 id="无序列表"&gt;&lt;a href="#无序列表" class="headerlink" title="无序列表"&gt;&lt;/a&gt;无序列表&lt;/h2&gt;&lt;p&gt;无序列表使用 &lt;ul&gt; 标签&lt;/p&gt;&lt;h2 id="有序列表"&gt;&lt;a href="#有序列表" class="headerlink" title="有序列表"&gt;&lt;/a&gt;有序列表&lt;/h2&gt;&lt;p&gt;有序列表始于 &lt;ol&gt; 标签。每个列表项始于 &lt;li&gt; 标签。&lt;/p&gt;&lt;h2 id="自定义列表"&gt;&lt;a href="#自定义列表" class="headerlink" title="自定义列表"&gt;&lt;/a&gt;自定义列表&lt;/h2&gt;&lt;p&gt;自定义列表以 &lt;dl&gt; 标签开始。每个自定义列表项以 &lt;dt&gt; 开始。每个自定义列表项的定义以 &lt;dd&gt; 开始。&lt;/p&gt;&lt;h2 id="标签-1"&gt;&lt;a href="#标签-1" class="headerlink" title="标签"&gt;&lt;/a&gt;标签&lt;/h2&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181121473.png" alt="image-20230118112150433"&gt;&lt;/p&gt;&lt;h1 id="区块"&gt;&lt;a href="#区块" class="headerlink" title="区块"&gt;&lt;/a&gt;区块&lt;/h1&gt;&lt;p&gt;块级元素在浏览器显示时，通常会以新行来开始（和结束）&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;h1&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;table&gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;内联元素在显示时通常不会以新行开始。&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;b&gt;, &lt;td&gt;, &lt;a&gt;, &lt;img&gt;&lt;/code&gt;&lt;/p&gt;&lt;h2 id="div"&gt;&lt;a href="#div" class="headerlink" title="div"&gt;&lt;/a&gt;div&lt;/h2&gt;&lt;p&gt;HTML &lt;div&gt; 元素是块级元素，它可用于组合其他 HTML 元素的容器。&lt;/p&gt;&lt;p&gt;div元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。&lt;/p&gt;&lt;h2 id="span"&gt;&lt;a href="#span" class="headerlink" title="span"&gt;&lt;/a&gt;span&lt;/h2&gt;&lt;p&gt;HTML &lt;span&gt; 元素是内联元素，可用作文本的容器&lt;/p&gt;&lt;p&gt;&lt;span&gt; 元素也没有特定的含义。&lt;/p&gt;&lt;h1 id="布局"&gt;&lt;a href="#布局" class="headerlink" title="布局"&gt;&lt;/a&gt;布局&lt;/h1&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181126396.png" alt="image-20230118112603356"&gt;&lt;/p&gt;&lt;pre class="line-numbers language-markup" data-language="markup"&gt;&lt;code class="language-markup"&gt;&lt;span class="token doctype"&gt;&lt;span class="token punctuation"&gt;&lt;!&lt;/span&gt;&lt;span class="token doctype-tag"&gt;DOCTYPE&lt;/span&gt; &lt;span class="token name"&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class="token attr-name"&gt;charset&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;utf-8&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;网页布局&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class="token attr-name"&gt;id&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;container&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token special-attr"&gt;&lt;span class="token attr-name"&gt;style&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;span class="token value css language-css"&gt;&lt;span class="token property"&gt;width&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;500px&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class="token attr-name"&gt;id&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;header&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token special-attr"&gt;&lt;span class="token attr-name"&gt;style&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;span class="token value css language-css"&gt;&lt;span class="token property"&gt;background-color&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;#FFA500&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;h1&lt;/span&gt; &lt;span class="token special-attr"&gt;&lt;span class="token attr-name"&gt;style&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;span class="token value css language-css"&gt;&lt;span class="token property"&gt;margin-bottom&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;0&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;主要的网页标题&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class="token attr-name"&gt;id&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;menu&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token special-attr"&gt;&lt;span class="token attr-name"&gt;style&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;span class="token value css language-css"&gt;&lt;span class="token property"&gt;background-color&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;#FFD700&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span class="token property"&gt;height&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;200px&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span class="token property"&gt;width&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;100px&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span class="token property"&gt;float&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;left&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;b&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;菜单&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;b&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;HTML&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;CSS&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;JavaScript&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class="token attr-name"&gt;id&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;content&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token special-attr"&gt;&lt;span class="token attr-name"&gt;style&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;span class="token value css language-css"&gt;&lt;span class="token property"&gt;background-color&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;#EEEEEE&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span class="token property"&gt;height&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;200px&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span class="token property"&gt;width&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;400px&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span class="token property"&gt;float&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;left&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;内容在这里&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class="token attr-name"&gt;id&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;footer&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token special-attr"&gt;&lt;span class="token attr-name"&gt;style&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;span class="token value css language-css"&gt;&lt;span class="token property"&gt;background-color&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;#FFA500&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span class="token property"&gt;clear&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;both&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span class="token property"&gt;text-align&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;center&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;版权 © kmoon.fun&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden="true" class="line-numbers-rows"&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id="表单"&gt;&lt;a href="#表单" class="headerlink" title="表单"&gt;&lt;/a&gt;表单&lt;/h1&gt;&lt;p&gt;HTML 表单用于收集用户的输入信息。&lt;/p&gt;&lt;p&gt;HTML 表单表示文档中的一个区域，此区域包含交互控件，将用户收集到的信息发送到 Web 服务器。&lt;/p&gt;&lt;h2 id="表单-1"&gt;&lt;a href="#表单-1" class="headerlink" title="表单"&gt;&lt;/a&gt;表单&lt;/h2&gt;&lt;p&gt;表单是一个包含表单元素的区域。&lt;/p&gt;&lt;p&gt;表单元素是允许用户在表单中输入内容，比如：文本域（textarea）、下拉列表（select）、单选框（radio-buttons）、复选框（checkbox） 等等。&lt;/p&gt;&lt;p&gt;我们可以使用 &lt;strong&gt;&lt;form&gt;&lt;/strong&gt; 标签来创建表单&lt;/p&gt;&lt;h2 id="输入元素"&gt;&lt;a href="#输入元素" class="headerlink" title="输入元素"&gt;&lt;/a&gt;输入元素&lt;/h2&gt;&lt;p&gt;多数情况下被用到的表单标签是输入标签 **&lt;input&gt;**。&lt;/p&gt;&lt;p&gt;输入类型是由 &lt;strong&gt;type&lt;/strong&gt; 属性定义。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;text 文本域&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;password 密码字段&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;radio 单选按钮&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;checkbox 复选框&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;submit 提交按钮&lt;/p&gt;&lt;p&gt;当用户单击确认按钮时，表单的内容会被传送到服务器。表单的动作属性 &lt;strong&gt;action&lt;/strong&gt; 定义了服务端的文件名。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;action&lt;/strong&gt; 属性会对接收到的用户输入数据进行相关的处理&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;reset 重置按钮&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="method属性"&gt;&lt;a href="#method属性" class="headerlink" title="method属性"&gt;&lt;/a&gt;method属性&lt;/h2&gt;&lt;p&gt;用于定义表单数据的提交方式&lt;/p&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181130691.png" alt="image-20230118113005644"&gt;&lt;/p&gt;&lt;h2 id="标签-2"&gt;&lt;a href="#标签-2" class="headerlink" title="标签"&gt;&lt;/a&gt;标签&lt;/h2&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181130448.png" alt="image-20230118113056393"&gt;&lt;/p&gt;&lt;h1 id="框架"&gt;&lt;a href="#框架" class="headerlink" title="框架"&gt;&lt;/a&gt;框架&lt;/h1&gt;&lt;p&gt;iframe内联框架&lt;/p&gt;&lt;pre class="line-numbers language-markup" data-language="markup"&gt;&lt;code class="language-markup"&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;iframe&lt;/span&gt; &lt;span class="token attr-name"&gt;src&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;URL&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;iframe&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden="true" class="line-numbers-rows"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="高度-宽度"&gt;&lt;a href="#高度-宽度" class="headerlink" title="高度&amp;宽度"&gt;&lt;/a&gt;高度&amp;宽度&lt;/h2&gt;&lt;p&gt;height 和 width 属性用来定义iframe标签的高度与宽度。&lt;/p&gt;&lt;p&gt;属性默认以像素为单位,还可以指定其按比例显示 (如："80%")。&lt;/p&gt;&lt;h2 id="移除边框"&gt;&lt;a href="#移除边框" class="headerlink" title="移除边框"&gt;&lt;/a&gt;移除边框&lt;/h2&gt;&lt;p&gt;frameborder 属性用于定义iframe表示是否显示边框。&lt;/p&gt;&lt;p&gt;设置属性值为 "0" 移除iframe的边框&lt;/p&gt;&lt;h2 id="使用-iframe-来显示目标链接页面"&gt;&lt;a href="#使用-iframe-来显示目标链接页面" class="headerlink" title="使用 iframe 来显示目标链接页面"&gt;&lt;/a&gt;使用 iframe 来显示目标链接页面&lt;/h2&gt;&lt;p&gt;iframe 可以显示一个目标链接的页面&lt;/p&gt;&lt;p&gt;目标链接的属性必须使用 iframe 的属性，如下实例:&lt;/p&gt;&lt;pre class="line-numbers language-markup" data-language="markup"&gt;&lt;code class="language-markup"&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;iframe&lt;/span&gt; &lt;span class="token attr-name"&gt;src&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;demo_iframe.htm&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token attr-name"&gt;name&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;iframe_a&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;iframe&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;    &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class="token attr-name"&gt;href&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;https://www.runoob.com&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token attr-name"&gt;target&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;iframe_a&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="token attr-name"&gt;rel&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;noopener&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;RUNOOB.COM&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token comment"&gt;&lt;!--因为 a 标签的 target 属性是名为 iframe_a 的 iframe 框架，所以在点击链接时页面会显示在 iframe框架中。--&gt;&lt;/span&gt;&lt;span aria-hidden="true" class="line-numbers-rows"&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id="颜色"&gt;&lt;a href="#颜色" class="headerlink" title="颜色"&gt;&lt;/a&gt;颜色&lt;/h1&gt;&lt;p&gt;HTML 颜色由一个十六进制符号来定义，这个符号由红色、绿色和蓝色的值组成（RGB）。&lt;/p&gt;&lt;p&gt;每种颜色的最小值是0（十六进制：#00）。最大值是255（十六进制：#FF）。&lt;/p&gt;&lt;p&gt;RGBA 的意思是（Red-Green-Blue-Alpha）它是在 RGB 上扩展包括了 &lt;strong&gt;“alpha”&lt;/strong&gt; 通道，运行对颜色值设置透明度。&lt;/p&gt;&lt;h2 id="颜色名"&gt;&lt;a href="#颜色名" class="headerlink" title="颜色名"&gt;&lt;/a&gt;颜色名&lt;/h2&gt;&lt;p&gt;141个颜色名称是在HTML和CSS颜色规范定义的（17标准颜色，再加124）&lt;/p&gt;&lt;p&gt;17标准颜色：黑色，蓝色，水，紫红色，灰色，绿色，石灰，栗色，海军，橄榄，橙，紫，红，白，银，蓝绿色，黄色。&lt;/p&gt;&lt;h2 id="颜色值"&gt;&lt;a href="#颜色值" class="headerlink" title="颜色值"&gt;&lt;/a&gt;颜色值&lt;/h2&gt;&lt;p&gt;颜色值由十六进制来表示红、绿、蓝（RGB）。&lt;/p&gt;&lt;p&gt;每个颜色的最低值为 0(十六进制为 00)，最高值为 255(十六进制为FF)。&lt;/p&gt;&lt;p&gt;十六进制值的写法为 # 号后跟三个或六个十六进制字符。&lt;/p&gt;&lt;p&gt;三位数表示法为：#RGB，转换为6位数表示为：#RRGGBB。&lt;/p&gt;&lt;h1 id="脚本"&gt;&lt;a href="#脚本" class="headerlink" title="脚本"&gt;&lt;/a&gt;脚本&lt;/h1&gt;&lt;h2 id="script标签"&gt;&lt;a href="#script标签" class="headerlink" title="script标签"&gt;&lt;/a&gt;script标签&lt;/h2&gt;&lt;p&gt;script标签用于定义客户端脚本，比如 JavaScript。&lt;/p&gt;&lt;p&gt;script元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。&lt;/p&gt;&lt;p&gt;JavaScript 最常用于图片操作、表单验证以及内容动态更新。&lt;/p&gt;&lt;h2 id="noscript标签"&gt;&lt;a href="#noscript标签" class="headerlink" title="noscript标签"&gt;&lt;/a&gt;noscript标签&lt;/h2&gt;&lt;p&gt;noscript提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。&lt;/p&gt;&lt;p&gt;noscript元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素。&lt;/p&gt;&lt;p&gt;只有在浏览器不支持脚本或者禁用脚本时，才会显示 &lt;noscript&gt; 元素中的内容&lt;/p&gt;&lt;h1 id="字符实体"&gt;&lt;a href="#字符实体" class="headerlink" title="字符实体"&gt;&lt;/a&gt;字符实体&lt;/h1&gt;&lt;h2 id="实体"&gt;&lt;a href="#实体" class="headerlink" title="实体"&gt;&lt;/a&gt;实体&lt;/h2&gt;&lt;p&gt;在 HTML 中不能使用小于号（&lt;）和大于号（&gt;），这是因为浏览器会误认为它们是标签。&lt;/p&gt;&lt;p&gt;如果希望正确地显示预留字符，我们必须在 HTML 源代码中使用字符实体（character entities）&lt;/p&gt;&lt;p&gt;&lt;code&gt;&amp;*entity_name*;&lt;/code&gt;或&lt;code&gt;&amp;#*entity_number*;&lt;/code&gt;&lt;/p&gt;&lt;h2 id="不间断空格"&gt;&lt;a href="#不间断空格" class="headerlink" title="不间断空格"&gt;&lt;/a&gt;不间断空格&lt;/h2&gt;&lt;p&gt;HTML 中的常用字符实体是不间断空格(&amp;nbsp;)。&lt;/p&gt;&lt;p&gt;浏览器总是会截短 HTML 页面中的空格。如果您在文本中写 10 个空格，在显示该页面之前，浏览器会删除它们中的 9 个。如需在页面中增加空格的数量，您需要使用 &amp;nbsp; 字符实体。&lt;/p&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181143790.png" alt="image-20230118114340731"&gt;&lt;/p&gt;&lt;h1 id="URL"&gt;&lt;a href="#URL" class="headerlink" title="URL"&gt;&lt;/a&gt;URL&lt;/h1&gt;&lt;p&gt;统一资源定位符 Uniform Resource Locators&lt;/p&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181144745.png" alt="image-20230118114438699"&gt;&lt;/p&gt;&lt;h2 id="scheme"&gt;&lt;a href="#scheme" class="headerlink" title="scheme"&gt;&lt;/a&gt;scheme&lt;/h2&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left"&gt;Scheme&lt;/th&gt;&lt;th align="left"&gt;访问&lt;/th&gt;&lt;th align="left"&gt;用于&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align="left"&gt;http&lt;/td&gt;&lt;td align="left"&gt;超文本传输协议&lt;/td&gt;&lt;td align="left"&gt;以 http:// 开头的普通网页。不加密。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align="left"&gt;https&lt;/td&gt;&lt;td align="left"&gt;安全超文本传输协议&lt;/td&gt;&lt;td align="left"&gt;安全网页，加密所有信息交换。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align="left"&gt;ftp&lt;/td&gt;&lt;td align="left"&gt;文件传输协议&lt;/td&gt;&lt;td align="left"&gt;用于将文件下载或上传至网站。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align="left"&gt;file&lt;/td&gt;&lt;td align="left"&gt;&lt;/td&gt;&lt;td align="left"&gt;您计算机上的文件。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;URL 只能使用 &lt;a href="https://www.runoob.com/tags/html-ascii.html"&gt;ASCII 字符集&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;URL 编码使用 "%" 其后跟随两位的十六进制数来替换非 ASCII 字符。&lt;/p&gt;&lt;p&gt;URL 不能包含空格。URL 编码通常使用 + 来替换空格。&lt;/p&gt;&lt;h1 id="速查列表"&gt;&lt;a href="#速查列表" class="headerlink" title="速查列表"&gt;&lt;/a&gt;速查列表&lt;/h1&gt;&lt;h2 id=""&gt;&lt;a href="#" class="headerlink" title=""&gt;&lt;/a&gt;&lt;img src="http://image.kmoon.fun//images/202301181147302.png" alt="image-20230118114707211"&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181147418.png" alt="image-20230118114719365"&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181147159.png" alt="image-20230118114733101"&gt;&lt;/p&gt;&lt;h1 id="XHTML"&gt;&lt;a href="#XHTML" class="headerlink" title="XHTML"&gt;&lt;/a&gt;XHTML&lt;/h1&gt;&lt;p&gt;XHTML 是以 XML 格式编写的 HTML。&lt;/p&gt;&lt;h2 id="概念"&gt;&lt;a href="#概念" class="headerlink" title="概念"&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181149453.png" alt="image-20230118114938407"&gt;&lt;/p&gt;&lt;p&gt;XML 是一种必须正确标记且格式良好的标记语言。&lt;/p&gt;&lt;p&gt;XHTML 是作为 XML 被重新设计的 HTML。&lt;/p&gt;&lt;h2 id="区别"&gt;&lt;a href="#区别" class="headerlink" title="区别"&gt;&lt;/a&gt;区别&lt;/h2&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181150022.png" alt="image-20230118115042978"&gt;&lt;/p&gt;&lt;pre class="line-numbers language-markup" data-language="markup"&gt;&lt;code class="language-markup"&gt;&lt;span class="token doctype"&gt;&lt;span class="token punctuation"&gt;&lt;!&lt;/span&gt;&lt;span class="token doctype-tag"&gt;DOCTYPE&lt;/span&gt; &lt;span class="token name"&gt;html&lt;/span&gt; &lt;span class="token name"&gt;PUBLIC&lt;/span&gt; &lt;span class="token string"&gt;"-//W3C//DTD XHTML 1.0 Transitional//EN"&lt;/span&gt;&lt;span class="token string"&gt;"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class="token attr-name"&gt;xmlns&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;http://www.w3.org/1999/xhtml&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;  &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class="token attr-name"&gt;charset&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;utf-8&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;  &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;文档标题&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;文档内容&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden="true" class="line-numbers-rows"&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id="HTML5"&gt;&lt;a href="#HTML5" class="headerlink" title="HTML5"&gt;&lt;/a&gt;HTML5&lt;/h1&gt;&lt;p&gt;HTML5 是下一代 HTML 标准。&lt;/p&gt;&lt;h2 id="新特性"&gt;&lt;a href="#新特性" class="headerlink" title="新特性"&gt;&lt;/a&gt;新特性&lt;/h2&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181153142.png" alt="image-20230118115359071"&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;!doctype&gt;&lt;/code&gt; 声明必须位于 HTML5 文档中的第一行.&lt;/p&gt;&lt;pre class="line-numbers language-markup" data-language="markup"&gt;&lt;code class="language-markup"&gt;&lt;span class="token doctype"&gt;&lt;span class="token punctuation"&gt;&lt;!&lt;/span&gt;&lt;span class="token doctype-tag"&gt;DOCTYPE&lt;/span&gt; &lt;span class="token name"&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class="token attr-name"&gt;charset&lt;/span&gt;&lt;span class="token attr-value"&gt;&lt;span class="token punctuation attr-equals"&gt;=&lt;/span&gt;&lt;span class="token punctuation"&gt;"&lt;/span&gt;utf-8&lt;span class="token punctuation"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;文档标题&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;文档内容&lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class="token tag"&gt;&lt;span class="token tag"&gt;&lt;span class="token punctuation"&gt;&lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden="true" class="line-numbers-rows"&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="改进"&gt;&lt;a href="#改进" class="headerlink" title="改进"&gt;&lt;/a&gt;改进&lt;/h2&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181155538.png" alt="image-20230118115532486"&gt;&lt;/p&gt;&lt;h2 id="新元素"&gt;&lt;a href="#新元素" class="headerlink" title="新元素"&gt;&lt;/a&gt;新元素&lt;/h2&gt;&lt;h3 id="canvas"&gt;&lt;a href="#canvas" class="headerlink" title="canvas"&gt;&lt;/a&gt;canvas&lt;/h3&gt;&lt;p&gt;标签定义图形，比如图表和其他图像。该标签基于 JavaScript 的绘图 API&lt;/p&gt;&lt;h3 id="多媒体"&gt;&lt;a href="#多媒体" class="headerlink" title="多媒体"&gt;&lt;/a&gt;多媒体&lt;/h3&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left"&gt;标签&lt;/th&gt;&lt;th align="left"&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align="left"&gt;&lt;audio&gt;&lt;/td&gt;&lt;td align="left"&gt;定义音频内容&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align="left"&gt;&lt;veido&gt;&lt;/td&gt;&lt;td align="left"&gt;定义视频（video 或者 movie）&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align="left"&gt;&lt;source&gt;&lt;/td&gt;&lt;td align="left"&gt;定义多媒体资源 &lt;video&gt; 和 &lt;audio&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align="left"&gt;&lt;embed&gt;&lt;/td&gt;&lt;td align="left"&gt;定义嵌入的内容，比如插件。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align="left"&gt;&lt;track&gt;&lt;/td&gt;&lt;td align="left"&gt;为诸如 &lt;video&gt; 和 &lt;audio&gt; 元素之类的媒介规定外部文本轨道。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id="表单-2"&gt;&lt;a href="#表单-2" class="headerlink" title="表单"&gt;&lt;/a&gt;表单&lt;/h3&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181438216.png" alt="image-20230118143724519"&gt;&lt;/p&gt;&lt;h3 id="语义和结构"&gt;&lt;a href="#语义和结构" class="headerlink" title="语义和结构"&gt;&lt;/a&gt;语义和结构&lt;/h3&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181438115.png" alt="image-20230118143828020"&gt;&lt;/p&gt;&lt;h3 id="移除的元素"&gt;&lt;a href="#移除的元素" class="headerlink" title="移除的元素"&gt;&lt;/a&gt;移除的元素&lt;/h3&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181158885.png" alt="image-20230118115851830"&gt;&lt;/p&gt;&lt;h2 id="Canvas"&gt;&lt;a href="#Canvas" class="headerlink" title="Canvas"&gt;&lt;/a&gt;Canvas&lt;/h2&gt;&lt;p&gt;canvas 标签定义图形，比如图表和其他图像，您必须使用脚本来绘制图形。&lt;/p&gt;&lt;p&gt;canvas 标签只是图形容器，您必须使用脚本来绘制图形。&lt;/p&gt;&lt;p&gt;canvas 元素本身是没有绘图能力的。所有的绘制工作必须在JavaScript 内部完成。&lt;/p&gt;&lt;h3 id="坐标"&gt;&lt;a href="#坐标" class="headerlink" title="坐标"&gt;&lt;/a&gt;坐标&lt;/h3&gt;&lt;h3 id="路径"&gt;&lt;a href="#路径" class="headerlink" title="路径"&gt;&lt;/a&gt;路径&lt;/h3&gt;&lt;h3 id="文本"&gt;&lt;a href="#文本" class="headerlink" title="文本"&gt;&lt;/a&gt;文本&lt;/h3&gt;&lt;h3 id="渐变"&gt;&lt;a href="#渐变" class="headerlink" title="渐变"&gt;&lt;/a&gt;渐变&lt;/h3&gt;&lt;h3 id="图像-1"&gt;&lt;a href="#图像-1" class="headerlink" title="图像"&gt;&lt;/a&gt;图像&lt;/h3&gt;&lt;h2 id="SVG"&gt;&lt;a href="#SVG" class="headerlink" title="SVG"&gt;&lt;/a&gt;SVG&lt;/h2&gt;&lt;p&gt;SVG 定义为可缩放矢量图形。&lt;/p&gt;&lt;p&gt;HTML5 支持内联 SVG。&lt;/p&gt;&lt;p&gt;HTML &lt;strong&gt;&lt;svg&gt;&lt;/strong&gt; 元素是 SVG 图形的容器。&lt;/p&gt;&lt;p&gt;SVG 有多种绘制路径、框、圆、文本和图形图像的方法。&lt;/p&gt;&lt;p&gt;&lt;img src="http://image.kmoon.fun//images/202301181442333.png" alt="image-20230118144249286"&gt;&lt;/p&gt;&lt;h2 id="MathML"&gt;&lt;a href="#MathML" class="headerlink" title="MathML"&gt;&lt;/a&gt;MathML&lt;/h2&gt;&lt;p&gt;HTML5 可以在文档中使用 MathML 元素，对应的标签是 &lt;code&gt;&lt;math&gt;...&lt;/math&gt;&lt;/code&gt; 。&lt;/p&gt;&lt;p&gt;MathML 是数学标记语言，是一种基于XML（标准通用标记语言的子集）的标准，用来在互联网上书写数学符号和公式的置标语言。&lt;/p&gt;&lt;h2 id="拖放"&gt;&lt;a href="#拖放" class="headerlink" title="拖放"&gt;&lt;/a&gt;拖放&lt;/h2&gt;&lt;p&gt;拖放是一种常见的特性，即抓取对象以后拖到另一个位置。&lt;/p&gt;&lt;p&gt;在 HTML5 中，拖放是标准的一部分，任何元素都能够拖放。&lt;/p&gt;&lt;h2 id="地理定位"&gt;&lt;a href="#地理定位" class="headerlink" title="地理定位"&gt;&lt;/a&gt;地理定位&lt;/h2&gt;&lt;p&gt;HTML5 Geolocation（地理定位）用于定位用户的位置。&lt;/p&gt;&lt;p&gt;HTML5 Geolocation API 用于获得用户的地理位置。&lt;/p&gt;&lt;p&gt;鉴于该特性可能侵犯用户的隐私，除非用户同意，否则用户位置信息是不可用的。&lt;/p&gt;&lt;h2 id="Video"&gt;&lt;a href="#Video" class="headerlink" title="Video"&gt;&lt;/a&gt;Video&lt;/h2&gt;&lt;h2 id="Audio"&gt;&lt;a href="#Audio" class="headerlink" title="Audio"&gt;&lt;/a&gt;Audio&lt;/h2&gt;&lt;h2 id="Input类型"&gt;&lt;a href="#Input类型" class="headerlink" title="Input类型"&gt;&lt;/a&gt;Input类型&lt;/h2&gt;&lt;h2 id="表单-3"&gt;&lt;a href="#表单-3" class="headerlink" title="表单"&gt;&lt;/a&gt;表单&lt;/h2&gt;&lt;h3 id="元素-1"&gt;&lt;a href="#元素-1" class="headerlink" title="元素"&gt;&lt;/a&gt;元素&lt;/h3&gt;&lt;h3 id="属性-3"&gt;&lt;a href="#属性-3" class="headerlink" title="属性"&gt;&lt;/a&gt;属性&lt;/h3&gt;&lt;h2 id="语义元素"&gt;&lt;a href="#语义元素" class="headerlink" title="语义元素"&gt;&lt;/a&gt;语义元素&lt;/h2&gt;&lt;img src="http://image.kmoon.fun//images/202301181449036.png" alt="image-20230118144922963" style="zoom:67%;" /&gt;&lt;h2 id="web-存储"&gt;&lt;a href="#web-存储" class="headerlink" title="web 存储"&gt;&lt;/a&gt;web 存储&lt;/h2&gt;&lt;h2 id="web-SQL数据库"&gt;&lt;a href="#web-SQL数据库" class="headerlink" title="web SQL数据库"&gt;&lt;/a&gt;web SQL数据库&lt;/h2&gt;&lt;h2 id="应用程序缓存"&gt;&lt;a href="#应用程序缓存" class="headerlink" title="应用程序缓存"&gt;&lt;/a&gt;应用程序缓存&lt;/h2&gt;&lt;h2 id="Web-Workers"&gt;&lt;a href="#Web-Workers" class="headerlink" title="Web Workers"&gt;&lt;/a&gt;Web Workers&lt;/h2&gt;&lt;h2 id="SSE"&gt;&lt;a href="#SSE" class="headerlink" title="SSE"&gt;&lt;/a&gt;SSE&lt;/h2&gt;&lt;h2 id="WebSocket"&gt;&lt;a href="#WebSocket" class="headerlink" title="WebSocket"&gt;&lt;/a&gt;WebSocket&lt;/h2&gt;&lt;h1 id="多媒体-1"&gt;&lt;a href="#多媒体-1" class="headerlink" title="多媒体"&gt;&lt;/a&gt;多媒体&lt;/h1&gt;&lt;h2 id="媒体"&gt;&lt;a href="#媒体" class="headerlink" title="媒体"&gt;&lt;/a&gt;媒体&lt;/h2&gt;&lt;h2 id="插件"&gt;&lt;a href="#插件" class="headerlink" title="插件"&gt;&lt;/a&gt;插件&lt;/h2&gt;&lt;h2 id="音频"&gt;&lt;a href="#音频" class="headerlink" title="音频"&gt;&lt;/a&gt;音频&lt;/h2&gt;&lt;h2 id="视频"&gt;&lt;a href="#视频" class="headerlink" title="视频"&gt;&lt;/a&gt;视频&lt;/h2&gt;</title></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;超文本标记语言（HyperText Markup Language，HTML）是一种用于创建网页的标准标记语言。&lt;/p&gt;
&lt;p&gt;可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。&lt;/p&gt;</summary>
    
    
    
    <category term="前端三件套" scheme="https://www.kmoon.fun/categories/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/"/>
    
    
    <category term="HTML" scheme="https://www.kmoon.fun/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>他山之石-代码随想录知识星球文库</title>
    <link href="https://www.kmoon.fun/2022/code/"/>
    <id>https://www.kmoon.fun/2022/code/</id>
    <published>2022-12-25T13:37:55.000Z</published>
    <updated>2023-01-19T01:38:01.911Z</updated>
    
    <content type="html"><![CDATA[<h1 id="打卡"><a href="#打卡" class="headerlink" title="打卡"></a>打卡</h1><p>今日任务</p><p>项目进度</p><p>杂谈随笔</p><span id="more"></span><p>x月x号，第x次打卡</p><p>编程语言方面：xxxx</p><p>算法方面：xxxxxx </p><p>计算机基础方面：xxxxx </p><p>其他方面：xxxx </p><p> <a href="https://t.zsxq.com/BQvrnIA">学会使用Markdown</a></p><p>对程序员来说 markdown可以让你养成记录的习惯 让你喜欢写文档的感觉</p><p><a href="https://articles.zsxq.com/id_r4px6i3mv7ad.html">每日打卡的内容如果较多，需要段落，可以考虑使用Markdown写文章</a></p><h1 id="周总结"><a href="#周总结" class="headerlink" title="周总结"></a>周总结</h1><h1 id="月总结"><a href="#月总结" class="headerlink" title="月总结"></a>月总结</h1><h1 id="年度总结"><a href="#年度总结" class="headerlink" title="年度总结"></a>年度总结</h1><h1 id="八股文"><a href="#八股文" class="headerlink" title="八股文"></a>八股文</h1><p>第一版</p><p>第二版</p><p>第三版</p><h1 id="简历"><a href="#简历" class="headerlink" title="简历"></a>简历</h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;打卡&quot;&gt;&lt;a href=&quot;#打卡&quot; class=&quot;headerlink&quot; title=&quot;打卡&quot;&gt;&lt;/a&gt;打卡&lt;/h1&gt;&lt;p&gt;今日任务&lt;/p&gt;
&lt;p&gt;项目进度&lt;/p&gt;
&lt;p&gt;杂谈随笔&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>学习札记-JavaScript基础知识</title>
    <link href="https://www.kmoon.fun/2022/js-basic/"/>
    <id>https://www.kmoon.fun/2022/js-basic/</id>
    <published>2022-12-24T06:58:10.000Z</published>
    <updated>2023-01-04T12:09:01.083Z</updated>
    
    <content type="html"><![CDATA[<p>前端三件套——JavaScript基础知识</p><p><strong>两周速通 14 Days</strong></p><p>[TOC]</p><span id="more"></span><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><img src="http://image.kmoon.fun//images/202212271325905.png" alt="image-20221227132432781" style="zoom:50%;"><p>JavaScript诞生于1995年，主要用于处理网页中的前端验证。</p><p>前端验证就是指检查用户输入的内容是否符合一定的规则。</p><p>比如用户名的长度、密码的长度、邮箱的格式。</p><p>一个完整的JavaScript实现应该由以下三部分组成：</p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221224152635950.png" alt="image-20221224152635950"></p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li><p>解释型语言 </p><p>不需要编译 直接执行</p></li><li><p>类似于C和Java的语法结构</p></li><li><p>动态语言</p></li><li><p>基于原型的面向对象</p></li></ul><h2 id="初识"><a href="#初识" class="headerlink" title="初识"></a>初识</h2><p>js代码需要编写到<strong>script标签</strong>中</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--JS代码需要编写到script标签中--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">      <span class="token comment">/*       * 控制浏览器弹出一个警告框       * alert("哥，你真帅啊！！");       */</span>      <span class="token comment">/*       * 让计算机在页面中输出一个内容       * document.write()可以向body中输出一个内容       * document.write("看我出不出来~~~");       */</span>      <span class="token comment">/*       * 向控制台输出一个内容       * console.log()的作用是向控制台输出一个内容       * console.log("你猜我在哪出来呢？");       */</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"哥，你真帅啊！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"看我出不出来~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你猜我在哪出来呢？"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="编写位置"><a href="#编写位置" class="headerlink" title="编写位置"></a>编写位置</h2><p>目前学习的JS全部是客户端的JS，全部都需要在浏览器中运行，所以我们的JS代码全部需要在网页中编写。</p><p>JS代码编写位置</p><ul><li><p>某些标签的属性中</p><p>例如button的onclick属性中，当点击按钮时js代码才会执行；</p><p>例如超链接a标签的href属性中，当点击超链接时才会执行js代码。</p><p>（但是这种属于结构与行为耦合，不方面维护，不推荐使用。）</p></li><li><p>script标签中</p><p>刷新网页即可运行js代码，script标签一旦用于引入外部文件就不能在标签中编写其他js代码，浏览器会忽略。</p><p>如果需要则可以重新创建一个新的script标签用于编写内部代码。</p><p>一般将script标签写在head中，和style标签类似。</p><p>script标签的属性：</p><ul><li><strong>type</strong> 默认值text/javascript可以不写。</li><li><strong>src</strong> 当需要引入一个外部的js文件时，使用该属性指向文件的地址。</li></ul></li><li><p>外部js文件中</p><p>通过script标签引入，写在外部文件中可以在不同的页面中同时引用，也可以利用浏览器的缓存机制，推荐使用。</p></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/script.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是内部的JS代码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是script标签中的代码！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'讨厌，你点我干嘛~~'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>点我一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert('让你点你就点！！');<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>你也点我一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>你也点我一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>单行注释 //</p><p>多行注释/* */</p><p>注释中的内容不会被执行，但是可以在源代码中查看。</p><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><ol><li>JS中<strong>严格区分大小写</strong></li><li>JS中每一条语句以分号(;)结尾</li></ol><blockquote><p>如果不写分号，浏览器会自动添加，但是会消耗一些系统资源，而且有些时候，浏览器会加错分号，所以在开发中分号必须写。</p></blockquote><ol start="3"><li>JS中会忽略多个空格和换行，所以我们可以利用空格和换行对代码进行格式化</li></ol><h2 id="字面量-amp-变量"><a href="#字面量-amp-变量" class="headerlink" title="字面量&amp;变量"></a>字面量&amp;变量</h2><ul><li>字面量</li></ul><p>不可改变的值，比如1 2 3 4 5 。</p><p>字面量都是可以直接使用，但是一般都不会直接使用字面量。</p><ul><li>变量</li></ul><p>变量的作用是给某一个值或对象标注名称</p><p>变量可以用来保存字面量，而且变量的值是可以任意改变的。</p><p>在js中使用<strong>var</strong>关键字来声明一个变量。</p><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>变量、函数、属性、函数参数的名字</p><p>在JS中所有的可以由我们自主命名的都可以称为是标识符</p><ul><li>规则</li></ul><ol><li><p>标识符中可以含有<strong>字母、数字、_、$</strong></p></li><li><p>标识符不能以数字开头</p></li><li><p>标识符不能是ES中的<strong>关键字或保留字</strong></p><img src="http://image.kmoon.fun//images/202212262123869.png" alt="image-20221226212347713" style="zoom: 67%;"></li><li><p>标识符一般都采用<strong>驼峰命名法</strong></p><p> (首字母小写，每个单词的开头字母大写，其余字母小写)</p></li></ol><blockquote><p>JS底层保存标识符时实际上是采用的Unicode编码</p><p>所以理论上讲，所有的utf-8中含有的内容都可以作为标识符</p></blockquote><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>字面量的类型</p><p>在JS中一共有<strong>六种</strong>数据类型:</p><ul><li><p>Sring 字符串</p></li><li><p>Number 数值</p></li><li><p>Boolean 布尔值</p></li><li><p>Null 空值</p></li><li><p>Undefined 未定义</p></li><li><p>Object 对象</p></li></ul><blockquote><p>String Number Boolean Null Undefined属于基本数据类型 </p><p>Object属于引用数据类型</p></blockquote><h3 id="typeof运算符"><a href="#typeof运算符" class="headerlink" title="typeof运算符"></a>typeof运算符</h3><p>检查一个变量的数据类型</p><p><code>typeof 数据</code></p><img src="http://image.kmoon.fun//images/202212271348449.png" alt="image-20221227134832386" style="zoom:50%;"><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>String用于表示一个字符序列，即字符串。</p><p>字符串需要使用引号引起来</p><p>当表示一些特殊符号时可以使用\进行转义</p><p><img src="http://image.kmoon.fun//images/202212271349327.png" alt="image-20221227134955272"></p><h3 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h3><p>在JS中所有的数值都是Number类型，包括整数和浮点数。</p><p>JS中可以表示的数字的最大值：</p><p><strong>Number.MAX_VALUE</strong>：1.7976931348623157e+308</p><p><strong>Number.MIN_VALUE</strong> 大于0的最小值：5e-324</p><p>如果使用Number表示的数字超过了最大值，则会返回一个</p><ul><li><p>Infinity 表示正无穷</p></li><li><p>-Infinity 表示负无穷</p></li></ul><p>使用typeof检查Infinity也会返回number</p><p>NaN 是一个特殊的数字，表示Not A Number</p><p>使用typeof检查一个NaN也会返回number</p><p>在JS中整数的运算基本可以保证精确</p><p>如果使用JS进行浮点运算，可能得到一个不精确的结果</p><ul><li>数值的转换</li></ul><p><img src="http://image.kmoon.fun//images/202212271350115.png" alt="image-20221227135052057"></p><h3 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h3><p>Boolean 布尔值 逻辑值类型或者真假值类型</p><p>只有两个 主要用于逻辑判断</p><p>true false</p><p><img src="http://image.kmoon.fun//images/202212271352056.png" alt="image-20221227135220985"></p><h3 id="Null"><a href="#Null" class="headerlink" title="Null"></a>Null</h3><p>Null（空值）类型的值只有一个，就是特殊的null。</p><p>null这个值专门用来表示一个为空的对象</p><p>使用typeof检查一个null值时，会返回object。</p><p>undefined值实际上是由null值衍生出来的，所以如果比较undefined和null是否相等，会返回true。</p><h3 id="Undefined"><a href="#Undefined" class="headerlink" title="Undefined"></a>Undefined</h3><p>Undefined（未定义）类型的值只有一个，就是特殊的undefind。</p><p>当声明一个变量，但是并不给变量赋值时，它的值就是undefined。</p><p>使用typeof检查一个undefined时也会返回undefined</p><h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><ol><li>转换为String</li></ol><ul><li>toString()方法</li><li>String()函数</li></ul><ol start="2"><li><p>转换为Number</p></li><li><p>转换为Boolean</p></li></ol><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h4 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h4><p>一元运算符</p><p>自增自减</p><p><img src="http://image.kmoon.fun//images/202212271355472.png" alt="image-20221227135510415"></p><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><p>非布尔值的与或运算</p><p><img src="http://image.kmoon.fun//images/202212271355897.png" alt="image-20221227135555839"></p><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p>=</p><p><img src="http://image.kmoon.fun//images/202212271357898.png" alt="image-20221227135750838"></p><h4 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h4><p>Unicode编码表</p><h4 id="相等运算符"><a href="#相等运算符" class="headerlink" title="相等运算符"></a>相等运算符</h4><p>==!=</p><p><img src="http://image.kmoon.fun//images/202212271358029.png" alt="image-20221227135845967"></p><p>全等</p><p>===</p><p><img src="http://image.kmoon.fun//images/202212271359150.png" alt="image-20221227135925087"></p><h4 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h4><p>三元运算符 ?:</p><h4 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h4><img src="http://image.kmoon.fun//images/202212271400387.png" alt="image-20221227140035327" style="zoom:67%;"><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>{} 将多条语句的集合视为一条语句来使用</p><p>一般使用代码块将需要一起执行的语句进行分组</p><p>需要注意的是，代码块结尾<strong>不需要加分号</strong></p><h2 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h2><h3 id="if…else-if…else"><a href="#if…else-if…else" class="headerlink" title="if…else if…else"></a>if…else if…else</h3><h3 id="siwtch-case…break"><a href="#siwtch-case…break" class="headerlink" title="siwtch..case…break"></a>siwtch..case…break</h3><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><h3 id="do…while"><a href="#do…while" class="headerlink" title="do…while"></a>do…while</h3><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><h2 id="break-amp-continue"><a href="#break-amp-continue" class="headerlink" title="break&amp;continue"></a>break&amp;continue</h2><p>break只在循环和switch语句中使用</p><p>continue只在循环中使用</p><h2 id="label"><a href="#label" class="headerlink" title="label"></a>label</h2><p>使用标签语句可以在代码中添加标签，以便将来使用。</p><p>语法：</p><ul><li>label: statement</li></ul><p><img src="http://image.kmoon.fun//images/202212271407656.png" alt="image-20221227140738596"></p><h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><p>对象属于一种复合数据类型，可以保存多个不同数据类型的属性。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>内建对象：ES标准中定义的对象</p><p>宿主对象：浏览器提供的对象 BOM、DOM</p><p>自建对象：开发人员自己创建的对象</p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><p>使用new关键字调用的函数是构造函数，构造函数专门用来创建对象。</p><p><code>var obj = new Object();</code></p><p>在对象中保存的值称为属性</p><p><code>obj.name = "孙悟空";</code></p><p>删除对象的属性</p><p><code>delete obj.name;</code></p><p>检查对象是否还有某个属性</p><p><code>属性名 in 对象名</code></p><h2 id="属性名-amp-属性值"><a href="#属性名-amp-属性值" class="headerlink" title="属性名&amp;属性值"></a>属性名&amp;属性值</h2><img src="http://image.kmoon.fun//images/202301041906653.png" alt="image-20230101171551262" style="zoom:50%;"><h2 id="基本数据类型-amp-引用数据类型"><a href="#基本数据类型-amp-引用数据类型" class="headerlink" title="基本数据类型&amp;引用数据类型"></a>基本数据类型&amp;引用数据类型</h2><p>引用类型的值是保存在内存中的对象</p><p>当一个变量是一个对象时，变量中保存的是对象的引用。</p><p>基本数据类型保存在栈内存，引用数据类型保存在堆内存。</p><p>比较基本数据类型是比较指，比较引用数据类型是比较对象的内存地址。</p><h2 id="对象字面量"><a href="#对象字面量" class="headerlink" title="对象字面量"></a>对象字面量</h2><p>使用new关键字创建一个对象</p><p>– var obj = new Object(); </p><p>使用对象字面量创建一个对象</p><p>– var obj = {属性名: “属性值”}</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h2><p>对象的一种</p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>实参可以是任何值</p><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><p>返回值类型</p><p>立即执行函数</p><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>全局作用域</p><p>函数作用域</p><h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><h2 id="this"><a href="#this" class="headerlink" title="this"></a>this</h2><p>使用工厂方法创建对象</p><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>function关键字</p><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>call()</p><p>apply()</p><p>call()和apply()都可以指定一个函数的运行 环境对象，换句话说就是设置函数执行时 的this值。</p><p>– 函数对象.call(this对象,参数数组) </p><p>– 函数对象.apply(this对象,参数1,参数2,参数N)</p><h2 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h2><p>JS中的所有的参数传递都是按值传递的。</p><h2 id="执行环境"><a href="#执行环境" class="headerlink" title="执行环境"></a>执行环境</h2><p>全局执行环境 window对象</p><h2 id="内部属性"><a href="#内部属性" class="headerlink" title="内部属性"></a>内部属性</h2><h2 id="arguments"><a href="#arguments" class="headerlink" title="arguments"></a>arguments</h2><ul><li>该对象实际上是一个数组，用于保存函数的参数</li><li>该对象还有一个属性callee来表示当前函数</li></ul><h2 id="this-1"><a href="#this-1" class="headerlink" title="this"></a>this</h2><ul><li>this引用的是一个对象 对于最外层代码与函数内部的情况，其引用目标是不同的</li><li>this引用会根据代码的上下文语境自动改变其引用对象</li></ul><h3 id="this引用的规则"><a href="#this引用的规则" class="headerlink" title="this引用的规则"></a>this引用的规则</h3><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230101184005175.png" alt="image-20230101184005175"></p><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>用于生成对象的函数</p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230101184513682.png" alt="image-20230101184513682"></p><h2 id="new关键字"><a href="#new关键字" class="headerlink" title="new关键字"></a>new关键字</h2><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230101184557712.png" alt="image-20230101184557712"></p><h2 id="属性的访问"><a href="#属性的访问" class="headerlink" title="属性的访问"></a>属性的访问</h2><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230101184628394.png" alt="image-20230101184628394"></p><h2 id="原型对象"><a href="#原型对象" class="headerlink" title="原型对象"></a>原型对象</h2><h2 id="设置原型"><a href="#设置原型" class="headerlink" title="设置原型"></a>设置原型</h2><p>原型就是一个对象，和其他对象没有任何区别，可以通过构造函数来获取原型对象。</p><p>- 构造函数. prototype</p><p>prototype属性只存在于函数对象中，其他对象 是没有prototype属性的</p><p>每一个对象都有原型，包括原型对象也有原型。</p><p>特殊的是 Object的原型对象没有原型</p><h2 id="获取原型对象"><a href="#获取原型对象" class="headerlink" title="获取原型对象"></a>获取原型对象</h2><p>通过具体的对象来获取原型对象</p><ul><li>Object.getPrototypeOf(对象)</li><li>对象._proto_</li><li>对象.constructor.prototype</li></ul><p>我们可以获取到Object的原型对象，也可以对它的属性进行操作，但是不能修改Object原型对象的引用</p><h2 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h2><p>对象 对象的原型  原型的原型 —&gt; 原型链</p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230103092021881.png" alt="image-20230103092021881"></p><p>当从一个对象中获取属性时，会首先从当前对象中查找，如果没有则顺着向上查找原型对象，直到找到Object对象的原型位置，找到则返回，找不到则返回undefined</p><h2 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a>instanceof</h2><p>检查对象的具体类型</p><p>– var result = 变量 instanceof 类型</p><h2 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="toString()"></a>toString()</h2><h2 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h2><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="简介-3"><a href="#简介-3" class="headerlink" title="简介"></a>简介</h2><h2 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h2><h2 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h2><h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h2><h2 id="slice-amp-splice"><a href="#slice-amp-splice" class="headerlink" title="slice&amp;splice"></a>slice&amp;splice</h2><h2 id="call-amp-apply"><a href="#call-amp-apply" class="headerlink" title="call&amp;apply"></a>call&amp;apply</h2><h2 id="arguments-1"><a href="#arguments-1" class="headerlink" title="arguments"></a>arguments</h2><h1 id="DATE对象"><a href="#DATE对象" class="headerlink" title="DATE对象"></a>DATE对象</h1><h1 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h1><h1 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h1><h2 id="基本包装类型"><a href="#基本包装类型" class="headerlink" title="基本包装类型"></a>基本包装类型</h2><h3 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h3><h3 id="Number-1"><a href="#Number-1" class="headerlink" title="Number"></a>Number</h3><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><h3 id="Math-1"><a href="#Math-1" class="headerlink" title="Math"></a>Math</h3><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230103094747061.png" alt="image-20230103094747061"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230103094801914.png" alt="image-20230103094801914"></p><h1 id="字符串的方法"><a href="#字符串的方法" class="headerlink" title="字符串的方法"></a>字符串的方法</h1><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="简介-4"><a href="#简介-4" class="headerlink" title="简介"></a>简介</h2><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>字符串和正则相关的语法</p><h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><p>有序数组</p><p>可以保存任意类型的数据</p><p>– 使用构造器： </p><p>• var arr = new Array(数组的长度); </p><p>• var arr = new Array(123,’hello’,true); </p><p>– 使用[]</p><p>• var arr = []; </p><p>• var arr = [123,’hello’,false];</p><h3 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h3><p>采取时间戳表示一个时间</p><p>所谓的时间戳指的是从 1970年1月1日0时0秒0分开始经过的毫秒数来计算时间。</p><p>直接使用new Date()就可以创建一个Date对象。</p><p>创造对象时不传参数默认创建当前时间。可以传递一个毫秒数 用来创建具体的时间。也可以传递一个日期的字符串，来创建一个时间。</p><p>– 格式为：月份/日/年 时:分:秒 </p><p>– 例如：06/13/2004 12:12:12</p><h3 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h3><p>每一个函数都是一个Function类型的对象</p><p>– function sum(){} </p><p>– var sum = function(){};</p><p>由于存在函数声明提升的过程，第一种方式在函数声明之前就 可以调用函数，而第二种不行。</p><h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><h2 id="简介-5"><a href="#简介-5" class="headerlink" title="简介"></a>简介</h2><p>Document Object Model文档对象模型</p><p>JS中通过DOM来对HTML文档进行操作</p><p>文档表示整个的HTML网页文档</p><p>对象表示将网页中的每一个部分都转换为了一个对象</p><p>使用模型来表示对象之间的关系，这样方便我们获取对象</p><h2 id="文档的加载"><a href="#文档的加载" class="headerlink" title="文档的加载"></a>文档的加载</h2><h2 id="DOM查询"><a href="#DOM查询" class="headerlink" title="DOM查询"></a>DOM查询</h2><h2 id="DOM增删改"><a href="#DOM增删改" class="headerlink" title="DOM增删改"></a>DOM增删改</h2><p>a的索引问题</p><p>操作内联样式</p><p>获取元素的样式</p><p>getstyle()方法</p><p>其他样式的相关属性</p><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><p>div跟随鼠标移动</p><h2 id="事件冒泡"><a href="#事件冒泡" class="headerlink" title="事件冒泡"></a>事件冒泡</h2><h2 id="事件委派"><a href="#事件委派" class="headerlink" title="事件委派"></a>事件委派</h2><h2 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h2><p>完成bind函数</p><h2 id="事件传播"><a href="#事件传播" class="headerlink" title="事件传播"></a>事件传播</h2><p>拖拽</p><p>滚轮事件</p><p>键盘事件</p><p>键盘移动div</p><p>navigator</p><p>history</p><p>location</p><h1 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h1><p>延时调用</p><p>定时器的应用</p><p>完成轮播图界面</p><p>完成点击按钮切换图片</p><p>完成轮播图</p><p>类的操作</p><p>二级菜单</p><p>JSON</p><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230103095042509.png" alt="image-20230103095042509"></p><h2 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h2><p>Node——构成HTML文档最基本的单元。</p><p>常用节点分为四类 </p><p>– 文档节点：整个HTML文档 </p><p>– 元素节点：HTML文档中的HTML标签 </p><p>– 属性节点：元素的属性 </p><p>– 文本节点：HTML标签中的文本内容</p><h3 id="文档节点"><a href="#文档节点" class="headerlink" title="文档节点"></a>文档节点</h3><p>document</p><p>document对象作为window对象的属性存在 的，我们不用获取可以直接使用。</p><h3 id="元素节点"><a href="#元素节点" class="headerlink" title="元素节点"></a>元素节点</h3><p>HTML中的各种标签都是元素节点</p><p>可以通过document的方法来获取元素节点</p><h3 id="文本节点"><a href="#文本节点" class="headerlink" title="文本节点"></a>文本节点</h3><p>文本节点表示的是HTML标签以外的文本内容，任意非HTML的文本 都是文本节点。</p><p>获取文本节点时，一般先要获取元素节点。在通过元素节点获取文本 节点。</p><h3 id="属性节点"><a href="#属性节点" class="headerlink" title="属性节点"></a>属性节点</h3><p>属性节点表示的是标签中的一个一个的属 性</p><p>属性节点并非是元素 节点的子节点，而是元素节点的一部分</p><p>可以通过元素节点来获取指定的属性节点</p><h2 id="事件简介"><a href="#事件简介" class="headerlink" title="事件简介"></a>事件简介</h2><p>文档或浏览器窗口中发生的一 些特定的交互瞬间</p><p>JavaScript 与 HTML 之间的交互是通过事 件实现的</p><h3 id="获取元素节点"><a href="#获取元素节点" class="headerlink" title="获取元素节点"></a>获取元素节点</h3><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230103095633572.png" alt="image-20230103095633572"></p><h3 id="获取元素节点的子节点"><a href="#获取元素节点的子节点" class="headerlink" title="获取元素节点的子节点"></a>获取元素节点的子节点</h3><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230103095806378.png" alt="image-20230103095806378"></p><h3 id="获取父节点和兄弟节点"><a href="#获取父节点和兄弟节点" class="headerlink" title="获取父节点和兄弟节点"></a>获取父节点和兄弟节点</h3><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230103095856032.png" alt="image-20230103095856032"></p><h3 id="元素节点的属性"><a href="#元素节点的属性" class="headerlink" title="元素节点的属性"></a>元素节点的属性</h3><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230103095928048.png" alt="image-20230103095928048"></p><h3 id="其他属性"><a href="#其他属性" class="headerlink" title="其他属性"></a>其他属性</h3><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230103095947528.png" alt="image-20230103095947528"></p><h3 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h3><p>• querySelector() </p><p>• querySelectorAll()</p><p>传递一个选择器字符串作为参数，方法会自动根据选择器 字符串去网页中查找元素。</p><p>不同的地方是querySelector()只会返回找到的第一个元素</p><p>而 querySelectorAll()会返回所有符合条件的元素。</p><h3 id="节点的修改"><a href="#节点的修改" class="headerlink" title="节点的修改"></a>节点的修改</h3><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20230103100108229.png" alt="image-20230103100108229"></p><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><h2 id="事件处理程序"><a href="#事件处理程序" class="headerlink" title="事件处理程序"></a>事件处理程序</h2><p>我们可以通过两种方式为一个元素绑定事件处理程序： </p><p>– 通过HTML元素指定事件属性来绑定 </p><p>– 通过DOM对象指定的属性来绑定</p><p>-  设置事件监听器 – 元素对象.addEventListener()</p><h3 id="通过HTML标签的属性设置"><a href="#通过HTML标签的属性设置" class="headerlink" title="通过HTML标签的属性设置"></a>通过HTML标签的属性设置</h3><h3 id="通过DOM对象的属性绑定"><a href="#通过DOM对象的属性绑定" class="headerlink" title="通过DOM对象的属性绑定"></a>通过DOM对象的属性绑定</h3><h3 id="设置事件监听器"><a href="#设置事件监听器" class="headerlink" title="设置事件监听器"></a>设置事件监听器</h3><p>addEventListener()</p><p>这个方法需 要两个参数：一个是事件字符串，一个是响应函数。</p><p>使用removeEventListener()和detachEvent()移除事件</p><h2 id="事件对象-1"><a href="#事件对象-1" class="headerlink" title="事件对象"></a>事件对象</h2><p>在DOM对象上的某个事件被触发时，会产生一个 事件对象Event，这个对象中包含着所有事件有关 的信息。包括导致事件的元素、事件的类型以及其 他与特定事件相关的信息。</p><h2 id="事件的触发"><a href="#事件的触发" class="headerlink" title="事件的触发"></a>事件的触发</h2><h2 id="事件的传播"><a href="#事件的传播" class="headerlink" title="事件的传播"></a>事件的传播</h2><p>事件的处理将会分为捕获阶段、目标阶段、事件冒泡这三个阶段。</p><p>取消事件传播</p><p>我们可以使用event对象的两个方法完成： </p><p>– stopPropagation() </p><p>– stopImmediatePropagation() </p><p>•取消默认行为： – preventDefault()</p><h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><p>浏览器对象模型</p><h2 id="windows对象"><a href="#windows对象" class="headerlink" title="windows对象"></a>windows对象</h2><p>window对象是BOM的核心，它表示一个浏览器的实例</p><p>window对象是浏览器中的全局对象，因此所有在全局作用 域中声明的变量、对象、函数都会变成window对象的属性 和方法</p><h3 id="窗口大小"><a href="#窗口大小" class="headerlink" title="窗口大小"></a>窗口大小</h3><h3 id="打开窗口"><a href="#打开窗口" class="headerlink" title="打开窗口"></a>打开窗口</h3><p>使用 window.open() 方法既可以导航到一个 特定的 URL，也可以打开一个新的浏览器窗口</p><p>– 需要加载的url地址 </p><p>– 窗口的目标 </p><p>– 一个特性的字符串 </p><p>– 是否创建新的历史记录</p><h3 id="超时调用"><a href="#超时调用" class="headerlink" title="超时调用"></a>超时调用</h3><h3 id="间歇调用"><a href="#间歇调用" class="headerlink" title="间歇调用"></a>间歇调用</h3><h3 id="系统对话框"><a href="#系统对话框" class="headerlink" title="系统对话框"></a>系统对话框</h3><p>浏览器通过 alert() 、 confirm() 和 prompt()  方法可以调用系统对话框向用户显示消息。</p><h2 id="location对象"><a href="#location对象" class="headerlink" title="location对象"></a>location对象</h2><p>location对象提供了与当前窗口中加载的文档有关的信息，还提供了一些导 航功能。</p><h2 id="navigator对象"><a href="#navigator对象" class="headerlink" title="navigator对象"></a>navigator对象</h2><p>navigator 对象包含了浏览器的版本、浏览 器所支持的插件、浏览器所使用的语言等 各种与浏览器相关的信息</p><h2 id="screen对象"><a href="#screen对象" class="headerlink" title="screen对象"></a>screen对象</h2><p>screen 对象基本上只用来表明客户端的能 力，其中包括浏览器窗口外部的显示器的 信息，如像素宽度和高度等。</p><h2 id="history对象"><a href="#history对象" class="headerlink" title="history对象"></a>history对象</h2><p>history 对象保存着用户上网的历史记录， 从窗口被打开的那一刻算起</p><h2 id="document对象"><a href="#document对象" class="headerlink" title="document对象"></a>document对象</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;前端三件套——JavaScript基础知识&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;两周速通 14 Days&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="学习札记" scheme="https://www.kmoon.fun/categories/%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://www.kmoon.fun/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>记录手敲Python爬虫案例练习“</title>
    <link href="https://www.kmoon.fun/2022/spider-example/"/>
    <id>https://www.kmoon.fun/2022/spider-example/</id>
    <published>2022-12-24T06:56:28.000Z</published>
    <updated>2022-12-25T13:34:25.896Z</updated>
    
    <content type="html"><![CDATA[<p>10000小时法则</p><p>目前争取每周写一个爬虫小实例</p><p>找接口-&gt;模拟请求-&gt;解析-&gt;下载-&gt;入库</p><span id="more"></span><h1 id="Urllib爬虫模板"><a href="#Urllib爬虫模板" class="headerlink" title="Urllib爬虫模板"></a>Urllib爬虫模板</h1><p>自己写的一个利用urllib库的爬虫模板</p><p>只满足简单的get和post请求 特殊情况需要修改函数代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># _*_ coding : utf-8 _*_</span><span class="token comment"># @Time : 2022-12-24 11:40</span><span class="token comment"># @Author : Kmoon_Hs</span><span class="token comment"># @File : urllib爬虫模板</span><span class="token keyword">import</span> json<span class="token keyword">import</span> os<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token comment"># 找到接口url</span><span class="token keyword">def</span> <span class="token function">request_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 若出现多个请求地址 可以循环</span>    url<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入请求的URL地址："</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> url<span class="token comment"># 请求对象定制</span><span class="token keyword">def</span> <span class="token function">create_request</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 修改请求头 可能出现需要cookie、token情况</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'Cookie'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span>    <span class="token punctuation">}</span>    <span class="token comment"># post 请求</span>    method<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入请求方式："</span><span class="token punctuation">)</span>    <span class="token comment"># 表单数据少的情况下 例如百度翻译只有一个参数，可以选择手动输入</span>    <span class="token comment"># 表单数据多的情况下 建议直接创建data字典对象</span>    <span class="token keyword">if</span> method<span class="token operator">==</span><span class="token string">'post'</span><span class="token punctuation">:</span>        <span class="token comment"># post 请求表单数据</span>        data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"请分别输入data的字段和值:(输入# #结束)"</span><span class="token punctuation">)</span>        flag<span class="token operator">=</span><span class="token boolean">True</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>            key<span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>            data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token operator">=</span>value            <span class="token keyword">if</span><span class="token punctuation">(</span>key<span class="token operator">==</span><span class="token string">'#'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                flag<span class="token operator">=</span><span class="token boolean">False</span>        <span class="token comment"># 编码</span>        data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        request<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token comment"># get 请求</span>        request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    <span class="token keyword">return</span> request<span class="token comment"># 模拟浏览器发送请求</span><span class="token keyword">def</span> <span class="token function">get_content</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    response<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    content<span class="token operator">=</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> content<span class="token comment"># 下载数据到本地</span><span class="token keyword">def</span> <span class="token function">down_load</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>    filename<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入下载文件的文件名（包含后缀名）:'</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>        <span class="token comment"># 若数据为json对象</span>        <span class="token comment"># content=str(json.loads(content))</span>        <span class="token comment"># 若直接下载网页</span>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token comment"># 下载图片到本地</span><span class="token keyword">def</span> <span class="token function">download_img</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>    obj<span class="token operator">=</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token comment"># 创建一层目录</span>    <span class="token builtin">dir</span><span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入文件夹名:"</span><span class="token punctuation">)</span>    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\\%s"</span> <span class="token operator">%</span><span class="token builtin">dir</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> data <span class="token keyword">in</span> obj<span class="token punctuation">:</span>        url<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">'cover_url'</span><span class="token punctuation">]</span>        name<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span>        urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>url<span class="token punctuation">,</span><span class="token string">'./'</span><span class="token operator">+</span><span class="token builtin">dir</span><span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">'.jpg'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 获取请求地址</span>    url<span class="token operator">=</span>request_url<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 请求对象定制</span>    request<span class="token operator">=</span>create_request<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token comment"># 发送请求获取数据</span>    content<span class="token operator">=</span>get_content<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    <span class="token comment"># 解析数据 下载文件</span>    down_load<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token comment"># 下载图片</span>    download_img<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="百度翻译"><a href="#百度翻译" class="headerlink" title="百度翻译"></a>百度翻译</h1><p>获取翻译(详细)结果</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># _*_ coding : utf-8 _*_</span><span class="token comment"># @Time : 2022-12-24 9:59</span><span class="token comment"># @Author : Kmoon_Hs</span><span class="token comment"># @File : post请求百度翻译</span><span class="token keyword">import</span> json<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token keyword">def</span> <span class="token function">Fanyi</span><span class="token punctuation">(</span>kw<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'https://fanyi.baidu.com/sug'</span>    data <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'kw'</span><span class="token punctuation">:</span> <span class="token string">'%s'</span> <span class="token operator">%</span>kw    <span class="token punctuation">}</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.139 Safari/537.36'</span>    <span class="token punctuation">}</span>    <span class="token comment"># post请求的参数 必须要进行utf-8编码</span>    data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token comment"># 返回结果为json数据，content实际为&lt;class 'str'&gt;类型,需要转为json对象</span>    obj <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token comment"># print(type(obj))  obj为&lt;class 'dict'&gt;类型</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> obj<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment"># Python的程序入口</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    kw <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入你要查询的单词："</span><span class="token punctuation">)</span>    Fanyi<span class="token punctuation">(</span>kw<span class="token punctuation">)</span>        <span class="token comment"># 百度翻译详细翻译</span><span class="token comment"># _*_ coding : utf-8 _*_</span><span class="token comment"># @Time : 2022-12-24 10:53</span><span class="token comment"># @Author : Kmoon_Hs</span><span class="token comment"># @File : post请求百度详细翻译</span><span class="token keyword">import</span> json<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl<span class="token operator">=</span><span class="token string">'https://fanyi.baidu.com/v2transapi?from=en&amp;to=zh'</span>data<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">'from'</span><span class="token punctuation">:</span><span class="token string">'en'</span><span class="token punctuation">,</span>    <span class="token string">'to'</span><span class="token punctuation">:</span> <span class="token string">'zh'</span><span class="token punctuation">,</span>    <span class="token string">'query'</span><span class="token punctuation">:</span> <span class="token string">'moon'</span><span class="token punctuation">,</span>    <span class="token string">'transtype'</span><span class="token punctuation">:</span> <span class="token string">'realtime'</span><span class="token punctuation">,</span>    <span class="token string">'simple_means_flag'</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>    <span class="token string">'sign'</span><span class="token punctuation">:</span> <span class="token string">'22215.308726'</span><span class="token punctuation">,</span>    <span class="token string">'token'</span><span class="token punctuation">:</span> <span class="token string">'567bef1dcb84140e79fed79f4d4888dd'</span><span class="token punctuation">,</span>    <span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'common'</span><span class="token punctuation">}</span>headers<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token comment"># 详细翻译需要定制cookie</span>    <span class="token string">'Cookie'</span><span class="token punctuation">:</span> <span class="token string">'xxx'</span><span class="token punctuation">}</span>data<span class="token operator">=</span>urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>request<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>response<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>content<span class="token operator">=</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>obj<span class="token operator">=</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="豆瓣电影"><a href="#豆瓣电影" class="headerlink" title="豆瓣电影"></a>豆瓣电影</h1><p>下载电影封面图片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># _*_ coding : utf-8 _*_</span><span class="token comment"># @Time : 2022-12-24 11:10</span><span class="token comment"># @Author : Kmoon_Hs</span><span class="token comment"># @File : get请求豆瓣电影</span><span class="token keyword">import</span> json<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token comment"># 下载多页数据有两种方法：1.修改start参数 2.修改limit参数</span>url<span class="token operator">=</span><span class="token string">'https://movie.douban.com/j/chart/top_list?type=13&amp;interval_id=100%3A90&amp;action=&amp;start=0&amp;limit=20'</span><span class="token comment"># https://movie.douban.com/j/chart/top_list?type=13&amp;interval_id=100%3A90&amp;action=&amp;start=20&amp;limit=20</span>headers<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.139 Safari/537.36'</span><span class="token punctuation">}</span>request<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>response<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>content<span class="token operator">=</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>obj<span class="token operator">=</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token comment"># open方法默认情况下使用的是gbk的编码  如果我们要想保存汉字 那么需要在open方法中指定编码格式为utf-8</span><span class="token comment"># with open('doubanmovies.json','w',encoding='utf-8') as fp:</span><span class="token comment">#     fp.write(content)</span><span class="token comment"># 下载电影封面图片</span><span class="token keyword">for</span> i <span class="token keyword">in</span> obj<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token punctuation">[</span><span class="token string">'rating'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token punctuation">[</span><span class="token string">'cover_url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token string">'cover_url'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'./image/'</span><span class="token operator">+</span>i<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'.jpg'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="麦当劳"><a href="#麦当劳" class="headerlink" title="麦当劳"></a>麦当劳</h1><p>获取麦当劳门店地址（使用urllib模板）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># _*_ coding : utf-8 _*_</span><span class="token comment"># @Time : 2022-12-24 12:30</span><span class="token comment"># @Author : Kmoon_Hs</span><span class="token comment"># @File : post请求麦当劳官网</span><span class="token keyword">import</span> urllib爬虫模板 <span class="token keyword">as</span> lib<span class="token comment"># url = https://www.mcdonalds.com.cn/ajaxs/search_by_point</span><span class="token comment"># POST</span><span class="token comment"># 表单数据 point: 31.23136,121.47004 推测为经纬度坐标</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 获取请求地址</span>    url<span class="token operator">=</span>lib<span class="token punctuation">.</span>request_url<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 请求对象定制</span>    request<span class="token operator">=</span>lib<span class="token punctuation">.</span>create_request<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token comment"># 发送请求获取数据</span>    content<span class="token operator">=</span>lib<span class="token punctuation">.</span>get_content<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    <span class="token comment"># 解析数据 下载文件</span>    lib<span class="token punctuation">.</span>down_load<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token comment"># 下载图片</span>    <span class="token comment"># download_img(content)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="携程旅游"><a href="#携程旅游" class="headerlink" title="携程旅游"></a>携程旅游</h3><p>获取景点评论数据</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># _*_ coding : utf-8 _*_</span><span class="token comment"># @Time : 2022-12-25 8:59</span><span class="token comment"># @Author : Kmoon_Hs</span><span class="token comment"># @File : 景区评论——携程</span><span class="token keyword">import</span> json<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token keyword">import</span> pymysql<span class="token keyword">global</span> countcount<span class="token operator">=</span><span class="token number">0</span><span class="token comment"># 查询景点对应poiID</span><span class="token keyword">def</span> <span class="token function">get_poiID</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">:</span>    url<span class="token operator">=</span><span class="token string">'https://m.ctrip.com/restapi/h5api/globalsearch/search?'</span>    data<span class="token operator">=</span><span class="token punctuation">{</span>        <span class="token string">'action'</span><span class="token punctuation">:</span><span class="token string">'gsonline'</span><span class="token punctuation">,</span>        <span class="token string">'source'</span><span class="token punctuation">:</span><span class="token string">'globalonline'</span><span class="token punctuation">,</span>        <span class="token string">'keyword'</span><span class="token punctuation">:</span><span class="token string">'%s'</span> <span class="token operator">%</span> word<span class="token punctuation">,</span>        <span class="token string">'t'</span><span class="token punctuation">:</span><span class="token string">'1671936524797'</span>    <span class="token punctuation">}</span>    data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    url<span class="token operator">=</span>url<span class="token operator">+</span>data    response<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    content<span class="token operator">=</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    obj<span class="token operator">=</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token keyword">return</span> obj<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'poiId'</span><span class="token punctuation">]</span><span class="token comment"># 请求对象定制</span><span class="token keyword">def</span> <span class="token function">create_request</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>poiId<span class="token punctuation">,</span>page<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 修改请求头 可能出现需要cookie、token情况</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4173.2 Safari/537.36'</span><span class="token punctuation">,</span>        <span class="token string">'cookie'</span><span class="token punctuation">:</span> <span class="token string">'xxxxxxx'</span><span class="token punctuation">,</span>        <span class="token string">'referer'</span><span class="token punctuation">:</span> <span class="token string">'https://detail.tmall.com/'</span><span class="token punctuation">,</span>        <span class="token string">'Content-Type'</span><span class="token punctuation">:</span> <span class="token string">'text/plain'</span>    <span class="token punctuation">}</span>    <span class="token comment"># post 请求表单数据</span>    data <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"arg"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>            <span class="token string">"channelType"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>            <span class="token string">"collapseType"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"commentTagId"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token comment"># 评论标签ID 0-默认全部</span>            <span class="token string">"pageIndex"</span><span class="token punctuation">:</span> <span class="token string">'%s'</span> <span class="token operator">%</span> page<span class="token punctuation">,</span>     <span class="token comment"># 第几页</span>            <span class="token string">"pageSize"</span><span class="token punctuation">:</span> <span class="token string">'%s'</span> <span class="token operator">%</span> pageSize<span class="token punctuation">,</span>     <span class="token comment"># 每页显示多少条评论</span>            <span class="token string">"poiId"</span><span class="token punctuation">:</span> <span class="token string">'%s'</span> <span class="token operator">%</span> poiId<span class="token punctuation">,</span>    <span class="token comment"># 景点ID</span>            <span class="token string">"sourceType"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>            <span class="token string">"sortType"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>      <span class="token comment"># 排序类型 3-智能排序 1-时间排序</span>            <span class="token string">"starType"</span><span class="token punctuation">:</span> <span class="token number">0</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment"># 编码</span>    <span class="token comment"># 对于请求参数中嵌套了字典类型的数据，需对嵌套的字典数据进行序列化</span>    <span class="token comment"># 先将嵌套的data进行序列化</span>    data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    request<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> request<span class="token comment"># 模拟浏览器发送请求</span><span class="token keyword">def</span> <span class="token function">get_content</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    response<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    content<span class="token operator">=</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> content<span class="token comment"># 下载数据到本地</span><span class="token keyword">def</span> <span class="token function">down_load</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">:</span>    content <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    datas<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment"># 遍历当前页每一条评论</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">:</span>        base <span class="token operator">=</span> content<span class="token punctuation">[</span><span class="token string">'result'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'items'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">if</span> base<span class="token punctuation">[</span><span class="token string">'userInfo'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token boolean">None</span><span class="token punctuation">:</span>            userNick <span class="token operator">=</span> <span class="token string">'匿名用户'</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            userNick <span class="token operator">=</span> base<span class="token punctuation">[</span><span class="token string">'userInfo'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'userNick'</span><span class="token punctuation">]</span>        <span class="token comment"># 有些用户没有打分 暂时没有想到更好的写法</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>base<span class="token punctuation">[</span><span class="token string">'scores'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">:</span>            scores_View<span class="token operator">=</span>base<span class="token punctuation">[</span><span class="token string">'scores'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span>            scores_Interest <span class="token operator">=</span> base<span class="token punctuation">[</span><span class="token string">'scores'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span>            scores_Cost <span class="token operator">=</span> base<span class="token punctuation">[</span><span class="token string">'scores'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span>        <span class="token keyword">elif</span> <span class="token builtin">len</span><span class="token punctuation">(</span>base<span class="token punctuation">[</span><span class="token string">'scores'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">:</span>            scores_View <span class="token operator">=</span> base<span class="token punctuation">[</span><span class="token string">'scores'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span>            scores_Interest <span class="token operator">=</span> base<span class="token punctuation">[</span><span class="token string">'scores'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span>        <span class="token keyword">elif</span> <span class="token builtin">len</span><span class="token punctuation">(</span>base<span class="token punctuation">[</span><span class="token string">'scores'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>            scores_View <span class="token operator">=</span> base<span class="token punctuation">[</span><span class="token string">'scores'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            scores_View<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>            scores_Interest<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>            scores_Cost<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>        scores<span class="token operator">=</span><span class="token punctuation">[</span>scores_View<span class="token punctuation">,</span>scores_Interest<span class="token punctuation">,</span>scores_Cost<span class="token punctuation">]</span>        comment<span class="token operator">=</span>base<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span>        address<span class="token operator">=</span>base<span class="token punctuation">[</span><span class="token string">'ipLocatedName'</span><span class="token punctuation">]</span>        sendTime<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>base<span class="token punctuation">[</span><span class="token string">'publishTypeTag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">global</span> count        count<span class="token operator">+=</span><span class="token number">1</span>        <span class="token comment"># print(userNick,scores,comment,address,sendTime)</span>        datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span>userNick<span class="token punctuation">,</span>scores<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>scores<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>scores<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>comment<span class="token punctuation">,</span>address<span class="token punctuation">,</span>sendTime<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> datas<span class="token keyword">def</span> <span class="token function">CreateDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 建立数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">'123456'</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">'spider01'</span><span class="token punctuation">,</span> charset<span class="token operator">=</span><span class="token string">'utf8mb4'</span><span class="token punctuation">)</span>    <span class="token comment"># 获取游标对象</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 创建表，如果表已经存在，注意主键不要重复，否则出错</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'create table ScenicspotComments(id int primary key,Spotname varchar(256),userNick varchar(500),scores_View int,scores_Interest  int,scores_Cost  int,comment varchar(1000),address varchar(256),sendTime varchar(128)) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'表已存在'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">InsertDatabase</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">,</span>Spotname<span class="token punctuation">,</span>userNick<span class="token punctuation">,</span>scores_View<span class="token punctuation">,</span>scores_Interest<span class="token punctuation">,</span>scores_Cost<span class="token punctuation">,</span>comment<span class="token punctuation">,</span>address<span class="token punctuation">,</span>sendTime<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 建立数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">'123456'</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">'spider01'</span><span class="token punctuation">,</span> charset<span class="token operator">=</span><span class="token string">'utf8mb4'</span><span class="token punctuation">)</span>    <span class="token comment"># 获取游标对象</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 插入数据语句</span>    query <span class="token operator">=</span> <span class="token string">"insert into ScenicspotComments values(%d,'%s','%s',%d,%d,%d,'%s','%s','%s')"</span> <span class="token operator">%</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">,</span>Spotname<span class="token punctuation">,</span>userNick<span class="token punctuation">,</span>scores_View<span class="token punctuation">,</span>scores_Interest<span class="token punctuation">,</span>scores_Cost<span class="token punctuation">,</span>comment<span class="token punctuation">,</span>address<span class="token punctuation">,</span>sendTime<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query<span class="token punctuation">)</span>    <span class="token comment"># 关闭游标，提交，关闭数据库连接</span>    <span class="token comment"># 如果没有这些关闭操作，执行后在数据库中查看不到数据</span>    cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">SelectDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 重新建立数据库连接</span>    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">'123456'</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">'spider01'</span><span class="token punctuation">,</span>charset<span class="token operator">=</span><span class="token string">'utf8mb4'</span><span class="token punctuation">)</span>    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 查询数据库并打印内容</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token triple-quoted-string string">'''select * from ScenicspotComments'''</span><span class="token punctuation">)</span>    results <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> row <span class="token keyword">in</span> results<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>    <span class="token comment"># 关闭</span>    cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># // ['result']['items']</span><span class="token comment"># // 用户名 ['userInfo']['userNick']</span><span class="token comment"># // 用户头像 ['userInfo']['userImage']</span><span class="token comment"># // 评分  ['scores'] 景色[0]['score'] 趣味[1]['score'] 性价比[2]['score']</span><span class="token comment"># // 评论 ['content']</span><span class="token comment"># // 地区 ['ipLocatedName']</span><span class="token comment"># // 发布时间 ['publishTypeTag']</span>word<span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'桃花源古镇'</span><span class="token punctuation">,</span>    <span class="token string">'安仁古镇'</span><span class="token punctuation">,</span>    <span class="token string">'洛带古镇'</span>    <span class="token string">'黄龙溪古镇'</span><span class="token punctuation">,</span>    <span class="token string">'明月山旅游区(潭下村)'</span><span class="token punctuation">,</span>    <span class="token string">'里耶古城'</span><span class="token punctuation">,</span>    <span class="token string">'洪江古商城'</span><span class="token punctuation">,</span>    <span class="token string">'白石山风景区'</span><span class="token punctuation">,</span>    <span class="token string">'淘金小镇'</span><span class="token punctuation">,</span>    <span class="token string">'月牙泉小镇'</span><span class="token punctuation">]</span>Spotlist<span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'桃花源古镇'</span><span class="token punctuation">:</span><span class="token number">79536</span><span class="token punctuation">,</span>    <span class="token string">'安仁古镇'</span><span class="token punctuation">:</span><span class="token number">90181</span><span class="token punctuation">,</span>    <span class="token string">'洛带古镇'</span><span class="token punctuation">:</span><span class="token number">82946</span><span class="token punctuation">,</span>    <span class="token string">'黄龙溪古镇'</span><span class="token punctuation">:</span><span class="token number">81011</span><span class="token punctuation">,</span>    <span class="token string">'明月山旅游区(潭下村)'</span><span class="token punctuation">:</span><span class="token number">10758280</span><span class="token punctuation">,</span>    <span class="token string">'里耶古城'</span><span class="token punctuation">:</span><span class="token number">99742</span><span class="token punctuation">,</span>    <span class="token string">'洪江古商城'</span><span class="token punctuation">:</span><span class="token number">80764</span><span class="token punctuation">,</span>    <span class="token string">'白石山风景区'</span><span class="token punctuation">:</span><span class="token number">101017</span><span class="token punctuation">,</span>    <span class="token string">'淘金小镇'</span><span class="token punctuation">:</span><span class="token number">101436</span><span class="token punctuation">,</span>    <span class="token string">'月牙泉小镇'</span><span class="token punctuation">:</span><span class="token number">30096431</span><span class="token punctuation">}</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 请求对象定制</span>    url<span class="token operator">=</span><span class="token string">'https://m.ctrip.com/restapi/soa2/13444/json/getCommentCollapseList'</span>    <span class="token comment"># 新建数据库</span>    CreateDB<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 遍历景点</span>    <span class="token keyword">for</span> word<span class="token punctuation">,</span>poiId <span class="token keyword">in</span> Spotlist<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># print(word,poiId)</span>        spotname<span class="token operator">=</span>word        <span class="token comment"># 每个景点页数不统一 增加异常处理 数组越界退出程序</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token comment"># 遍历页数 重点修改range右值 目前爬取20页</span>            <span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                request <span class="token operator">=</span> create_request<span class="token punctuation">(</span>url<span class="token punctuation">,</span> poiId<span class="token punctuation">,</span> page<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>                <span class="token comment"># 发送请求获取数据</span>                content <span class="token operator">=</span> get_content<span class="token punctuation">(</span>request<span class="token punctuation">)</span>                <span class="token comment"># 解析数据 下载文件</span>                datas<span class="token operator">=</span>down_load<span class="token punctuation">(</span>content<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>                <span class="token comment"># print(datas)</span>                <span class="token comment"># 插入数据库</span>                <span class="token keyword">for</span> row <span class="token keyword">in</span> datas<span class="token punctuation">:</span>                    InsertDatabase<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>spotname<span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">(</span>IndexError<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"=======爬取完成 共{}条评论数据============"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">finally</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"=======爬取完成 已入库 共{}条评论数据======"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 查询数据库内容 是否插入成功</span>    <span class="token comment"># SelectDatabase()</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;10000小时法则&lt;/p&gt;
&lt;p&gt;目前争取每周写一个爬虫小实例&lt;/p&gt;
&lt;p&gt;找接口-&amp;gt;模拟请求-&amp;gt;解析-&amp;gt;下载-&amp;gt;入库&lt;/p&gt;</summary>
    
    
    
    
    <category term="爬虫案例" scheme="https://www.kmoon.fun/tags/%E7%88%AC%E8%99%AB%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>学习札记-Python爬虫基础入门</title>
    <link href="https://www.kmoon.fun/2022/spider/"/>
    <id>https://www.kmoon.fun/2022/spider/</id>
    <published>2022-12-18T00:51:41.000Z</published>
    <updated>2022-12-25T13:36:20.063Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2022-12-18 ~ 2022.12.22<br>历时四天，过了一遍尚硅谷视频，掌握了基础爬虫知识。<br>接下来计划利用一周时间将所有案例练习全部亲手敲一遍，巩固一下各个库和框架的内容。<br>然后自己写一个爬取携程网特定旅游景点评论数据，导入MySQL数据库(作为乡村文旅项目数据源)</p></blockquote><span id="more"></span><img src="http://image.kmoon.fun//images/202212221721137.png" alt="image-20221222172157807" style="zoom:80%;"><h3 id="案例练习"><a href="#案例练习" class="headerlink" title="案例练习"></a>案例练习</h3><ul><li>post请求百度翻译</li><li>ajax的get请求豆瓣电影</li><li>ajax的post请求肯德基官网</li><li>QQ空间的cookie登录</li><li>xpath获取站长之家素材</li><li>jsonpath解析淘票票</li><li>bs4爬取星巴克数据</li><li>requests cookie登录古诗文网</li><li>超级鹰打码平台使用</li><li>scrapy 58同城</li><li>scrapy 汽车之家</li><li>scrapy 当当网</li><li>scrapy 电影天堂</li><li>scrapy 链接提取器</li><li>scrapy crawlspider 读书网数据入库</li></ul><p><img src="http://image.kmoon.fun//images/202212180855461.png" alt="image-20221218085504392"></p><h1 id="python安装"><a href="#python安装" class="headerlink" title="python安装"></a>python安装</h1><p><a href="http://www.python.org/">http://www.python.org/</a>python3.7</p><h1 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h1><p>用户变量 Path： E:\python\   E:\python\Scripts\</p><p>新添加的路径 E:\python 是Python安装好以后Python.exe 这个可执行文件所在的目录</p><p>新添加的路径 E:\python\Scripts 是Python安装好以后， pip.exe 这个可执行文件所在的目录。</p><h1 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h1><blockquote><p>pip是一个现代的、通用的Python包管理工具。</p><p>提供了对python包的查找、下载、安装、卸载的功能，便于我们对Python的资源包进行管理。</p></blockquote><p>pip -V 查看版本</p><p><img src="http://image.kmoon.fun//images/202212180923100.png" alt="image-20221218092308052"></p><h2 id="修改pip下载源"><a href="#修改pip下载源" class="headerlink" title="修改pip下载源"></a>修改pip下载源</h2><p>默认是从 <a href="https://files.pythonhosted.org/">https://files.pythonhosted.org/</a> 网站上下载</p><p><code>pip install 包名 -i 国内源地址</code></p><p><img src="http://image.kmoon.fun//images/202212180924238.png" alt="image-20221218092445165"></p><h1 id="运行Python"><a href="#运行Python" class="headerlink" title="运行Python"></a>运行Python</h1><h2 id="终端运行"><a href="#终端运行" class="headerlink" title="终端运行"></a>终端运行</h2><ol><li><p>直接在python解释器中书写代码</p><p>退出python环境： exit()  ctrl+Z</p></li><li><p>使用ipython解释器编写代码</p></li></ol><h2 id="运行python文件"><a href="#运行python文件" class="headerlink" title="运行python文件"></a>运行python文件</h2><p>使用python指令运行后缀为.py的python文件</p><h1 id="Pycharm"><a href="#Pycharm" class="headerlink" title="Pycharm"></a>Pycharm</h1><ul><li><p>IDE的概念</p><p><img src="http://image.kmoon.fun//images/202212180930358.png" alt="image-20221218093044306"></p><p><img src="http://image.kmoon.fun//images/202212180931188.png" alt="image-20221218093112140"></p></li><li><p>pycharm安装</p><p><img src="http://image.kmoon.fun//images/202212180931789.png" alt="image-20221218093145748"></p></li><li><p>pycharm使用介绍</p><p>新建工程</p><p><img src="http://image.kmoon.fun//images/202212180932230.png" alt="image-20221218093258173"></p></li></ul><p>扩展：自动生成指定的注释</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># _*_ coding : utf-8 _*_</span><span class="token comment"># @Time : 2022/1/14 15:27</span><span class="token comment"># @Author : Kmoon_Hs</span><span class="token comment"># @File : pythonDemo</span><span class="token comment"># @Project : python基础</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Python基础"><a href="#Python基础" class="headerlink" title="Python基础"></a>Python基础</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>单行注释 #</p><p>多行注释 ‘’’…’’’</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p><code>变量名 = 变量值</code> </p><p><img src="http://image.kmoon.fun//images/202212180939700.png" alt="image-20221218093903637"></p><p><strong>数据才有类型 变量没有类型</strong></p><p>查看数据类型： type(变量名)</p><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p><img src="http://image.kmoon.fun//images/202212180941086.png" alt="image-20221218094102040"></p><p>命名规范</p><ul><li><p>驼峰命名法</p><p><img src="http://image.kmoon.fun//images/202212180941540.png" alt="image-20221218094157498"></p></li><li><p>下划线_</p></li></ul><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><p><img src="http://image.kmoon.fun//images/202212180942893.png" alt="image-20221218094247849"></p><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><p><img src="http://image.kmoon.fun//images/202212180943218.png" alt="image-20221218094324171"></p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul><li>算数运算符</li></ul><p><img src="http://image.kmoon.fun//images/202212180945898.png" alt="image-20221218094559803"></p><blockquote><p>注意：混合运算时，优先级顺序为： ** 高于 * / % // 高于 + - ，为了避免歧义，建议使用 () 来处理运 算符优先级。 并且，不同类型的数字在进行混合运算时，整数将会转换成浮点数进行运算。</p></blockquote><ul><li>赋值运算符</li></ul><p><img src="http://image.kmoon.fun//images/202212180947773.png" alt="image-20221218094724728"></p><p><img src="http://image.kmoon.fun//images/202212180947886.png" alt="image-20221218094735835"></p><ul><li>比较运算符</li></ul><p><img src="http://image.kmoon.fun//images/202212180947426.png" alt="image-20221218094759365"></p><ul><li>逻辑运算符</li></ul><p><img src="http://image.kmoon.fun//images/202212180948606.png" alt="image-20221218094827555"></p><h2 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h2><ol><li><p>输出</p><p>普通输出</p><p>格式化输出 %</p></li><li><p>输入</p><p>input()</p><p><img src="http://image.kmoon.fun//images/202212180951272.png" alt="image-20221218095125223"></p></li></ol><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><ol><li><p>if</p></li><li><p>if else</p></li><li><p>elif</p></li><li><p>for</p></li><li><p>range</p><p>range 可以生成数字供 for 循环遍历,它可以传递三个参数，分别表示 起始、结束和步长</p></li></ol><h2 id="数据类型高级"><a href="#数据类型高级" class="headerlink" title="数据类型高级"></a>数据类型高级</h2><ul><li>字符串</li></ul><p><img src="http://image.kmoon.fun//images/202212180954651.png" alt="image-20221218095450600"></p><p><img src="http://image.kmoon.fun//images/202212180955114.png" alt="image-20221218095501064"></p><ul><li>列表</li></ul><p><strong>添加元素</strong></p><p>append会把新元素添加到列表末尾</p><p>insert(index, object) 在指定位置index前插入元素object</p><p>通过extend可以将另一个列表中的元素逐一添加到列表中</p><p><strong>修改元素</strong></p><p>是通过指定下标来访问列表元素，因此修改元素的时候，为指定的列表下标赋值即可</p><p><strong>查找元素</strong></p><p>in（存在）,如果存在那么结果为true，否则为false </p><p>not in（不存在），如果不存在那么结果为true，否则false</p><p><strong>删除元素</strong></p><p>del：根据下标进行删除 </p><p>pop：删除最后一个元素 </p><p>remove：根据元素的值进行删</p><ul><li>元组</li></ul><p>Python的元组与列表类似，不同之处在于元组的元素不能修改。元组使用小括号，列表使用方括号。</p><p>定义只有一个元素的元组，需要在唯一的元素后写一个逗号</p><p><img src="http://image.kmoon.fun//images/202212180959953.png" alt="image-20221218095928900"></p><ul><li>切片</li></ul><p>切片是指对操作的对象截取其中一部分的操作。字符串、列表、元组都支持切片操作。</p><p>切片的语法：<code>[起始:结束:步长]</code>，也可以简化使用 [起始:结束]</p><p>注意：选取的区间从”起始”位开始，到”结束”位的前一位结束（<strong>不包含结束位本身</strong>)，步长表示选取间隔。</p><ul><li>字典</li></ul><p><strong>查看元素</strong></p><p>key</p><p>get</p><p><img src="http://image.kmoon.fun//images/202212181001216.png" alt="image-20221218100136143"></p><p><strong>修改元素</strong></p><p>字典的每个元素中的数据是可以修改的，只要通过key找到，即可修改</p><p><strong>添加元素</strong></p><p>如果在使用 变量名[‘键’] = 数据 时，这个“键”在字典中，不存在，那么就会新增这个元素</p><p><strong>删除元素</strong></p><p>del:</p><p>del 可以通过键删除字典里的指定元素</p><p>del 也可以直接删除变量 删除整个字典</p><p>clear() 清空整个字典</p><p><strong>遍历</strong></p><p>遍历字典的key（键）</p><p><img src="http://image.kmoon.fun//images/202212181004783.png" alt="image-20221218100421730"></p><p>遍历字典的value（值）</p><p><img src="http://image.kmoon.fun//images/202212181004359.png" alt="image-20221218100433309"></p><p>遍历字典的项（元素）</p><p><img src="http://image.kmoon.fun//images/202212181004497.png" alt="image-20221218100443446"></p><p>遍历字典的key-value（键值对）</p><p><img src="http://image.kmoon.fun//images/202212181004633.png" alt="image-20221218100452581"></p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>定义函数</p><p><img src="http://image.kmoon.fun//images/202212181005039.png" alt="image-20221218100529988"></p><p>调用函数</p><p>函数参数</p><p><img src="http://image.kmoon.fun//images/202212181006248.png" alt="image-20221218100639196"></p><blockquote><p>定义时小括号中的参数，用来接收参数用的，称为 “形参” </p><p>调用时小括号中的参数，用来传递给函数用的，称为 “实参”</p></blockquote><p>函数返回值 return</p><p>局部变量</p><blockquote><p>局部变量，就是在函数内部定义的变量</p><p>其作用范围是这个函数内部，即只能在这个函数中使用，在函数的外部是不能使用的</p></blockquote><p>全局变量</p><blockquote><p>在函数外边定义的变量叫做 全局变量 </p><p>全局变量能够在所有的函数中进行访问</p></blockquote><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><ol><li>文件的打开与关闭</li></ol><p><strong>打开文件/创建文件</strong></p><p>在python，使用open函数，可以打开一个已经存在的文件，或者创建一个新文件 </p><p><code>open(文件路径，访问模式)</code></p><p><strong>文件路径</strong></p><p><img src="http://image.kmoon.fun//images/202212181010648.png" alt="image-20221218101033587"></p><p><strong>访问模式</strong></p><p><img src="http://image.kmoon.fun//images/202212181011706.png" alt="image-20221218101134620"></p><ol start="2"><li>文件的读写</li></ol><p><strong>写数据write</strong></p><p>使用write()可以完成向文件写入数据</p><blockquote><p>如果文件不存在，那么创建；如果存在那么就先清空，然后写入数据</p></blockquote><p><strong>读数据read</strong></p><p>使用read(num)可以从文件中读取数据，num表示要从文件中读取的数据的长度（单位是字节），如果没有传入 num，那么就表示读取文件中所有的数据</p><blockquote><p>如果用open打开文件时，如果使用的”r”，那么可以省略 open(‘test.txt’)</p></blockquote><p><strong>读数据readline</strong></p><p>readline只用来读取一行数据</p><p><strong>读数据readlines</strong></p><p>readlines可以按照行的方式把整个文件中的内容进行一次性读取，并且返回的是一个列表，其中每一行为列表的 一个元素</p><ol start="3"><li>序列化和反序列化</li></ol><blockquote><p>原因在于<strong>文件的写入操作不支持字典、元组、列表等对象的写入操作，因而需要先序列化后写入文件</strong>，而后读出时执行反序列化操作。</p></blockquote><p>通过文件操作，我们可以将字符串写入到一个本地文件。</p><p>但是，如果是一个<strong>对象</strong>(例如列表、字典、元组等)，就无法直接写入到一个文件里，需要对这个对象进行序列化，然后才能写入到文件里。</p><p>设计一套协议，按照某种规则，把内存中的数据转换为<strong>字节序列</strong>，保存到文件，这就是<strong>序列化</strong>，反之，从文件的字节序列恢复到内存中，就是<strong>反序列化</strong>。</p><blockquote><p>对象—》字节序列 === 序列化 </p></blockquote><blockquote><p>字节序列–》对象 ===反序列化</p></blockquote><p>Python中提供了JSON这个模块用来实现数据的序列化和反序列化。</p><p><strong>JSON模块</strong></p><blockquote><p>JSON(JavaScriptObjectNotation, JS对象简谱)是一种轻量级的数据交换标准。JSON的本质是字符串。</p></blockquote><p><strong>使用JSON实现序列化</strong></p><p>JSON提供了dump和dumps方法，将一个对象进行序列化。</p><p>dumps方法的作用是<strong>把对象转换成为字符串</strong>，它本身不具备将数据写入到文件的功能。</p><p><img src="http://image.kmoon.fun//images/202212181020364.png" alt="image-20221218102055300"></p><p>dump方法可以在将对象转换成为字符串的同时，指定一个文件对象，把转换后的字符串写入到这个文件里。</p><blockquote><p>dump方法可以接收一个文件参数，在将对象转换成为字符串的同时写入到文件里</p></blockquote><p><img src="http://image.kmoon.fun//images/202212181020026.png" alt="image-20221218102043962"></p><p><strong>使用JSON实现反序列化</strong></p><p>使用loads和load方法，可以将一个JSON字符串反序列化成为一个Python对象。</p><p>loads方法需要一个字符串参数，用来将一个字符串加载成为Python对象。</p><p><img src="http://image.kmoon.fun//images/202212181020612.png" alt="image-20221218102014553"></p><p>load方法可以传入一个文件对象，用来将一个文件对象里的数据加载成为Python对象。</p><p><img src="http://image.kmoon.fun//images/202212181020035.png" alt="image-20221218102028970"></p><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><ol><li><p>读取文件异常</p><p>在读取一个文件时，如果这个文件不存在，则会报出 <code>FileNotFoundError</code>错误。</p></li><li><p>try…except语句</p><p>try…except语句可以对代码运行过程中可能出现的异常进行处理。</p><p><img src="http://image.kmoon.fun//images/202212181022726.png" alt="image-20221218102249664"></p></li></ol><h1 id="页面结构"><a href="#页面结构" class="headerlink" title="页面结构"></a>页面结构</h1><img src="http://image.kmoon.fun//images/202212181028347.png" alt="image-20221218102849264" style="zoom:80%;"><p>tabel 表格</p><p>tr 行</p><p>td 列</p><p>ul 无序列表</p><p>ol 有序列表</p><p>li 项</p><p>a 超链接</p><hr><h1 id="爬虫概念"><a href="#爬虫概念" class="headerlink" title="爬虫概念"></a>爬虫概念</h1><ol><li><p>什么是互联网爬虫</p><ul><li><p>解释1：通过一个程序，根据Url(<a href="http://www.taobao.com)进行爬取网页,获取有用信息/">http://www.taobao.com)进行爬取网页，获取有用信息</a> </p></li><li><p>解释2：使用程序模拟浏览器，去向服务器发送请求，获取响应信息</p></li></ul></li><li><p>爬虫的核心</p><ul><li>1.爬取网页：爬取整个网页 包含了网页中所有得内容 </li><li>2.解析数据：将网页中你得到的数据 进行解析 </li><li>3.难点：爬虫和反爬虫之间的博弈</li></ul></li><li><p>爬虫的用途</p><ul><li>数据分析/人工数据集</li><li>社交软件冷启动</li><li>舆情监控</li><li>竞争对手监控</li></ul></li><li><p>爬虫分类</p><p><img src="http://image.kmoon.fun//images/202212181049872.png" alt="image-20221218104922781"></p></li><li><p>反爬手段</p><img src="http://image.kmoon.fun//images/202212181053406.png" alt="image-20221218105314334"></li></ol><h1 id="Urllib"><a href="#Urllib" class="headerlink" title="Urllib"></a>Urllib</h1><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p><img src="http://image.kmoon.fun//images/202212181057352.png" alt="image-20221218105722277"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 使用urllib来获取百度首页的源码</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token comment"># (1)定义一个url  就是你要访问的地址</span>url <span class="token operator">=</span> <span class="token string">'http://www.baidu.com'</span><span class="token comment"># (2)模拟浏览器向服务器发送请求 response响应</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment"># （3）获取响应中的页面的源码  content 内容的意思</span><span class="token comment"># read方法  返回的是字节形式的二进制数据</span><span class="token comment"># 我们要将二进制的数据转换为字符串</span><span class="token comment"># 二进制--》字符串  解码  decode('编码的格式')</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># （4）打印数据</span><span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果<strong>不解码，获得的内容将会是二进制的格式</strong>，不利于我们的正常使用。</p><h2 id="1个类型6个方法"><a href="#1个类型6个方法" class="headerlink" title="1个类型6个方法"></a>1个类型6个方法</h2><p>类型; </p><p>response是HTTPResponse的类型</p><p>方法：</p><ul><li>read()按照一个字节一个字节去读</li><li>read(num)读取num个字节</li><li>readline()      读取一行</li><li>readlines()     逐行读取</li><li>getcode()      返回状态码</li><li>geturl()           返回请求网址</li><li>getheaders()  返回状态信息</li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>urllib库之下载图片、音频、视频</p><p><code>urllib.request.urlretrieve()</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 下载网页</span>url_page<span class="token operator">=</span><span class="token string">'http://www.baidu.com'</span><span class="token comment"># 参数url代表的是下载的路径  filename文件的名字</span><span class="token comment"># 在python中 可以变量的名字  也可以直接写值</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>url_page<span class="token punctuation">,</span><span class="token string">'baidu.html'</span><span class="token punctuation">)</span><span class="token comment"># 下载图片</span>url_img<span class="token operator">=</span><span class="token string">'https://img1.baidu.com/it/xxx.jpg'</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>url<span class="token operator">=</span>url_img<span class="token punctuation">,</span>filename<span class="token operator">=</span><span class="token string">'lisa.jpg'</span><span class="token punctuation">)</span><span class="token comment"># 下载视频</span>url_video <span class="token operator">=</span> <span class="token string">'https://vd3.bdstatic.com/xxx'</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>url_video<span class="token punctuation">,</span><span class="token string">'hxekyyds.mp4'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="请求对象定制"><a href="#请求对象定制" class="headerlink" title="请求对象定制"></a>请求对象定制</h2><p>UA介绍：User Agent中文名为用户代理，简称 UA，它是一个特殊字符串头，使得服务器能够识别客户使用的操作系统 及版本、CPU 类型、浏览器及版本。</p><p>浏览器内核、浏览器渲染引擎、浏览器语言、浏览器插件等</p><p>语法：<code>request = urllib.request.Request()</code></p><blockquote><p> UA反爬</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># http/https    www.baidu.com   80/443     s      wd = 周杰伦     #</span><span class="token comment">#    协议             主机        端口号     路径     参数          锚点</span>url <span class="token operator">=</span> <span class="token string">'https://www.baidu.com'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">}</span><span class="token comment"># 因为urlopen方法中不能存储字典 所以headers不能传递进去</span><span class="token comment"># 请求对象的定制</span><span class="token comment"># 因为参数顺序的问题 需要关键字传参</span>request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="编解码"><a href="#编解码" class="headerlink" title="编解码"></a>编解码</h2><h3 id="1-get请求方式：urllib-parse-quote（）"><a href="#1-get请求方式：urllib-parse-quote（）" class="headerlink" title="1.get请求方式：urllib.parse.quote（）"></a>1.get请求方式：urllib.parse.quote（）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token comment"># 将周杰伦三个字变成unicode编码的格式</span><span class="token comment"># 我们需要依赖于urllib.parse</span><span class="token comment"># 将中文汉字转为Unicode编码</span>name <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>quote<span class="token punctuation">(</span><span class="token string">'周杰伦'</span><span class="token punctuation">)</span>url <span class="token operator">=</span> url <span class="token operator">+</span> namerequest <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf‐8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-get请求方式：urllib-parse-urlencode（）"><a href="#2-get请求方式：urllib-parse-urlencode（）" class="headerlink" title="2.get请求方式：urllib.parse.urlencode（）"></a>2.get请求方式：urllib.parse.urlencode（）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parseurl <span class="token operator">=</span> <span class="token string">'http://www.baidu.com/s?'</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'小刚'</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment"># 多个参数转Unicode编码</span>data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span>url <span class="token operator">=</span> url <span class="token operator">+</span> data<span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User‐Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36'</span><span class="token punctuation">}</span>request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-post请求方式"><a href="#3-post请求方式" class="headerlink" title="3.post请求方式"></a>3.post请求方式</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">eg<span class="token punctuation">:</span>百度翻译<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parseurl <span class="token operator">=</span> <span class="token string">'https://fanyi.baidu.com/sug'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'user‐agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36'</span><span class="token punctuation">}</span>keyword <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入您要查询的单词'</span><span class="token punctuation">)</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'kw'</span><span class="token punctuation">:</span>keyword<span class="token punctuation">}</span><span class="token comment"># post请求的参数 必须进行编码</span>data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf‐8'</span><span class="token punctuation">)</span><span class="token comment"># post请求的参数 需要放在请求对象定制的参数中</span>request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token comment"># 字符串---&gt;json对象</span><span class="token keyword">import</span> jsonobj <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://image.kmoon.fun//images/202212190858340.png" alt="image-20221219085811105"></p><ul><li>案例练习：百度详细翻译</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parseurl <span class="token operator">=</span> <span class="token string">'https://fanyi.baidu.com/v2transapi?from=en&amp;to=zh'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'Cookie'</span><span class="token punctuation">:</span> <span class="token string">'xxxxxxx'</span><span class="token punctuation">,</span><span class="token comment">#起决定因素</span><span class="token punctuation">}</span>data <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'from'</span><span class="token punctuation">:</span> <span class="token string">'en'</span><span class="token punctuation">,</span>    <span class="token string">'to'</span><span class="token punctuation">:</span> <span class="token string">'zh'</span><span class="token punctuation">,</span>    <span class="token string">'query'</span><span class="token punctuation">:</span> <span class="token string">'love'</span><span class="token punctuation">,</span>    <span class="token string">'transtype'</span><span class="token punctuation">:</span> <span class="token string">'realtime'</span><span class="token punctuation">,</span>    <span class="token string">'simple_means_flag'</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>    <span class="token string">'sign'</span><span class="token punctuation">:</span> <span class="token string">'198772.518981'</span><span class="token punctuation">,</span>    <span class="token string">'token'</span><span class="token punctuation">:</span> <span class="token string">'5483bfa652979b41f9c90d91f3de875d'</span><span class="token punctuation">,</span>    <span class="token string">'domain'</span><span class="token punctuation">:</span> <span class="token string">'common'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment"># post请求的参数  必须进行编码 并且要调用encode方法</span>data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># 请求对象的定制</span>request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span>headers <span class="token operator">=</span> headers<span class="token punctuation">)</span><span class="token comment"># 模拟浏览器向服务器发送请求</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token comment"># 获取响应的数据</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">import</span> jsonobj <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Ajax的get请求"><a href="#Ajax的get请求" class="headerlink" title="Ajax的get请求"></a>Ajax的get请求</h2><ul><li>案例练习：豆瓣电影</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># get请求</span><span class="token comment"># 获取豆瓣电影的第一页的数据 并且保存起来</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl <span class="token operator">=</span> <span class="token string">'https://movie.douban.com/j/chart/top_list?type=5&amp;interval_id=100%3A90&amp;action=&amp;start=0&amp;limit=20'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">}</span><span class="token comment"># (1) 请求对象的定制</span>request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token comment"># （2）获取响应的数据</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># (3) 数据下载到本地</span><span class="token comment"># open方法默认情况下使用的是gbk的编码  如果我们要想保存汉字 那么需要在open方法中指定编码格式为utf-8</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'douban.json'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token comment">#with open('douban1.json','w',encoding='utf-8') as fp:</span><span class="token comment">#    fp.write(content)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>下载豆瓣电影前10页的数据</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># （1） 请求对象的定制</span><span class="token comment"># （2） 获取响应的数据</span><span class="token comment"># （3） 下载数据</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">def</span> <span class="token function">create_request</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">:</span>    base_url <span class="token operator">=</span> <span class="token string">'https://movie.douban.com/j/chart/top_list?type=5&amp;interval_id=100%3A90&amp;action=&amp;'</span>    data <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'start'</span><span class="token punctuation">:</span><span class="token punctuation">(</span>page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">,</span>        <span class="token string">'limit'</span><span class="token punctuation">:</span><span class="token number">20</span>    <span class="token punctuation">}</span>    data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    url <span class="token operator">=</span> base_url <span class="token operator">+</span> data    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span>    <span class="token punctuation">}</span>    request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    <span class="token keyword">return</span> request<span class="token keyword">def</span> <span class="token function">get_content</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> content<span class="token keyword">def</span> <span class="token function">down_load</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'douban_'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.json'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">as</span> fp<span class="token punctuation">:</span>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token comment"># 程序的入口</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    start_page <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入起始的页码'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    end_page <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入结束的页面'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>start_page<span class="token punctuation">,</span>end_page<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#         每一页都有自己的请求对象的定制</span>        request <span class="token operator">=</span> create_request<span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token comment">#         获取响应的数据</span>        content <span class="token operator">=</span> get_content<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token comment">#         下载</span>        down_load<span class="token punctuation">(</span>page<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Ajax的post请求"><a href="#Ajax的post请求" class="headerlink" title="Ajax的post请求"></a>Ajax的post请求</h2><ul><li>案例：KFC官网</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token keyword">def</span> <span class="token function">create_request</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">:</span>    base_url <span class="token operator">=</span> <span class="token string">'http://www.kfc.com.cn/kfccda/ashx/GetStoreList.ashx?op=cname'</span>    data <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'cname'</span><span class="token punctuation">:</span> <span class="token string">'北京'</span><span class="token punctuation">,</span>        <span class="token string">'pid'</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'pageIndex'</span><span class="token punctuation">:</span> page<span class="token punctuation">,</span>        <span class="token string">'pageSize'</span><span class="token punctuation">:</span> <span class="token string">'10'</span>    <span class="token punctuation">}</span>    data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span>    <span class="token punctuation">}</span>    request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>base_url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> request<span class="token keyword">def</span> <span class="token function">get_content</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> content<span class="token keyword">def</span> <span class="token function">down_load</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'kfc_'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.json'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">as</span> fp<span class="token punctuation">:</span>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    start_page <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入起始页码'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    end_page <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入结束页码'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>start_page<span class="token punctuation">,</span>end_page<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 请求对象的定制</span>        request <span class="token operator">=</span> create_request<span class="token punctuation">(</span>page<span class="token punctuation">)</span>        <span class="token comment"># 获取网页源码</span>        content <span class="token operator">=</span> get_content<span class="token punctuation">(</span>request<span class="token punctuation">)</span>        <span class="token comment"># 下载</span>        down_load<span class="token punctuation">(</span>page<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="URLError-HTTPError"><a href="#URLError-HTTPError" class="headerlink" title="URLError\HTTPError"></a>URLError\HTTPError</h2><p>简介:</p><ul><li><p>1.HTTPError类是URLError类的<strong>子类</strong> </p></li><li><p>2.导入的包urllib.error.HTTPError     urllib.error.URLError </p></li><li><p>3.http错误：http错误是针对浏览器无法连接到服务器而增加出来的错误提示。引导并告诉浏览者该页是哪里出 了问题。 </p></li><li><p>4.通过urllib发送请求的时候，有可能会发送失败，这个时候如果想让你的代码更加的健壮，可以通过try‐ except进行捕获异常，异常有两类，URLError\HTTPError</p></li></ul><p><strong>try…except语句</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>error<span class="token comment"># url = 'https://blog.csdn.net/sulixu/article/details/1198189491'</span>url <span class="token operator">=</span> <span class="token string">'http://www.doudan1111.com'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">}</span><span class="token keyword">try</span><span class="token punctuation">:</span>    request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">)</span>    response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">except</span> urllib<span class="token punctuation">.</span>error<span class="token punctuation">.</span>HTTPError<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统正在升级'</span><span class="token punctuation">)</span><span class="token keyword">except</span> urllib<span class="token punctuation">.</span>error<span class="token punctuation">.</span>URLError<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我都说了 系统正在升级'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="cookie登录"><a href="#cookie登录" class="headerlink" title="cookie登录"></a>cookie登录</h2><p>使用案例： 1.微博cookie登陆 </p><p>作业：qq空间的爬取</p><ul><li>适用的场景：数据采集的时候 需要<strong>绕过登陆</strong> 然后进入到某个页</li><li>个人信息页面是utf-8  但是还报错了编码错误  因为并没有进入到个人信息页面 而是跳转到了登陆页面 那么登陆页面不是utf-8  所以报错</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl <span class="token operator">=</span> <span class="token string">'https://weibo.cn/6451491586/info'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'accept-language'</span><span class="token punctuation">:</span> <span class="token string">'zh-CN,zh;q=0.9'</span><span class="token punctuation">,</span><span class="token comment"># cookie中携带着你的登陆信息   如果有登陆之后的cookie  那么我们就可以携带着cookie进入到任何页面</span><span class="token string">'cookie'</span><span class="token punctuation">:</span> <span class="token string">'xxxxxx'</span><span class="token punctuation">,</span><span class="token comment"># referer  判断当前路径是不是由上一个路径进来的    一般情况下 是做图片防盗链</span><span class="token string">'referer'</span><span class="token punctuation">:</span> <span class="token string">'https://weibo.cn/'</span><span class="token punctuation">,</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment"># 请求对象的定制</span>request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token comment"># 模拟浏览器向服务器发送请求</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token comment"># 获取响应的数据</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># 将数据保存到本地</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'weibo.html'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">as</span> fp<span class="token punctuation">:</span>    fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Handler处理器"><a href="#Handler处理器" class="headerlink" title="Handler处理器"></a>Handler处理器</h2><ul><li>为什么要学习handler？</li></ul><p>urllib.request.urlopen(url) 不能定制请求头 </p><p>urllib.request.Request(url,headers,data) 可以定制请求头 </p><p><strong>Handler</strong> </p><p>定制更高级的请求头（随着业务逻辑的复杂 请求对象的定制已经满足不了我们的需求（<strong>动态cookie和代理 不能使用请求对象的定制</strong>）</p><blockquote><p>1.获取handler对象<br>handler = urllib.request.HTTPHandler()</p><p>2.获取opener对象</p><p>opener = urllib.request.build_opener(handler)</p><p>3.调用open方法</p><p>response = opener.open(request)</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl <span class="token operator">=</span> <span class="token string">'http://www.baidu.com'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User ‐ Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla / 5.0(Windows NT 10.0;Win64;x64) AppleWebKit / 537.36(KHTML,likeGecko) Chrome / 74.0.3729.169Safari / 537.36'</span><span class="token punctuation">}</span>request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token comment"># handler build_handler open</span><span class="token comment"># 1.获取handler对象</span>handler <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>HTTPHandler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 2.获取opener对象</span>opener <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>build_opener<span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token comment"># 3.调用open方法</span>response <span class="token operator">=</span> opener<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf‐8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="代理服务器"><a href="#代理服务器" class="headerlink" title="代理服务器"></a>代理服务器</h2><ol><li><p>代理的常用功能? </p><ul><li><p><strong>1.突破自身IP访问限制，访问国外站点。</strong> </p></li><li><p><strong>2.访问一些单位或团体内部资源</strong> </p><p>扩展：某大学FTP(前提是该代理地址在该资源的允许访问范围之内)，使用教育网内地址段免费代理服务器，就可以用于对教育网开放的各类FTP下载上传，以及各类资料查询共享等服务。 </p></li><li><p><strong>3.提高访问速度</strong> </p><p>扩展：通常代理服务器都设置一个较大的<strong>硬盘缓冲区</strong>，当有外界的信息通过时，同时也将其保存到缓冲区中，当其他用户再访问相同的信息时， 则直接由缓冲区中取出信息，传给用户，以提高访问速度。 </p></li><li><p><strong>4.隐藏真实IP</strong> </p><p>扩展：上网者也可以通过这种方法隐藏自己的IP，免受攻击。</p></li></ul></li><li><p>代码配置代理 </p><p>创建Reuqest对象 </p><p>创建<strong>ProxyHandler</strong>对象 </p><p>用handler对象创建opener对象 </p><p>使用opener.open函数发送请求</p></li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl <span class="token operator">=</span> <span class="token string">'http://www.baidu.com/s?wd=ip'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">}</span><span class="token comment"># 请求对象的定制</span>request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span>headers<span class="token operator">=</span> headers<span class="token punctuation">)</span><span class="token comment"># 模拟浏览器访问服务器</span><span class="token comment"># response = urllib.request.urlopen(request)</span>proxies <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'http'</span><span class="token punctuation">:</span><span class="token string">'IP:Port'</span><span class="token punctuation">}</span><span class="token comment"># handler  build_opener  open</span>handler <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>ProxyHandler<span class="token punctuation">(</span>proxies <span class="token operator">=</span> proxies<span class="token punctuation">)</span>opener <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>build_opener<span class="token punctuation">(</span>handler<span class="token punctuation">)</span>response <span class="token operator">=</span> opener<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token comment"># 获取响应的信息</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># 保存</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'daili.html'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">as</span> fp<span class="token punctuation">:</span>    fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>扩展：1.代理池 2.快代理</p><h2 id="代理池"><a href="#代理池" class="headerlink" title="代理池"></a>代理池</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">proxies_pool <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span><span class="token string">'http'</span><span class="token punctuation">:</span><span class="token string">'118.24.219.151:16817'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span><span class="token string">'http'</span><span class="token punctuation">:</span><span class="token string">'118.24.219.151:16817'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token keyword">import</span> randomproxies <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>proxies_pool<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><h3 id="1-xpath"><a href="#1-xpath" class="headerlink" title="1. xpath"></a>1. xpath</h3><blockquote><p>xpath是一门在XML文档中查找信息的语言。xpath可用来在XML文档中对元素和属性进行遍历。</p></blockquote><ul><li><p>xpath使用</p><p>注意：提前安装xpath插件 </p><p>（1）打开chrome浏览器 </p><p>（2）点击右上角小圆点</p><p>（3）更多工具 </p><p>（4）扩展程序 </p><p>（5）拖拽xpath插件到扩展程序中 </p><p>（6）如果crx文件失效，需要将后缀修改zip </p><p>（7）再次拖拽 </p><p>（8）关闭浏览器重新打开 </p><p>（9）ctrl + shift + x </p><p>（10）出现小黑框 </p><p>1.安装lxml库 <code>pip install lxml</code></p><p>2.导入lxml.etree <code>from lxml import etree</code> </p><p>3.etree.parse() 解析本地文件 <code>html_tree=etree.parse('XX.html')</code> </p><p>4.etree.HTML() 服务器响应文件 </p><p><code>html_tree = etree.HTML(response.read().decode('utf‐8')</code> </p><p>5.html_tree.xpath(xpath路径)</p></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token comment"># xpath解析</span><span class="token comment">#（1）本地文件                                       </span><span class="token comment"># etree.parse</span><span class="token comment">#（2）服务器响应的数据  </span><span class="token comment"># response.read().decode('utf-8') *****   etree.HTML()</span><span class="token comment"># xpath解析本地文件</span>tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>parse<span class="token punctuation">(</span><span class="token string">'xxx.html'</span><span class="token punctuation">)</span><span class="token comment">#tree.xpath('xpath路径')</span>tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'xpath路径'</span><span class="token punctuation">)</span><span class="token comment"># 查找ul下面的li</span><span class="token comment"># li_list = tree.xpath('//body/ul/li')</span><span class="token comment"># 查找所有有id的属性的li标签</span><span class="token comment"># text()获取标签中的内容</span>li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul/li[@id]/text()'</span><span class="token punctuation">)</span><span class="token comment"># 找到id为l1的li标签  注意引号的问题</span>li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul/li[@id="l1"]/text()'</span><span class="token punctuation">)</span><span class="token comment"># 查找到id为l1的li标签的class的属性值</span>li <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul/li[@id="l1"]/@class'</span><span class="token punctuation">)</span><span class="token comment"># 查询id中包含l的li标签</span>li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul/li[contains(@id,"l")]/text()'</span><span class="token punctuation">)</span><span class="token comment"># 查询id的值以l开头的li标签</span>li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul/li[starts-with(@id,"c")]/text()'</span><span class="token punctuation">)</span><span class="token comment">#查询id为l1和class为c1的</span>li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul/li[@id="l1" and @class="c1"]/text()'</span><span class="token punctuation">)</span><span class="token comment">#查询id为l1或l2的</span>li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul/li[@id="l1"]/text() | //ul/li[@id="l2"]/text()'</span><span class="token punctuation">)</span><span class="token comment"># 判断列表的长度</span><span class="token keyword">print</span><span class="token punctuation">(</span>li_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>li_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>xpath基本语法</strong></p><p><img src="http://image.kmoon.fun//images/202212191425429.png" alt="image-20221219142500176"></p><p>应用案例： </p><ul><li>获取百度网站的百度一下</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># （1） 获取网页的源码</span><span class="token comment"># （2） 解析   解析的服务器响应的文件  etree.HTML</span><span class="token comment"># (3)  打印</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl <span class="token operator">=</span> <span class="token string">'https://www.baidu.com/'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">}</span><span class="token comment"># 请求对象的定制</span>request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span>headers <span class="token operator">=</span> headers<span class="token punctuation">)</span><span class="token comment"># 模拟浏览器访问服务器</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token comment"># 获取网页源码</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># 解析网页源码 来获取我们想要的数据</span><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token comment"># 解析服务器响应的文件</span>tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token comment"># 获取想要的数据  xpath的返回值是一个列表类型的数据</span>result <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//input[@id="su"]/@value'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>站长素材图片抓取并且下载（<a href="http://sc.chinaz.com/tupian/shuaigetupian.html%EF%BC%89--%E3%80%8B%E6%87%92%E5%8A%A0%E8%BD%BD">http://sc.chinaz.com/tupian/shuaigetupian.html）--》懒加载</a></li></ul><p><strong>重点：</strong></p><blockquote><p>xpath在浏览器中可以获取对象，而python代码中无法获取对象的原因是浏览器会自动更正我们的xpath代码，而lxml库却不会这么做，解决方法是编写xpath代码时必须按照网页源代码编写，而不是F12后的dom结构</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 需求 下载的前十页的图片</span><span class="token comment"># https://sc.chinaz.com/tupian/qinglvtupian_page.html</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token keyword">def</span> <span class="token function">create_request</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'https://sc.chinaz.com/tupian/qinglvtupian.html'</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>page <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string">'https://sc.chinaz.com/tupian/qinglvtupian_'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.html'</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>    request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">)</span>    <span class="token keyword">return</span> request<span class="token keyword">def</span> <span class="token function">get_content</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> content<span class="token keyword">def</span> <span class="token function">down_load</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#     下载图片</span>    <span class="token comment"># urllib.request.urlretrieve('图片地址','文件的名字')</span>    tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    name_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@class="container"]//img/@alt'</span><span class="token punctuation">)</span>    <span class="token comment"># 一般设计图片的网站都会进行懒加载</span>    src_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@class="container"]//img/@data-original'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>name_list<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>src_list<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>src_list<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>name_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> name_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        src <span class="token operator">=</span> src_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        url <span class="token operator">=</span> <span class="token string">'https:'</span> <span class="token operator">+</span> src        urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>filename<span class="token operator">=</span><span class="token string">'./loveImg/'</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'.jpg'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    start_page <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入起始页码'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    end_page <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入结束页码'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>start_page<span class="token punctuation">,</span>end_page<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># (1) 请求对象的定制</span>        request <span class="token operator">=</span> create_request<span class="token punctuation">(</span>page<span class="token punctuation">)</span>        <span class="token comment"># （2）获取网页的源码</span>        content <span class="token operator">=</span> get_content<span class="token punctuation">(</span>request<span class="token punctuation">)</span>        <span class="token comment"># （3）下载</span>        down_load<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-Jsonpath"><a href="#2-Jsonpath" class="headerlink" title="2. Jsonpath"></a>2. Jsonpath</h3><blockquote><p>jsonpath是一种简单的方法来提取给定JSON文档的部分内容。</p></blockquote><p>解析json数据，只能解析本地json文件</p><ul><li><p>安装及使用方式</p><p>pip安装： <code>pip install jsonpath</code> </p><p>jsonpath的使用： </p><p><code>obj = json.load(open('json文件', 'r', encoding='utf‐8'))</code> </p><p><code>ret = jsonpath.jsonpath(obj, 'jsonpath语法')</code></p></li></ul><p>JSONPath语法元素和对应XPath元素的对比:</p><table><thead><tr><th><strong>XPath</strong></th><th><strong>JSONPath</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>/</td><td>$</td><td>表示根元素</td></tr><tr><td>.</td><td>@</td><td>当前元素</td></tr><tr><td>/</td><td>. or []</td><td>子元素</td></tr><tr><td>..</td><td>n/a</td><td>父元素</td></tr><tr><td>//</td><td>..</td><td>递归下降，JSONPath是从E4X借鉴的。</td></tr><tr><td>*</td><td>*</td><td>通配符，表示所有的元素</td></tr><tr><td>@</td><td>n/a</td><td>属性访问字符</td></tr><tr><td>[]</td><td>[]</td><td>子元素操作符</td></tr><tr><td>|</td><td>[,]</td><td>连接操作符在XPath 结果合并其它结点集合。JSONP允许name或者数组索引。</td></tr><tr><td>n/a</td><td>[start:ends:tep]</td><td>数组分割操作从ES4借鉴。</td></tr><tr><td>[]</td><td>?()</td><td>应用过滤表示式</td></tr><tr><td>n/a</td><td>()</td><td>脚本表达式，使用在脚本引擎下面。</td></tr><tr><td>()</td><td>n/a</td><td>Xpath分组</td></tr></tbody></table><p>教程链接：（<a href="http://blog.csdn.net/luxideyao/article/details/77802389%EF%BC%89">http://blog.csdn.net/luxideyao/article/details/77802389）</a></p><p>eg.</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span> <span class="token property">"store"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"book"</span><span class="token operator">:</span> <span class="token punctuation">[</span>       <span class="token punctuation">{</span> <span class="token property">"category"</span><span class="token operator">:</span> <span class="token string">"reference"</span><span class="token punctuation">,</span>        <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"Nigel Rees"</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Sayings of the Century"</span><span class="token punctuation">,</span>        <span class="token property">"price"</span><span class="token operator">:</span> <span class="token number">8.95</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span> <span class="token property">"category"</span><span class="token operator">:</span> <span class="token string">"fiction"</span><span class="token punctuation">,</span>        <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"Evelyn Waugh"</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Sword of Honour"</span><span class="token punctuation">,</span>        <span class="token property">"price"</span><span class="token operator">:</span> <span class="token number">12.99</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span> <span class="token property">"category"</span><span class="token operator">:</span> <span class="token string">"fiction"</span><span class="token punctuation">,</span>        <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"Herman Melville"</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Moby Dick"</span><span class="token punctuation">,</span>        <span class="token property">"isbn"</span><span class="token operator">:</span> <span class="token string">"0-553-21311-3"</span><span class="token punctuation">,</span>        <span class="token property">"price"</span><span class="token operator">:</span> <span class="token number">8.99</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span> <span class="token property">"category"</span><span class="token operator">:</span> <span class="token string">"fiction"</span><span class="token punctuation">,</span>        <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"J. R. R. Tolkien"</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"The Lord of the Rings"</span><span class="token punctuation">,</span>        <span class="token property">"isbn"</span><span class="token operator">:</span> <span class="token string">"0-395-19395-8"</span><span class="token punctuation">,</span>        <span class="token property">"price"</span><span class="token operator">:</span> <span class="token number">22.99</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"bicycle"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"color"</span><span class="token operator">:</span> <span class="token string">"red"</span><span class="token punctuation">,</span>      <span class="token property">"price"</span><span class="token operator">:</span> <span class="token number">19.95</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://image.kmoon.fun//images/202212211412621.png" alt="image-20221221141234588"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> json<span class="token keyword">import</span> jsonpathobj <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'073_尚硅谷_爬虫_解析_jsonpath.json'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 书店所有书的作者</span>author_list <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$.store.book[*].author'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>author_list<span class="token punctuation">)</span><span class="token comment"># 所有的作者</span>author_list <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$..author'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>author_list<span class="token punctuation">)</span><span class="token comment"># store下面的所有的元素</span>tag_list <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$.store.*'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tag_list<span class="token punctuation">)</span><span class="token comment"># store里面所有东西的price</span>price_list <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$.store..price'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>price_list<span class="token punctuation">)</span><span class="token comment"># 第三个书</span>book <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$..book[2]'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token comment"># 最后一本书</span>book <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$..book[(@.length-1)]'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token comment"># 前面的两本书</span>book_list <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$..book[0,1]'</span><span class="token punctuation">)</span>book_list <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$..book[:2]'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>book_list<span class="token punctuation">)</span><span class="token comment"># 条件过滤需要在（）的前面添加一个？</span><span class="token comment">#  过滤出所有的包含isbn的书。</span>book_list <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$..book[?(@.isbn)]'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>book_list<span class="token punctuation">)</span><span class="token comment"># 哪本书超过了10块钱</span>book_list <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$..book[?(@.price&gt;10)]'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>book_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>案例练习:淘票票</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl <span class="token operator">=</span> <span class="token string">'https://dianying.taobao.com/cityAction.json?activityId&amp;_ksTS=1629789477003_137&amp;jsoncallback=jsonp138&amp;action=cityAction&amp;n_s=new&amp;event_submit_doGetAllRegion=true'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'accept'</span><span class="token punctuation">:</span> <span class="token string">'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01'</span><span class="token punctuation">,</span>    <span class="token comment"># 'accept-encoding': 'gzip, deflate, br',</span>    <span class="token string">'accept-language'</span><span class="token punctuation">:</span> <span class="token string">'zh-CN,zh;q=0.9'</span><span class="token punctuation">,</span>    <span class="token string">'cookie'</span><span class="token punctuation">:</span> <span class="token string">'xxxxxxx'</span><span class="token punctuation">,</span>    <span class="token string">'referer'</span><span class="token punctuation">:</span> <span class="token string">'https://dianying.taobao.com/'</span><span class="token punctuation">,</span>    <span class="token string">'user-agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">,</span>    <span class="token string">'x-requested-with'</span><span class="token punctuation">:</span> <span class="token string">'XMLHttpRequest'</span><span class="token punctuation">,</span><span class="token punctuation">}</span>request <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">)</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># split 切割</span>content <span class="token operator">=</span> content<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'('</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment"># 写入本地json文件</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'filename.json'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">as</span> fp<span class="token punctuation">:</span>    fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">import</span> json<span class="token keyword">import</span> jsonpath<span class="token comment"># 解析本地json文件</span>obj <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'filename.json'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 提取json数据中的regionName属性</span>city_list <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">'$..regionName'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>city_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>作业： </p><p>1.股票信息提取（<a href="http://quote.stockstar.com/%EF%BC%89">http://quote.stockstar.com/）</a> </p><p>2.boos直聘 </p><p>3.中华英才 </p><p>4.汽车之家</p><h3 id="3-BeautifulSoup"><a href="#3-BeautifulSoup" class="headerlink" title="3. BeautifulSoup"></a>3. BeautifulSoup</h3><blockquote><p>BS4全称是Beatiful Soup，它提供一些简单的、python式的函数用来处理导航、搜索、修改分析树等功能。</p></blockquote><ul><li><strong>基本简介</strong></li></ul><ol><li><p>BeautifulSoup简称： bs4 </p></li><li><p>什么是BeatifulSoup？</p><p>BeautifulSoup，和<strong>lxml</strong>一样，是一个<strong>html的解析器</strong>，主要功能也是<strong>解析和提取数据</strong> </p></li><li><p>优缺点？</p></li></ol><p>​缺点：效率没有lxml的效率高 </p><p>​优点：接口设计人性化，使用方便</p><ul><li><strong>安装以及创建</strong></li></ul><ol><li>安装</li></ol><p><code>pip install bs4</code> </p><ol start="2"><li>导入</li></ol><p><code>from bs4 import BeautifulSoup</code> </p><ol start="3"><li>创建对象</li></ol><p>服务器响应的文件生成对象 </p><p><code>soup = BeautifulSoup(response.read().decode(), 'lxml')</code> </p><p>本地文件生成对象 </p><p><code>soup = BeautifulSoup(open('1.html',encoding='utf-8'), 'lxml')</code> </p><blockquote><p><strong>注意：默认打开文件的编码格式gbk,所以需要指定打开编码格式</strong></p></blockquote><ul><li><strong>节点定位</strong></li></ul><ol><li>根据<strong>标签名</strong>查找节点</li></ol><p>soup.a 【注】只能找到第一个符合条件的a </p><p>soup.a.name 返回标签名</p><p>soup.a.attrs  返回标签属性和属性值</p><ol start="2"><li>函数</li></ol><p>(1). <strong>find</strong>(返回一个对象) </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">find<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>：只找到第一个a标签 find<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span>tittle<span class="token operator">=</span><span class="token string">'a2'</span><span class="token punctuation">)</span>  根据tittle的值找第一个afind<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'a2'</span><span class="token punctuation">)</span>  根<span class="token keyword">class</span>的值找第一个a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意class标签需要添加下划线_</p></blockquote><p>(2). <strong>find_all</strong>(返回一个列表) </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span> 查找到所有的a find_all<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'span'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 返回所有的a和span find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> limit<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> 只找前两个a <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(3). <strong>select</strong>(根据选择器得到多个节点对象 返回列表)【<strong>推荐</strong>】 </p><ol><li><strong>element</strong></li></ol><p>eg:p </p><ol start="2"><li>**<code>.class</code> **</li></ol><p>可以通过<code>.</code>代表class  这种操作叫做类选择器</p><p>eg:<code>.firstname</code> </p><ol start="3"><li><strong><code>#id</code></strong></li></ol><p>eg:<code>#firstname</code> </p><ol start="4"><li><p><strong>属性选择器</strong> </p><p>通过属性来寻找对应的标签</p></li></ol><p>[attribute] </p><p>eg:<code>li = soup.select('li[class]')</code> </p><p>[attribute=value] </p><p>eg:<code>li = soup.select('li[class="value"]')</code> </p><ol start="5"><li><strong>层级选择器</strong></li></ol><p>element element  后代选择器</p><p>div p </p><p>element&gt;element 子代选择器（&gt;第一级）</p><p>div&gt;p </p><p>element,element 所有级</p><p>div,p </p><p>eg:<code>soup = soup.select('a,span')</code> </p><ul><li><strong>节点信息</strong></li></ul><p>(1).获取节点内容：适用于标签中嵌套标签的结构 obj.string </p><p><strong>obj.get_text()【推荐】</strong> </p><blockquote><p>如果标签对象中 只有内容 那么string和get_text()都可以使用<br>如果标签对象中 除了内容还有标签 那么string就获取不到数据 而get_text()是可以获取数据</p></blockquote><p>(2).节点的属性 </p><p>tag.name 获取标签名 </p><p>eg:tag = find(‘li) </p><p>print(tag.name) </p><p>tag.attrs将属性值作为一个<strong>字典</strong>返回 </p><p>(3).获取节点属性 </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">**</span>obj<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">)</span>【常用】<span class="token operator">**</span> obj<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">)</span> obj<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>应用实例： </p><p>1.股票信息提取（<a href="http://quote.stockstar.com/%EF%BC%89">http://quote.stockstar.com/）</a> </p><p>2.中华英才网-旧版 </p><p>3 .腾讯公司招聘需求抓取（<a href="https://hr.tencent.com/index.php%EF%BC%89">https://hr.tencent.com/index.php）</a></p><ul><li>案例练习：星巴克</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl <span class="token operator">=</span> <span class="token string">'https://www.starbucks.com.cn/menu/'</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupsoup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>content<span class="token punctuation">,</span><span class="token string">'lxml'</span><span class="token punctuation">)</span><span class="token comment"># xpath语法：</span><span class="token comment"># //ul[@class="grid padded-3 product"]//strong/text()</span>name_list <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'ul[class="grid padded-3 product"] strong'</span><span class="token punctuation">)</span><span class="token keyword">for</span> name <span class="token keyword">in</span> name_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>拓展：下载星巴克菜单图片</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl <span class="token operator">=</span> <span class="token string">'https://www.starbucks.com.cn/menu/'</span>response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupsoup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>content<span class="token punctuation">,</span><span class="token string">'lxml'</span><span class="token punctuation">)</span><span class="token comment"># //ul[@class="grid padded-3 product"]//strong/text()</span>url_list <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'div[class="preview circle"]'</span><span class="token punctuation">)</span>name_list <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'ul[class="grid padded-3 product"] strong'</span><span class="token punctuation">)</span>tittle<span class="token operator">=</span><span class="token string">"https://www.starbucks.com.cn"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    urls<span class="token operator">=</span>tittle<span class="token operator">+</span>url_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    name<span class="token operator">=</span>name_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token builtin">str</span><span class="token operator">=</span><span class="token string">"/"</span>    <span class="token keyword">if</span> <span class="token builtin">str</span> <span class="token keyword">in</span> name<span class="token punctuation">:</span>        name<span class="token operator">=</span>name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>    urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>url<span class="token operator">=</span>urls<span class="token punctuation">,</span> filename<span class="token operator">=</span><span class="token string">'./XBKImg/'</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'.jpg'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h1><h2 id="Selenium-1"><a href="#Selenium-1" class="headerlink" title="Selenium"></a>Selenium</h2><h3 id="1-什么是selenium"><a href="#1-什么是selenium" class="headerlink" title="1.什么是selenium"></a>1.什么是selenium</h3><blockquote><p>selenium是一个自动化测试工具,支持Firefox,Chrome等众多浏览器 在爬虫中的应用主要是用来解决JS渲染的问题。</p></blockquote><p>（1）Selenium是一个用于Web应用程序测试的工具。 （2）Selenium 测试直接运行在浏览器中，就像真正的用户在操作一样。 </p><p>（3）支持通过各种<strong>driver</strong>（FirfoxDriver,IternetExplorerDriver，OperaDriver，ChromeDriver）驱动真实浏览器完成测试。 </p><p>（4）selenium也是支持无界面浏览器操作的。 </p><h3 id="2-为什么使用selenium"><a href="#2-为什么使用selenium" class="headerlink" title="2.为什么使用selenium"></a>2.为什么使用selenium</h3><p>模拟浏览器功能，自动执行网页中的js代码，实现动态加载 </p><h3 id="3-安装selenium"><a href="#3-安装selenium" class="headerlink" title="3.安装selenium"></a>3.安装selenium</h3><p>（1）操作谷歌浏览器驱动下载地址 <a href="http://chromedriver.storage.googleapis.com/index.html">http://chromedriver.storage.googleapis.com/index.html</a> </p><p>（2）谷歌驱动和谷歌浏览器版本之间的映射表 <a href="http://blog.csdn.net/huilan_same/article/details/51896672">http://blog.csdn.net/huilan_same/article/details/51896672</a> </p><p>（3）查看谷歌浏览器版本 </p><p>谷歌浏览器右上角‐‐&gt;帮助‐‐&gt;关于 </p><p>（4）pip install selenium </p><h3 id="4-使用步骤"><a href="#4-使用步骤" class="headerlink" title="4.使用步骤"></a><strong>4.使用步骤</strong></h3><p>（1）导入：</p><p><code>from selenium import webdriver</code> </p><p>（2）创建浏览器操作对象： </p><p><code>path = 浏览器驱动文件路径</code> </p><p><code>browser = webdriver.Chrome(path)</code> </p><p>（3）访问网址 </p><p><code>url = 要访问的网址 browser.get(url)</code> </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># （1）导入selenium</span><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token comment"># (2) 创建浏览器操作对象</span>browser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token string">"chromedriver.exe"</span><span class="token punctuation">)</span><span class="token comment"># （3）访问网站</span><span class="token comment"># url = 'https://www.baidu.com'</span><span class="token comment">#</span><span class="token comment"># browser.get(url)</span>url <span class="token operator">=</span> <span class="token string">'https://www.jd.com/'</span>browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment"># page_source获取网页源码</span>content <span class="token operator">=</span> browser<span class="token punctuation">.</span>page_source<span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：</p><p>1.需要安装Chrome浏览器</p><p>2.闪退的话需要安装3.3.1版本 <code>pip install selenium==3.3.1</code></p></blockquote><h4 id="4‐1：元素定位"><a href="#4‐1：元素定位" class="headerlink" title="4‐1：元素定位"></a>4‐1：元素定位</h4><p>自动化要做的就是模拟鼠标和键盘来操作来操作这些元素，点击、输入等等。操作这些元素前首先 要找到它们，WebDriver提供很多定位元素的方法 </p><p><strong>方法：</strong> </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1</span><span class="token punctuation">.</span>find_element_by_id button <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'su'</span><span class="token punctuation">)</span> <span class="token number">2</span><span class="token punctuation">.</span>find_elements_by_name name <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_name<span class="token punctuation">(</span><span class="token string">'wd'</span><span class="token punctuation">)</span> <span class="token number">3</span><span class="token punctuation">.</span>find_elements_by_xpath xpath1 <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements_by_xpath<span class="token punctuation">(</span><span class="token string">'//input[@id="su"]'</span><span class="token punctuation">)</span> <span class="token number">4</span><span class="token punctuation">.</span>find_elements_by_tag_name names <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements_by_tag_name<span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span> <span class="token number">5</span><span class="token punctuation">.</span>find_elements_by_css_selector my_input <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements_by_css_selector<span class="token punctuation">(</span><span class="token string">'#kw'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token number">6</span><span class="token punctuation">.</span>find_elements_by_link_text browser<span class="token punctuation">.</span>find_element_by_link_text<span class="token punctuation">(</span><span class="token string">"新闻"</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>eg.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriverpath <span class="token operator">=</span> <span class="token string">'chromedriver.exe'</span>browser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>path<span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'https://www.baidu.com'</span>browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment"># 元素定位</span><span class="token comment"># 根据id来找到对象</span>button <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'su'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token comment"># 根据标签属性的属性值来获取对象的</span>button <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_name<span class="token punctuation">(</span><span class="token string">'wd'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token comment"># 根据标签的名字来获取对象</span>button <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements_by_tag_name<span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token comment"># 根据xpath语句来获取对象</span>button <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements_by_xpath<span class="token punctuation">(</span><span class="token string">'//input[@id="su"]'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token comment"># 使用的bs4的语法来获取对象</span>button <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements_by_css_selector<span class="token punctuation">(</span><span class="token string">'#su'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span>button <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_elements_by_link_text<span class="token punctuation">(</span><span class="token string">'新闻'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4‐2-访问元素信息"><a href="#4‐2-访问元素信息" class="headerlink" title="4‐2:访问元素信息"></a>4‐2:访问元素信息</h4><p>获取元素<strong>属性</strong> .get_attribute(‘class’) </p><p>获取元素<strong>文本</strong> .text </p><p>获取<strong>标签名</strong> .tag_name </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriverpath <span class="token operator">=</span> <span class="token string">'chromedriver.exe'</span>browser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>path<span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://www.baidu.com'</span>browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token builtin">input</span> <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'su'</span><span class="token punctuation">)</span><span class="token comment"># 获取标签的属性</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">'value'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 获取标签的名字</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">.</span>tag_name<span class="token punctuation">)</span><span class="token comment"># 获取元素文本</span>a <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_link_text<span class="token punctuation">(</span><span class="token string">'新闻'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4‐3-交互"><a href="#4‐3-交互" class="headerlink" title="4‐3:交互"></a>4‐3:交互</h4><p>点击:click() </p><p>输入:send_keys() </p><p>后退操作:browser.back() </p><p>前进操作:browser.forword() </p><p>模拟JS滚动: </p><p><code>js='document.documentElement.scrollTop=100000'</code> </p><p><code>browser.execute_script(js)</code>  <strong>执行js代码</strong></p><p>获取网页代码：page_source </p><p>退出：browser.quit()</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token comment"># 创建浏览器对象</span>path <span class="token operator">=</span> <span class="token string">'chromedriver.exe'</span>browser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token comment"># url</span>url <span class="token operator">=</span> <span class="token string">'https://www.baidu.com'</span>browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment"># 延时</span><span class="token keyword">import</span> timetime<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># 获取文本框对象</span><span class="token builtin">input</span> <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'kw'</span><span class="token punctuation">)</span><span class="token comment"># 在文本框中输入周杰伦</span><span class="token builtin">input</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'周杰伦'</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># 获取百度一下按钮</span>button <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'su'</span><span class="token punctuation">)</span><span class="token comment"># 点击按钮</span>button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># 滑到底部</span>js_bottom <span class="token operator">=</span> <span class="token string">'document.documentElement.scrollTop=100000'</span>browser<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span>js_bottom<span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># 获取下一页按钮(xpath语法)</span><span class="token builtin">next</span> <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'//a[@class="n"]'</span><span class="token punctuation">)</span><span class="token comment"># 点击下一页</span><span class="token builtin">next</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># 回到上一页</span>browser<span class="token punctuation">.</span>back<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># 回去</span>browser<span class="token punctuation">.</span>forward<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment"># 退出</span>browser<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Phantomjs"><a href="#Phantomjs" class="headerlink" title="Phantomjs"></a>Phantomjs</h2><p>1.什么是Phantomjs？<br>（1）是一个<strong>无界面的浏览器</strong></p><p>（2）支持页面元素查找，js的执行等</p><p>（3）由于不进行css和gui渲染，运行效率要比真实的浏览器要快很多</p><p>2.如何使用Phantomjs？</p><p>（1）获取PhantomJS.exe文件路径path</p><p>（2）browser = webdriver.PhantomJS(path)</p><p>（3）browser.get(url)</p><p>扩展：</p><p><strong>保存屏幕快照</strong>:<code>browser.save_screenshot('baidu.png')</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriverpath <span class="token operator">=</span> <span class="token string">'phantomjs.exe'</span>browser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>PhantomJS<span class="token punctuation">(</span>path<span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'https://www.baidu.com'</span>browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>browser<span class="token punctuation">.</span>save_screenshot<span class="token punctuation">(</span><span class="token string">'baidu.png'</span><span class="token punctuation">)</span><span class="token keyword">import</span> timetime<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token builtin">input</span> <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'kw'</span><span class="token punctuation">)</span><span class="token builtin">input</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'昆凌'</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>browser<span class="token punctuation">.</span>save_screenshot<span class="token punctuation">(</span><span class="token string">'kunling.png'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Chrome-handless"><a href="#Chrome-handless" class="headerlink" title="Chrome handless"></a>Chrome handless</h2><blockquote><p>Chrome-headless 模式， Google 针对 Chrome 浏览器59版新增加的一种模式，可以让你不打开UI界面的情况下使用 Chrome 浏览器，所以运行效果与 Chrome 保持完美一致。</p></blockquote><h3 id="1-系统要求"><a href="#1-系统要求" class="headerlink" title="1.系统要求"></a>1.系统要求</h3><p>Chrome<br>        Unix\Linux 系统需要 chrome &gt;= 59<br>        Windows 系统需要 chrome &gt;= 60<br>Python3.6以上<br>Selenium==3.4.*<br>ChromeDriver==2.31以上</p><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span>options <span class="token keyword">import</span> Optionschrome_options <span class="token operator">=</span> Options<span class="token punctuation">(</span><span class="token punctuation">)</span>chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'‐‐headless'</span><span class="token punctuation">)</span>chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'‐‐disable‐gpu'</span><span class="token punctuation">)</span><span class="token comment"># Chrome浏览器路径</span>path <span class="token operator">=</span> <span class="token string">r'C:\Program Files\Google\Chrome\Application\chrome.exe'</span>chrome_options<span class="token punctuation">.</span>binary_location <span class="token operator">=</span> pathbrowser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>chrome_options<span class="token operator">=</span>chrome_options<span class="token punctuation">)</span>browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://www.baidu.com/'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-封装调用"><a href="#3-封装调用" class="headerlink" title="3.封装调用"></a>3.封装调用</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span>options <span class="token keyword">import</span> Options<span class="token comment"># 函数封装</span><span class="token keyword">def</span> <span class="token function">share_browser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#初始化</span>chrome_options <span class="token operator">=</span> Options<span class="token punctuation">(</span><span class="token punctuation">)</span>chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'‐‐headless'</span><span class="token punctuation">)</span>chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'‐‐disable‐gpu'</span><span class="token punctuation">)</span><span class="token comment">#这个路径是谷歌浏览器的路径</span>path <span class="token operator">=</span> <span class="token string">r'C:\Program Files (x86)\Google\Chrome\Application\chrome.exe'</span>chrome_options<span class="token punctuation">.</span>binary_location <span class="token operator">=</span> pathbrowser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>chrome_options<span class="token operator">=</span>chrome_options<span class="token punctuation">)</span><span class="token keyword">return</span> browser<span class="token comment"># 封装调用</span>browser <span class="token operator">=</span> share_browser<span class="token punctuation">(</span><span class="token punctuation">)</span>browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://www.baidu.com/'</span><span class="token punctuation">)</span>browser<span class="token punctuation">.</span>save_screenshot<span class="token punctuation">(</span><span class="token string">'handless1.png'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Requests"><a href="#Requests" class="headerlink" title="Requests"></a>Requests</h1><h2 id="基本使用-1"><a href="#基本使用-1" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="1-文档"><a href="#1-文档" class="headerlink" title="1.文档"></a>1.文档</h3><p>官方文档</p><p><a href="https://cn.python-requests.org/zh_CN/latest/">https://cn.python-requests.org/zh_CN/latest/</a></p><p>快速上手</p><p><a href="https://cn.python-requests.org/zh_CN/latest/user/quickstart.html">https://cn.python-requests.org/zh_CN/latest/user/quickstart.html</a></p><h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h3><p><code>pip install requests</code></p><h3 id="3-类型-属性"><a href="#3-类型-属性" class="headerlink" title="3.类型 属性"></a>3.类型 属性</h3><p>类型    ：models.Response</p><p>r.text    : 获取网站源码</p><p>r.encoding   ：访问或定制编码方式</p><p>r.url       ：获取请求的url</p><p>r.content  ：响应的字节类型</p><p>r.status_code      ：响应的状态码</p><p>r.headers  ：响应的头信息</p><p>基本使用</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://www.baidu.com'</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span><span class="token comment"># 一个类型和六个属性</span><span class="token comment"># Response类型</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 设置响应的编码格式</span>response<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span><span class="token comment"># 以字符串的形式来返回了网页的源码</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment"># 返回一个url地址</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token comment"># 返回的是二进制的数据</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token comment"># 返回响应的状态码</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span><span class="token comment"># 返回的是响应头</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p> <strong>对比urllib、requests</strong></p></blockquote><p>urllib</p><p>  (1) 一个类型以及<strong>六个方法</strong></p><p>（2）get请求</p><p>（3）post请求   百度翻译</p><p>（4）ajax的get请求</p><p>（5）ajax的post请求</p><p>（6）cookie登陆 微博</p><p>（7）代理</p><p>requests</p><p>  (1)一个类型以及<strong>六个属性</strong></p><p>（2）get请求</p><p>（3）post请求</p><p>（4）代理</p><p>（5）cookie  验证码</p><h2 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h2><h3 id="1-requests-get"><a href="#1-requests-get" class="headerlink" title="1.requests.get()"></a>1.requests.get()</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'https://www.baidu.com/s'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">}</span>data <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'wd'</span><span class="token punctuation">:</span><span class="token string">'北京'</span><span class="token punctuation">}</span><span class="token comment"># 参数列表</span><span class="token comment"># url  请求资源路径</span><span class="token comment"># params 参数</span><span class="token comment"># kwargs 字典</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>data<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>text<span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-参数定制"><a href="#2-参数定制" class="headerlink" title="2.参数定制"></a>2.参数定制</h3><p><strong>总结：</strong><br>（1）参数使用<strong>params</strong>传递<br>（2）参数<strong>无需urlencode编码</strong><br>（3）不需要请求对象的定制<br>（4）请求资源路径中的<strong>？</strong>可以加也可以不加</p><h2 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h2><h3 id="requests-post"><a href="#requests-post" class="headerlink" title="requests.post()"></a>requests.post()</h3><blockquote><p>get和post区别？ </p><p>1： get请求的参数名字是params </p><p>post请求的参数的名字是data </p><p>2： 请求资源路径后面可以不加? </p><p>3： 不需要手动编解码 </p><p>4： 不需要做请求对象的定制</p></blockquote><p>example:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'https://fanyi.baidu.com/sug'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">}</span>data <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'kw'</span><span class="token punctuation">:</span> <span class="token string">'eye'</span><span class="token punctuation">}</span><span class="token comment"># url 请求地址</span><span class="token comment"># data 请求参数</span><span class="token comment"># json</span><span class="token comment"># kwargs 字典</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>content <span class="token operator">=</span>response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>总结</strong>：<br>（1）post请求不需要编解码<br>（2）post请求的参数是<strong>data</strong><br>（3）不需要请求对象的定制</p><h2 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h2><h3 id="proxy定制"><a href="#proxy定制" class="headerlink" title="proxy定制"></a>proxy定制</h3><p>在请求中设置proxies参数  </p><p>参数类型是一个字典类型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://www.baidu.com/s?'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'Cookie'</span><span class="token punctuation">:</span> <span class="token string">'xxxxxxxxxx'</span><span class="token punctuation">,</span>    <span class="token string">'user‐agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,like Gecko) Chrome/65.0.3325.181Safari/537.36'</span><span class="token punctuation">}</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'wd'</span><span class="token punctuation">:</span><span class="token string">'ip'</span><span class="token punctuation">}</span>proxy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'http'</span><span class="token punctuation">:</span><span class="token string">'219.149.59.250:9797'</span><span class="token punctuation">}</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>data<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>proxies<span class="token operator">=</span>proxy<span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'proxy.html'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf‐8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>    fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="cookie登录-1"><a href="#cookie登录-1" class="headerlink" title="cookie登录"></a>cookie登录</h2><ul><li>案例练习：cookie登录古诗文网</li></ul><p>需求：通过登陆  然后进入到主页面</p><p>通过找登陆接口发现 登陆的时候需要的参数很多</p><p>观察到_VIEWSTATE、__VIEWSTATEGENERATOR、code是一个可以变化的量</p><p><img src="http://image.kmoon.fun//images/202212220940853.png" alt="image-20221222094013606"></p><p>难点:<br>(1)_VIEWSTATE   __VIEWSTATEGENERATOR<br>一般情况看不到的数据 都是在页面的源码中</p><p>观察到这两个数据在页面的源码中 </p><p><img src="http://image.kmoon.fun//images/202212220944822.png" alt="image-20221222094329840">所以需要获取页面的源码 然后进行解析就可以获取</p><p>(2)验证码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token comment"># 登陆页面url地址</span>url <span class="token operator">=</span> <span class="token string">'https://so.gushiwen.cn/user/login.aspx?from=http://so.gushiwen.cn/user/collect.aspx'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36'</span><span class="token punctuation">}</span><span class="token comment"># 获取页面的源码</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span>headers <span class="token operator">=</span> headers<span class="token punctuation">)</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span>text<span class="token comment"># 解析页面源码  获取_VIEWSTATE   __VIEWSTATEGENERATOR</span><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupsoup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>content<span class="token punctuation">,</span><span class="token string">'lxml'</span><span class="token punctuation">)</span><span class="token comment"># 获取_VIEWSTATE</span>viewstate <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'#__VIEWSTATE'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'value'</span><span class="token punctuation">)</span><span class="token comment"># 获取__VIEWSTATEGENERATOR</span>viewstategenerator <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'#__VIEWSTATEGENERATOR'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'value'</span><span class="token punctuation">)</span><span class="token comment"># 获取验证码图片</span>code <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'#imgCode'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">)</span>code_url <span class="token operator">=</span> <span class="token string">'https://so.gushiwen.cn'</span> <span class="token operator">+</span> code<span class="token comment"># 其实验证码图片路径是固定的</span><span class="token comment"># 有坑（请求一次验证码图片后会刷新一次 验证码后后面登录请求的code不是同一个）</span><span class="token comment"># import urllib.request</span><span class="token comment"># urllib.request.urlretrieve(url=code_url,filename='code.jpg')</span><span class="token comment"># requests里面有一个方法 session（）  </span>通过session的返回值 就能使用请求变成一个对象session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 验证码的url的内容</span>response_code <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>code_url<span class="token punctuation">)</span><span class="token comment"># 注意此时要使用二进制数据  不能使用text 因为我们要使用的是图片的下载</span>content_code <span class="token operator">=</span> response_code<span class="token punctuation">.</span>content<span class="token comment"># wb的模式就是将二进制数据写入到文件</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'code.jpg'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span><span class="token keyword">as</span> fp<span class="token punctuation">:</span>    fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content_code<span class="token punctuation">)</span><span class="token comment"># 获取了验证码的图片之后 下载到本地 然后观察验证码  观察之后 然后在控制台输入这个验证码 就可以将这个值给</span><span class="token comment"># code的参数 就可以登陆</span>code_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你的验证码'</span><span class="token punctuation">)</span>data_post <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'__VIEWSTATE'</span><span class="token punctuation">:</span> viewstate<span class="token punctuation">,</span>    <span class="token string">'__VIEWSTATEGENERATOR'</span><span class="token punctuation">:</span> viewstategenerator<span class="token punctuation">,</span>    <span class="token string">'from'</span><span class="token punctuation">:</span> <span class="token string">'http://so.gushiwen.cn/user/collect.aspx'</span><span class="token punctuation">,</span>    <span class="token string">'email'</span><span class="token punctuation">:</span> <span class="token string">'3453863492@qq.com'</span><span class="token punctuation">,</span>    <span class="token string">'pwd'</span><span class="token punctuation">:</span> <span class="token string">'password'</span><span class="token punctuation">,</span>    <span class="token string">'code'</span><span class="token punctuation">:</span> code_name<span class="token punctuation">,</span>    <span class="token string">'denglu'</span><span class="token punctuation">:</span> <span class="token string">'登录'</span><span class="token punctuation">,</span><span class="token punctuation">}</span>response_post <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">,</span> data <span class="token operator">=</span> data_post<span class="token punctuation">)</span>content_post <span class="token operator">=</span> response_post<span class="token punctuation">.</span>text<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'gushiwen.html'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span> <span class="token string">' utf-8'</span><span class="token punctuation">)</span><span class="token keyword">as</span> fp<span class="token punctuation">:</span>    fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content_post<span class="token punctuation">)</span>    <span class="token comment"># 难点</span><span class="token comment"># （1） 隐藏域</span><span class="token comment"># （2） 验证码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="超级鹰平台"><a href="#超级鹰平台" class="headerlink" title="超级鹰平台"></a>超级鹰平台</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span class="token comment"># coding:utf-8</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> hashlib <span class="token keyword">import</span> md5<span class="token keyword">class</span> <span class="token class-name">Chaojiying_Client</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> soft_id<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username        password <span class="token operator">=</span>  password<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>password <span class="token operator">=</span> md5<span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>soft_id <span class="token operator">=</span> soft_id        self<span class="token punctuation">.</span>base_params <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">'user'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>username<span class="token punctuation">,</span>            <span class="token string">'pass2'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>password<span class="token punctuation">,</span>            <span class="token string">'softid'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>soft_id<span class="token punctuation">,</span>        <span class="token punctuation">}</span>        self<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">'Connection'</span><span class="token punctuation">:</span> <span class="token string">'Keep-Alive'</span><span class="token punctuation">,</span>            <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)'</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>    <span class="token keyword">def</span> <span class="token function">PostPic</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> im<span class="token punctuation">,</span> codetype<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        im: 图片字节        codetype: 题目类型 参考 http://www.chaojiying.com/price.html        """</span>        params <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">'codetype'</span><span class="token punctuation">:</span> codetype<span class="token punctuation">,</span>        <span class="token punctuation">}</span>        params<span class="token punctuation">.</span>update<span class="token punctuation">(</span>self<span class="token punctuation">.</span>base_params<span class="token punctuation">)</span>        files <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'userfile'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'ccc.jpg'</span><span class="token punctuation">,</span> im<span class="token punctuation">)</span><span class="token punctuation">}</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'http://upload.chaojiying.net/Upload/Processing.php'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>params<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>        <span class="token keyword">return</span> r<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">PostPic_base64</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> base64_str<span class="token punctuation">,</span> codetype<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        im: 图片字节        codetype: 题目类型 参考 http://www.chaojiying.com/price.html        """</span>        params <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">'codetype'</span><span class="token punctuation">:</span> codetype<span class="token punctuation">,</span>            <span class="token string">'file_base64'</span><span class="token punctuation">:</span>base64_str        <span class="token punctuation">}</span>        params<span class="token punctuation">.</span>update<span class="token punctuation">(</span>self<span class="token punctuation">.</span>base_params<span class="token punctuation">)</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'http://upload.chaojiying.net/Upload/Processing.php'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>params<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>        <span class="token keyword">return</span> r<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">ReportError</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> im_id<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        im_id:报错题目的图片ID        """</span>        params <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">'id'</span><span class="token punctuation">:</span> im_id<span class="token punctuation">,</span>        <span class="token punctuation">}</span>        params<span class="token punctuation">.</span>update<span class="token punctuation">(</span>self<span class="token punctuation">.</span>base_params<span class="token punctuation">)</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'http://upload.chaojiying.net/Upload/ReportError.php'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>params<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>        <span class="token keyword">return</span> r<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    chaojiying <span class="token operator">=</span> Chaojiying_Client<span class="token punctuation">(</span><span class="token string">'超级鹰用户名'</span><span class="token punctuation">,</span> <span class="token string">'超级鹰用户名的密码'</span><span class="token punctuation">,</span> <span class="token string">'96001'</span><span class="token punctuation">)</span><span class="token comment">#用户中心&gt;&gt;软件ID 生成一个替换 96001</span>    im <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'a.jpg'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#本地图片文件路径 来替换 a.jpg 有时WIN系统须要//</span>    <span class="token keyword">print</span> chaojiying<span class="token punctuation">.</span>PostPic<span class="token punctuation">(</span>im<span class="token punctuation">,</span> <span class="token number">1902</span><span class="token punctuation">)</span><span class="token comment">#1902 验证码类型  官方网站&gt;&gt;价格体系 3.4+版 print 后要加()</span>    <span class="token comment">#print chaojiying.PostPic(base64_str, 1902)  #此处为传入 base64代码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>作业：</p><p>国家统计局（<a href="http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2017/%EF%BC%89%E5%85%B1%E8%AE%A168%E4%B8%87%E6%9D%A1%E6%95%B0">http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2017/）共计68万条数</a></p><h1 id="Scrapy"><a href="#Scrapy" class="headerlink" title="Scrapy"></a>Scrapy</h1><blockquote><p> Scrapy是一个为了爬取网站数据，提取结构性数据而编写的应用框架。可以应用在包括数据挖掘，信息处理或存储历史数据等一系列的程序中。</p><p> Scrapy是适用于Python的一个快速、高层次的屏幕抓取和web抓取框架，用于抓取web站点并从页面中提取结构化的数据。Scrapy用途广泛，可以用于数据挖掘、监测和自动化测试</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>pip install scrapy</code></p><h2 id="基本使用-2"><a href="#基本使用-2" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="1-创建scrapy项目"><a href="#1-创建scrapy项目" class="headerlink" title="1.创建scrapy项目"></a>1.创建scrapy项目</h3><p>终端输入  <code>scrapy startproject 项目名称</code></p><p>项目名称包含中文 不能使用数字开头</p><h3 id="2-项目组成"><a href="#2-项目组成" class="headerlink" title="2.项目组成"></a>2.项目组成</h3><p><img src="http://image.kmoon.fun//images/202212221051066.png" alt="image-20221222105147762"></p><p><img src="http://image.kmoon.fun//images/202212221109594.png" alt="image-20221222110936434"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">项目名字    项目名字        spiders文件夹 （存储的是爬虫文件）            init            自定义的爬虫文件    核心功能文件        init        items        定义数据结构的地方 爬取的数据都包含哪些        middleware   中间件    代理        pipelines    管道   用来处理下载的数据        settings     配置文件    robots协议  ua定义等<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1️⃣ spiders</p><p>spiders可以理解为代表了我们人的操作，我们在操作scrapy的时候，实际上就是以spiders的身份在操作，初始的url是我们定义的。</p><p>2️⃣ 引擎</p><p>引擎是scrapy框架的中枢，从图中可以看出，引擎与所有的其他组件交互，并且交互大多带有指令性的操作，可以理解成一个指挥官。</p><p>3️⃣ 调度器</p><p>调度器，顾名思义，它是用来做调度的，简单的说就是它会把所有请求的url放入一个队列中，每一次会从队列中取出一个url，这个过程叫做调度。</p><p>4️⃣ 下载器</p><p>下载器，是用来下载数据的，它下载的是原始数据，可以理解为网页源码，这些源数据通过引擎再次交给我们用户spiders做进一步解析处理。(下载器沟通因特网，数据来源也是因特网)</p><p>5️⃣ 管道</p><p>管道的工作是下载图片、文件，它的工作与调度器下载源数据不同，它下载的是经过解析后的具体的图片、文件等数据。</p><p>1️⃣ Spiders文件夹</p><p>这文件夹我们不陌生，因为每一次新建scrapy爬虫项目后，我们都需要终端进入Spiders文件夹，生产爬虫文件。在Spiders文件夹下，又有两个文件，一个是_init_.py文件，一个是tc.py。<em>init</em>.py文件是我们创建项目时默认生成的一个py文件，我们用不到这个py文件，因此我们可以忽略它，另一个tc.py文件是我们爬虫的核心文件，后续的大部分代码都会写入这个文件，因此它是至关重要的py文件。</p><p>2️⃣<em>init</em>.py文件</p><p>它和上面提到的Spiders文件夹下的_init_.py一样，都是不被使用的py文件，无需理会。</p><p>3️⃣ items.py文件</p><p>这文件定义了数据结构，这里的数据结构与算法中的数据结构不同，它指的是爬虫目标数据的数据组成结构，例如我们需要获取目标网页的图片和图片的名称，那么此时我们的数据组成结构就定义为 图片、图片名称。后续会专门安排对scrapy框架定义数据结构的学习。</p><p>4️⃣ middleware.py文件</p><p>这py文件包含了scrapy项目的一些中间构件，例如代理、请求方式、执行等等，它对于项目来说是重要的，但对于我们爬虫基础学习来说，可以暂时不考虑更改它的内容。</p><p>5️⃣ pipelines.py文件</p><p>这是我们之前在工作原理中提到的scrapy框架中的管道文件，管道的作用是执行一些文件的下载，例如图片等，后续会安排对scrapy框架管道的学习，那时会专门研究这个py文件。</p><p>6️⃣ settings.py文件</p><p>这文件是整个scrapy项目的配置文件，里面是很多参数的设置，我们会偶尔设计到修改该文件中的部分参数，例如下一部分提到的ROBOTS协议限制，就需要进入该文件解除该限制，否则将无法实现爬取。</p><h3 id="3-创建爬虫文件"><a href="#3-创建爬虫文件" class="headerlink" title="3.创建爬虫文件"></a>3.创建爬虫文件</h3><p>要在spiders文件夹中取创建爬虫文件</p><p>执行 </p><p><code>scrapy genspider 爬虫文件名 要爬取的网页</code>scrapy genspider baidu <a href="http://www.baidu.com/">www.baidu.com</a></p><p>一般情况下不需要添加http协议</p><p><img src="http://image.kmoon.fun//images/202212221108805.png" alt="image-20221222110832624"></p><p><strong>response的属性和方法</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">response<span class="token punctuation">.</span>text   获取的是响应的字符串response<span class="token punctuation">.</span>body   获取的是二进制数据response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>  可以直接是xpath方法来解析response中的内容response<span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>   提取seletor对象的data属性值response<span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span> 提取seletor列表的第一个数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-运行爬虫文件"><a href="#4-运行爬虫文件" class="headerlink" title="4.运行爬虫文件"></a>4.运行爬虫文件</h3><p><code>scrapy crawl 爬虫文件名</code></p><p>修改settings.py是否遵守robots.txt协议 默认为True</p><blockquote><p>robots协议也叫robots.txt，是一种存放于网站根目录下的ASCII编码的文本文件，它通常告诉网络搜索引擎的漫游器（又称网络蜘蛛），此网站中的哪些内容是不应被搜索引擎的漫游器获取的，哪些是可以被漫游器获取的。</p></blockquote><p><img src="http://image.kmoon.fun//images/202212221109461.png" alt="image-20221222110900283"></p><h3 id="5-架构组成"><a href="#5-架构组成" class="headerlink" title="5.架构组成"></a>5.架构组成</h3><p>✳️ allowed_domains：这是scrapy框架中规定爬取的url的范围，简单地说就是，我们只能在这个参数定义的url的范围下获取数据，一旦数据超出范围，那么我们的请求将会失效。</p><p>✴️ start_urls：这是scrapy框架起始访问的url，也即在最初向这个url的位置发起请求。</p><ul><li>案例练习：汽车之家</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">CarSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'car'</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://car.autohome.com.cn/price/brand-15.html'</span><span class="token punctuation">]</span>    <span class="token comment"># 注意如果你的请求的接口是html为结尾的  那么是不需要加/的</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://car.autohome.com.cn/price/brand-15.html'</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        name_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@class="main-title"]/a/text()'</span><span class="token punctuation">)</span>        price_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@class="main-lever"]//span/span/text()'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>name_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            name <span class="token operator">=</span> name_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            price <span class="token operator">=</span> price_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>price<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>scrapy架构组成</p><p><img src="http://image.kmoon.fun//images/202212221237610.png" alt="image-20221222123729385"></p><h3 id="6-工作原理"><a href="#6-工作原理" class="headerlink" title="6.工作原理"></a>6.工作原理</h3><p><img src="http://image.kmoon.fun//images/202212221238475.png" alt="image-20221222123855315"></p><p><img src="http://image.kmoon.fun//images/202212221242922.png" alt="image-20221222124252739"></p><p><img src="http://image.kmoon.fun//images/202212221619820.jpeg" alt="img"></p><h2 id="scrapyshell"><a href="#scrapyshell" class="headerlink" title="scrapyshell"></a>scrapyshell</h2><h3 id="1-什么是scrapy-shell"><a href="#1-什么是scrapy-shell" class="headerlink" title="1.什么是scrapy shell"></a>1.什么是scrapy shell</h3><p>scrapy终端是一个交互终端，供您在未启动spider的情况下尝试及调试您的爬取代码。其本意是用来测试提取数据的代码，不过您可以将其作为正常的python终端，在上面测试任何的python代码。</p><p>该终端是用来测试xpath或css表达式，查看他们的工作方式及从爬取的网页中提取的数据。在编写您的spider时，该终端提供了交互性能测试您的表达式代码的功能，免去了每次修改后运行spider的麻烦。</p><p>一旦熟悉了scrapy终端后，您会发现其在开发和调试spider时发挥了巨大的作用</p><h3 id="2-安装ipython"><a href="#2-安装ipython" class="headerlink" title="2.安装ipython"></a>2.安装ipython</h3><p>pip install ipython</p><p>ipython终端与其他相比更为强大，提供智能的自动补全，高亮输出及其他特性。</p><p><img src="http://image.kmoon.fun//images/202212221253624.png" alt="image-20221222125315435"></p><h3 id="3-应用"><a href="#3-应用" class="headerlink" title="3.应用"></a>3.应用</h3><p>进入到scrapy shell的终端 ：</p><p>直接在window的终端中输入scrapy shell 域名</p><p>如果想看到一些高亮 或者 自动补全  那么可以安装ipython</p><p><code>scrapy shell www.baidu.com</code></p><p><img src="http://image.kmoon.fun//images/202212221257544.png" alt="image-20221222125758361"></p><h2 id="yield"><a href="#yield" class="headerlink" title="yield"></a>yield</h2><p>1.带有yield的函数不再是一个普通函数，而是一个生成器函数generator，可用于迭代</p><p>2.yield是一个类似return的关键字，迭代一次遇到yield时就返回yield后面（右边）的值。重点是：下一次迭代时，从上一次迭代遇到的yield后面的代码（下一行）开始执行。</p><p>3.简要理解：yield就是return返回一个值，并且记住这个返回的位置，下次迭代就从这个位置后（下一行）开始</p><ul><li><strong>案例练习：当当网</strong></li></ul><p><strong>yield</strong></p><p><strong>管道封装</strong></p><p><strong>多条管道下载</strong></p><p><strong>多页数据下载</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># items.py</span><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">ScrapyDangdang095Item</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># define the fields for your item here like:</span>    <span class="token comment"># name = scrapy.Field()</span>    <span class="token comment"># 通俗的说就是你要下载的数据都有什么</span>    <span class="token comment"># 图片</span>    src <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 名字</span>    name <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 价格</span>    price <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> scrapy_dangdang_095<span class="token punctuation">.</span>items <span class="token keyword">import</span> ScrapyDangdang095Item<span class="token keyword">class</span> <span class="token class-name">DangSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'dang'</span>    <span class="token comment"># 如果是多页下载的话 那么必须要调整的是allowed_domains的范围 一般情况下只写域名</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'category.dangdang.com'</span><span class="token punctuation">]</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'http://category.dangdang.com/cp01.01.02.00.00.00.html'</span><span class="token punctuation">]</span>    base_url <span class="token operator">=</span> <span class="token string">'http://category.dangdang.com/pg'</span>    page <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># pipelines 下载数据</span><span class="token comment"># items     定义数据结构的</span><span class="token comment">#   src = //ul[@id="component_59"]/li//img/@src</span><span class="token comment">#   alt = //ul[@id="component_59"]/li//img/@alt</span><span class="token comment">#   price = //ul[@id="component_59"]/li//p[@class="price"]/span[1]/text()</span><span class="token comment"># 所有的seletor的对象 都可以再次调用xpath方法</span>        li_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul[@id="component_59"]/li'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span>            src <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'.//img/@data-original'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 第一张图片和其他的图片的标签的属性是不一样的</span>            <span class="token comment"># 第一张图片的src是可以使用的  其他的图片的地址是data-original</span>            <span class="token keyword">if</span> src<span class="token punctuation">:</span>                src <span class="token operator">=</span> src            <span class="token keyword">else</span><span class="token punctuation">:</span>                src <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'.//img/@src'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            name <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'.//img/@alt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            price <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'.//p[@class="price"]/span[1]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            book <span class="token operator">=</span> ScrapyDangdang095Item<span class="token punctuation">(</span>src<span class="token operator">=</span>src<span class="token punctuation">,</span>name<span class="token operator">=</span>name<span class="token punctuation">,</span>price<span class="token operator">=</span>price<span class="token punctuation">)</span>            <span class="token comment"># 获取一个book就将book交给pipelines</span>            <span class="token keyword">yield</span> book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># settings.py</span><span class="token comment"># Configure item pipelines</span><span class="token comment"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">{</span>   <span class="token comment">#  管道可以有很多个  那么管道是有优先级的  优先级的范围是1到1000   值越小优先级越高</span>   <span class="token string">'scrapy_dangdang_095.pipelines.ScrapyDangdang095Pipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token comment">#    DangDangDownloadPipeline</span>   <span class="token string">'scrapy_dangdang_095.pipelines.DangDangDownloadPipeline'</span><span class="token punctuation">:</span><span class="token number">301</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># pipelines.py</span><span class="token comment"># 如果想使用管道的话 那么就必须在settings中开启管道</span><span class="token keyword">class</span> <span class="token class-name">ScrapyDangdang095Pipeline</span><span class="token punctuation">:</span>        <span class="token comment"># 在爬虫文件开始的之前就执行的一个方法</span>    <span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'book.json'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token comment"># item就是yield后面的book对象</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 以下这种模式不推荐  因为每传递过来一个对象 那么就打开一次文件  对文件的操作过于频繁</span>        <span class="token comment"># # (1) write方法必须要写一个字符串 而不能是其他的对象</span>        <span class="token comment"># # (2) w模式 会每一个对象都打开一次文件 覆盖之前的内容</span>        <span class="token comment"># with open('book.json','a',encoding='utf-8')as fp:</span>        <span class="token comment">#     fp.write(str(item))</span>        self<span class="token punctuation">.</span>fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> item    <span class="token comment"># 在爬虫文件执行完之后  执行的方法</span>    <span class="token keyword">def</span> <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>fp<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>多条管道同时下载</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># pipelines.py</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token comment"># 多条管道开启</span><span class="token comment">#    (1) 定义管道类</span><span class="token comment">#   （2） 在settings中开启管道</span><span class="token comment"># 'scrapy_dangdang_095.pipelines.DangDangDownloadPipeline':301</span><span class="token keyword">class</span> <span class="token class-name">DangDangDownloadPipeline</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string">'http:'</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">)</span>        filename <span class="token operator">=</span> <span class="token string">'./books/'</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg'</span>        urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlretrieve<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span> filename<span class="token operator">=</span> filename<span class="token punctuation">)</span>        <span class="token keyword">return</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>多页数据下载</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">DangSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'dang'</span>    <span class="token comment"># 如果是多页下载的话 那么必须要调整的是allowed_domains的范围 一般情况下只写域名</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'category.dangdang.com'</span><span class="token punctuation">]</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'http://category.dangdang.com/cp01.01.02.00.00.00.html'</span><span class="token punctuation">]</span>    base_url <span class="token operator">=</span> <span class="token string">'http://category.dangdang.com/pg'</span>    page <span class="token operator">=</span> <span class="token number">1</span><span class="token comment"># 每一页的爬取的业务逻辑全都是一样的，所以我们只需要将执行的那个页的请求再次调用parse方法就可以了</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>page <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>page <span class="token operator">=</span> self<span class="token punctuation">.</span>page <span class="token operator">+</span> <span class="token number">1</span>        url <span class="token operator">=</span> self<span class="token punctuation">.</span>base_url <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>page<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'-cp01.01.02.00.00.00.html'</span><span class="token comment">#  怎么去调用parse方法</span><span class="token comment">#  scrapy.Request就是scrpay的get请求</span><span class="token comment">#  url就是请求地址</span><span class="token comment">#  callback是你要执行的那个函数  注意不需要加（）</span><span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>案例练习：电影天堂</strong></li></ul><p><strong>多级页面情况</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> scrapy_movie_099<span class="token punctuation">.</span>items <span class="token keyword">import</span> ScrapyMovie099Item<span class="token keyword">class</span> <span class="token class-name">MvSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'mv'</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'www.dytt8.net'</span><span class="token punctuation">]</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://www.dytt8.net/html/gndy/china/index.html'</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># 要第一个的名字 和 第二页的图片</span>        a_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@class="co_content8"]//td[2]//a[2]'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> a <span class="token keyword">in</span> a_list<span class="token punctuation">:</span>            <span class="token comment"># 获取第一页的name 和 要点击的链接</span>            name <span class="token operator">=</span> a<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            href <span class="token operator">=</span> a<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./@href'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 第二页的地址是</span>            url <span class="token operator">=</span> <span class="token string">'https://www.dytt8.net'</span> <span class="token operator">+</span> href            <span class="token comment"># 对第二页的链接发起访问</span>            <span class="token keyword">yield</span>  scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse_second<span class="token punctuation">,</span>meta<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span>name<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse_second</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 注意 如果拿不到数据的情况下  一定检查xpath语法是否正确</span>        src <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@id="Zoom"]//img/@src'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 接受到请求的那个meta参数的值</span>        name <span class="token operator">=</span> response<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span>        movie <span class="token operator">=</span> ScrapyMovie099Item<span class="token punctuation">(</span>src<span class="token operator">=</span>src<span class="token punctuation">,</span>name<span class="token operator">=</span>name<span class="token punctuation">)</span>        <span class="token keyword">yield</span> movie<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>总结</strong>：</p><p>首先，我们需要定义数据结构</p><p>其次，我们需要封装管道</p><p>接下来，我们需要在settings配置文件中修改管道配置</p><p>最后，我们需要在爬虫文件中完成：响应解析、数据结构对象定义、调用管道</p><h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><h3 id="mysql下载-amp-安装"><a href="#mysql下载-amp-安装" class="headerlink" title="mysql下载&amp;安装"></a>mysql下载&amp;安装</h3><p><img src="http://image.kmoon.fun//images/202212221438125.png" alt="image-20221222143837775"></p><h2 id="pymysql的使用步骤"><a href="#pymysql的使用步骤" class="headerlink" title="pymysql的使用步骤"></a>pymysql的使用步骤</h2><p><img src="http://image.kmoon.fun//images/202212221523194.png" alt="image-20221222152352938"></p><h2 id="CrawlSpider"><a href="#CrawlSpider" class="headerlink" title="CrawlSpider"></a>CrawlSpider</h2><h3 id="1-继承自scrapy-Spider"><a href="#1-继承自scrapy-Spider" class="headerlink" title="1.继承自scrapy.Spider"></a>1.继承自scrapy.Spider</h3><h3 id="2-独门秘籍"><a href="#2-独门秘籍" class="headerlink" title="2.独门秘籍"></a>2.独门秘籍</h3><p>CrawlSpider可以定义规则，在解析html内容的时候，可以根据链接规则提取出指定的链接，然后再向这些链接发送请求</p><p>所以，如果有需要跟进链接的需求，意思就是爬取了网页下之后，需要提取链接再次爬取，使用CrawlSpider是非常合适的。</p><h3 id="3-链接提取器"><a href="#3-链接提取器" class="headerlink" title="3.链接提取器"></a>3.链接提取器</h3><p>链接提取器，在这里就可以写规则提取指定链接</p><p><img src="http://image.kmoon.fun//images/202212221448439.png" alt="image-20221222144830185"></p><p><img src="http://image.kmoon.fun//images/202212221453641.png" alt="image-20221222145300401"></p><ul><li>案例练习：读书网数据入库</li></ul><p><img src="http://image.kmoon.fun//images/202212221454828.png" alt="image-20221222145422583"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1.</span> 创建项目 scrapy startproject 项目的名字<span class="token number">2.</span> 跳转到spiders文件夹的目录下   cd 项目名字\项目名字\spiders<span class="token number">3.</span> 创建爬虫文件   scrapy genspider <span class="token operator">-</span>t crawl 爬虫文件的名字  爬取的域名        <span class="token keyword">import</span> scrapy<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>linkextractors <span class="token keyword">import</span> LinkExtractor<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>spiders <span class="token keyword">import</span> CrawlSpider<span class="token punctuation">,</span> Rule<span class="token keyword">from</span> scrapy_readbook_101<span class="token punctuation">.</span>items <span class="token keyword">import</span> ScrapyReadbook101Item<span class="token keyword">class</span> <span class="token class-name">ReadSpider</span><span class="token punctuation">(</span>CrawlSpider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'read'</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'www.dushu.com'</span><span class="token punctuation">]</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://www.dushu.com/book/1188_1.html'</span><span class="token punctuation">]</span>    <span class="token comment"># follow 跟进</span>    rules <span class="token operator">=</span> <span class="token punctuation">(</span>        Rule<span class="token punctuation">(</span>LinkExtractor<span class="token punctuation">(</span>allow<span class="token operator">=</span><span class="token string">r'/book/1188_\d+\.html'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                           callback<span class="token operator">=</span><span class="token string">'parse_item'</span><span class="token punctuation">,</span>                           follow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        img_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@class="bookslist"]//img'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> img <span class="token keyword">in</span> img_list<span class="token punctuation">:</span>            src <span class="token operator">=</span> img<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./@data-original'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            name <span class="token operator">=</span> img<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./@alt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            book <span class="token operator">=</span> ScrapyReadbook101Item<span class="token punctuation">(</span>name<span class="token operator">=</span>name<span class="token punctuation">,</span>src<span class="token operator">=</span>src<span class="token punctuation">)</span>            <span class="token keyword">yield</span> book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据入库"><a href="#数据入库" class="headerlink" title="数据入库"></a>数据入库</h2><p><strong>创建数据库</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql -uroot -p123456create database spider01 charset=utf8;use spider01create table book(    id int primarykey auto_increment,    name varchar(128),    src varchar(128))select * from book;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>配置settings.py</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 参数中一个端口号 一个是字符集 都要注意</span>DB_HOST <span class="token operator">=</span> <span class="token string">'127.0.0.1'</span><span class="token comment"># 端口号是一个整数</span>DB_PORT <span class="token operator">=</span> <span class="token number">3306</span>DB_USER <span class="token operator">=</span> <span class="token string">'root'</span>DB_PASSWROD <span class="token operator">=</span> <span class="token string">'123456'</span>DB_NAME <span class="token operator">=</span> <span class="token string">'spider01'</span><span class="token comment"># utf-8的杠不允许写</span>DB_CHARSET <span class="token operator">=</span> <span class="token string">'utf8'</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">{</span>   <span class="token string">'scrapy_readbook_101.pipelines.ScrapyReadbook101Pipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>   <span class="token comment"># MysqlPipeline</span>  <span class="token string">'scrapy_readbook_101.pipelines.MysqlPipeline'</span><span class="token punctuation">:</span><span class="token number">301</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>创建管道类</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 加载settings文件</span><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>project <span class="token keyword">import</span> get_project_settings<span class="token keyword">import</span> pymysql<span class="token keyword">class</span> <span class="token class-name">MysqlPipeline</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        settings <span class="token operator">=</span> get_project_settings<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>host <span class="token operator">=</span> settings<span class="token punctuation">[</span><span class="token string">'DB_HOST'</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>port <span class="token operator">=</span>settings<span class="token punctuation">[</span><span class="token string">'DB_PORT'</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>user <span class="token operator">=</span>settings<span class="token punctuation">[</span><span class="token string">'DB_USER'</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>password <span class="token operator">=</span>settings<span class="token punctuation">[</span><span class="token string">'DB_PASSWROD'</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span>settings<span class="token punctuation">[</span><span class="token string">'DB_NAME'</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>charset <span class="token operator">=</span>settings<span class="token punctuation">[</span><span class="token string">'DB_CHARSET'</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">connect</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>                            host<span class="token operator">=</span>self<span class="token punctuation">.</span>host<span class="token punctuation">,</span>                            port<span class="token operator">=</span>self<span class="token punctuation">.</span>port<span class="token punctuation">,</span>                            user<span class="token operator">=</span>self<span class="token punctuation">.</span>user<span class="token punctuation">,</span>                            password<span class="token operator">=</span>self<span class="token punctuation">.</span>password<span class="token punctuation">,</span>                            db<span class="token operator">=</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>                            charset<span class="token operator">=</span>self<span class="token punctuation">.</span>charset        <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cursor <span class="token operator">=</span> self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        sql <span class="token operator">=</span> <span class="token string">'insert into book(name,src) values("{}","{}")'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>item<span class="token punctuation">[</span><span class="token string">'src'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 执行sql语句</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        <span class="token comment"># 提交</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> item    <span class="token keyword">def</span> <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="日志信息以及日志等级"><a href="#日志信息以及日志等级" class="headerlink" title="日志信息以及日志等级"></a>日志信息以及日志等级</h2><p><img src="http://image.kmoon.fun//images/202212221536464.png" alt="image-20221222153624162"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># settings.py</span><span class="token comment"># 指定日志的级别</span><span class="token comment"># LOG_LEVEL='WARNING'</span>LOG_FILE <span class="token operator">=</span> <span class="token string">'logdemo.log'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先是不在终端显示日志，即还我们一个清爽的终端显示；</p><p>其次是把日志保存在spiders文件夹下的xxxx.log文件中，供我们查看</p><h2 id="Requests和reponse总结"><a href="#Requests和reponse总结" class="headerlink" title="Requests和reponse总结"></a>Requests和reponse总结</h2><h2 id="scrapy的post请求"><a href="#scrapy的post请求" class="headerlink" title="scrapy的post请求"></a>scrapy的post请求</h2><p><img src="http://image.kmoon.fun//images/202212221541177.png" alt="image-20221222154111906"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">import</span> json<span class="token keyword">class</span> <span class="token class-name">TestpostSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'testpost'</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://fanyi.baidu.com/sug'</span><span class="token punctuation">]</span>    <span class="token comment"># post请求 如果没有参数 那么这个请求将没有任何意义</span>    <span class="token comment"># 所以start_urls 也没有用了</span>    <span class="token comment"># parse方法也没有用了</span>    <span class="token comment"># start_urls = ['https://fanyi.baidu.com/sug/']</span>    <span class="token comment">#</span>    <span class="token comment"># def parse(self, response):</span>    <span class="token comment">#     pass</span>    <span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string">'https://fanyi.baidu.com/sug'</span>        data <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">'kw'</span><span class="token punctuation">:</span> <span class="token string">'final'</span>        <span class="token punctuation">}</span>        <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>FormRequest<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>formdata<span class="token operator">=</span>data<span class="token punctuation">,</span>callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse_second<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse_second</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>        content <span class="token operator">=</span> response<span class="token punctuation">.</span>text        obj <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Excel文件读写"><a href="#Excel文件读写" class="headerlink" title="Excel文件读写"></a>Excel文件读写</h1><h2 id="安装相关库"><a href="#安装相关库" class="headerlink" title="安装相关库"></a>安装相关库</h2><p><code>pip install xlrd==1.2.0</code></p><p>xlrd版本太高会出现报错</p><p><code>pip install xlsxwriter</code></p><p><strong>xlrd 这个包是当我们需要打开或者读出一个Excel文件时需要依赖的包</strong>，我们的写入操作是不需要它的。</p><p><strong>xlsxwriter</strong> 这个包从拼写就可以看出它<strong>是专供写入Excel使用的包</strong>。</p><h2 id="读写操作"><a href="#读写操作" class="headerlink" title="读写操作"></a>读写操作</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入包</span><span class="token keyword">import</span> xlrd<span class="token keyword">import</span> xlsxwriter<span class="token comment"># 创建一张空表</span><span class="token keyword">import</span> xlsxwriterexcel_file_writer <span class="token operator">=</span> xlsxwriter<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token string">r'./demo.xlsx'</span><span class="token punctuation">)</span>excel_file_writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表的创建工作只需要xlsxwriter包即可，无关另一个包。它的过程是首先我们<strong>新建一个文件操作对象(excel_file_writer)<strong>，并在</strong>创建时传入文件的路径和文件名称</strong>(<strong>注意后缀只能是”xlsx”</strong>)。</p><p>写入数据</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> xlsxwriter excel_file_writer <span class="token operator">=</span> xlsxwriter<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token string">r'./demo.xlsx'</span><span class="token punctuation">)</span> excel_worksheet_writer <span class="token operator">=</span> excel_file_writer<span class="token punctuation">.</span>add_worksheet<span class="token punctuation">(</span><span class="token string">'sheet1'</span><span class="token punctuation">)</span> student_name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">,</span><span class="token string">'e'</span><span class="token punctuation">]</span> grade_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>student_name_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    excel_worksheet_writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>student_name_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    excel_worksheet_writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>grade_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    excel_file_writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>write(工作表的行数，工作表的列数，写入的数据)</strong></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/qq_52736131/article/details/123251138">https://blog.csdn.net/qq_52736131/article/details/123251138</a> 六万字爬虫笔记</p><p><a href="https://blog.csdn.net/weixin_45816407/article/details/120176139">https://blog.csdn.net/weixin_45816407/article/details/120176139</a> xpath插件</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;2022-12-18 ~ 2022.12.22&lt;br&gt;历时四天，过了一遍尚硅谷视频，掌握了基础爬虫知识。&lt;br&gt;接下来计划利用一周时间将所有案例练习全部亲手敲一遍，巩固一下各个库和框架的内容。&lt;br&gt;然后自己写一个爬取携程网特定旅游景点评论数据，导入MySQL数据库(作为乡村文旅项目数据源)&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="学习札记" scheme="https://www.kmoon.fun/categories/%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0/"/>
    
    
    <category term="python" scheme="https://www.kmoon.fun/tags/python/"/>
    
    <category term="爬虫" scheme="https://www.kmoon.fun/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>学习札记-VUEjs从入门到精通(放弃)</title>
    <link href="https://www.kmoon.fun/2022/vue/"/>
    <id>https://www.kmoon.fun/2022/vue/</id>
    <published>2022-12-15T02:24:05.000Z</published>
    <updated>2022-12-20T06:34:49.102Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2022.12.15</p></blockquote><img src="http://image.kmoon.fun//images/202212151045732.png" alt="image-20221215104533664" style="zoom:50%;"><h1 id="Vue简介"><a href="#Vue简介" class="headerlink" title="Vue简介"></a>Vue简介</h1><p>一套用于<strong>构建用户界面</strong>的<strong>渐进式</strong>JavaScript框架</p><img src="http://image.kmoon.fun//images/202212151047020.png" alt="image-20221215104745979" style="zoom:67%;"><span id="more"></span><h2 id="vue的特点"><a href="#vue的特点" class="headerlink" title="vue的特点"></a>vue的特点</h2><p><img src="http://image.kmoon.fun//images/202212151104725.png" alt="image-20221215110437656"></p><h2 id="vue官网指南"><a href="#vue官网指南" class="headerlink" title="vue官网指南"></a>vue官网指南</h2><ul><li>学习</li></ul><p>教程 –入门</p><p>API –vue<strong>字典</strong></p><p>风格指南 –代码规范</p><p>示例 –example</p><p>cookbook –技巧</p><ul><li>生态系统</li></ul><p>工具</p><p>核心插件</p><ul><li>资源列表</li></ul><p>Awesome vue</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>直接用&lt;script&gt;引入</p><h2 id="Hello小案例"><a href="#Hello小案例" class="headerlink" title="Hello小案例"></a>Hello小案例</h2><p><img src="http://image.kmoon.fun//images/202212151504226.png" alt="image-20221215150449181"></p><p>注意区分：js表达式 vs js代码(语句)</p><p><img src="http://image.kmoon.fun//images/202212151458086.png" alt="image-20221215145824043"></p><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><h3 id="插值语法"><a href="#插值语法" class="headerlink" title="插值语法"></a>插值语法</h3><h3 id="指令语法"><a href="#指令语法" class="headerlink" title="指令语法"></a>指令语法</h3><p><code>v-bind:</code> 简写–&gt;<code>:</code></p><p><img src="http://image.kmoon.fun//images/202212151529832.png" alt="image-20221215152913761"></p><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><p>单向数据绑定</p><p>双向数据绑定</p><p><img src="http://image.kmoon.fun//images/202212151559277.png" alt="image-20221215155913209"></p><h2 id="el与data的两种写法"><a href="#el与data的两种写法" class="headerlink" title="el与data的两种写法"></a>el与data的两种写法</h2><p><img src="http://image.kmoon.fun//images/202212151616362.png" alt="image-20221215161617317"></p><h2 id="理解MVVM"><a href="#理解MVVM" class="headerlink" title="理解MVVM"></a>理解MVVM</h2><p><img src="http://image.kmoon.fun//images/202212151621743.png" alt="image-20221215162119698"></p><p><img src="http://image.kmoon.fun//images/202212151621221.png" alt="image-20221215162141185"></p><p><img src="http://image.kmoon.fun//images/202212151625202.png" alt="image-20221215162500156"></p><p><img src="http://image.kmoon.fun//images/202212151643518.png" alt="image-20221215164321486"></p><blockquote><p>2022.12.16</p></blockquote><h2 id="Object-defineProperty"><a href="#Object-defineProperty" class="headerlink" title="Object.defineProperty"></a>Object.defineProperty</h2><p>定义一个新属性或者修改现有属性并返回</p><p><code>Object.defineProperty(person,'age',{value:18})</code></p><p>value 值</p><p>enumerable控制属性是否可枚举，默认false</p><p>writable   控制属性是否可修改，默认false</p><p>configurable   控制属性是否可删除，默认false</p><p>getter 和 setter 函数 获取或修改值</p><h2 id="理解数据代理"><a href="#理解数据代理" class="headerlink" title="理解数据代理"></a>理解数据代理</h2><p>通过一个对象代理对另一个对象中属性的操作</p><p><img src="http://image.kmoon.fun//images/202212161104088.png" alt="image-20221216110408038"></p><h2 id="Vue中的数据代理"><a href="#Vue中的数据代理" class="headerlink" title="Vue中的数据代理"></a>Vue中的数据代理</h2><p><img src="http://image.kmoon.fun//images/202212161100067.png" alt="image-20221216110000838"></p><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><p><img src="http://image.kmoon.fun//images/202212161915850.png" alt="image-20221216191504518"></p><h2 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h2><p><img src="http://image.kmoon.fun//images/202212161934504.png" alt="image-20221216193435448"></p><p><img src="http://image.kmoon.fun//images/202212161928425.png" alt="image-20221216192827365"></p><blockquote><p>2022.12.17</p></blockquote><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><h2 id="事件总结"><a href="#事件总结" class="headerlink" title="事件总结"></a>事件总结</h2><h2 id="姓名案例"><a href="#姓名案例" class="headerlink" title="姓名案例"></a>姓名案例</h2><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;2022.12.15&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;http://image.kmoon.fun//images/202212151045732.png&quot; alt=&quot;image-20221215104533664&quot; style=&quot;zoom:50%;&quot;&gt;

&lt;h1 id=&quot;Vue简介&quot;&gt;&lt;a href=&quot;#Vue简介&quot; class=&quot;headerlink&quot; title=&quot;Vue简介&quot;&gt;&lt;/a&gt;Vue简介&lt;/h1&gt;&lt;p&gt;一套用于&lt;strong&gt;构建用户界面&lt;/strong&gt;的&lt;strong&gt;渐进式&lt;/strong&gt;JavaScript框架&lt;/p&gt;
&lt;img src=&quot;http://image.kmoon.fun//images/202212151047020.png&quot; alt=&quot;image-20221215104745979&quot; style=&quot;zoom:67%;&quot;&gt;</summary>
    
    
    
    <category term="学习札记" scheme="https://www.kmoon.fun/categories/%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>WUT-Java+Swing+mssql学生成绩管理系统</title>
    <link href="https://www.kmoon.fun/2022/swing/"/>
    <id>https://www.kmoon.fun/2022/swing/</id>
    <published>2022-12-15T01:00:28.000Z</published>
    <updated>2022-12-15T01:52:27.227Z</updated>
    
    <content type="html"><![CDATA[<p>基于Java、Swing、SQL server的图形化界面学生成绩管理系统，WHUT数据库应用系统开发大作业项目，未经允许禁止cv，有任何关于具体代码的问题下方评论区联系我，没有Java代码基础自行学习，不提供源代码，仅提供部分核心代码和实现思路。</p><span id="more"></span><h1 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h1><p><img src="http://image.kmoon.fun//images/202212150909501.png" alt="image-20221215090854397"></p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><p>关于jdbc驱动、数据库连接、建库建表、插件导入等问题</p><p><strong>该百度百度，该Google谷歌。</strong></p><h1 id="建库建表sql"><a href="#建库建表sql" class="headerlink" title="建库建表sql"></a>建库建表sql</h1><p><img src="http://image.kmoon.fun//images/202212150942500.png" alt="image-20221215094253446"></p><h1 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h1><h2 id="1-测试类-Test"><a href="#1-测试类-Test" class="headerlink" title="1.测试类 Test"></a>1.测试类 Test</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hushan<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>        <span class="token comment">//加载驱动</span>        <span class="token class-name">String</span> cname <span class="token operator">=</span> <span class="token string">"com.microsoft.sqlserver.jdbc.SQLServerDriver"</span><span class="token punctuation">;</span>        <span class="token comment">//用户连接信息</span>        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">"sa"</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:sqlserver://localhost:1433;DatabaseName=students"</span><span class="token punctuation">;</span>        <span class="token comment">//连接数据库</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建数据库操作对象</span>        <span class="token class-name">Statement</span> statement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//执行sql语句，返回结果</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from student"</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> statement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"sname"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        statement<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-方法类-DBhepler"><a href="#2-方法类-DBhepler" class="headerlink" title="2.方法类 DBhepler"></a>2.方法类 DBhepler</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hushan<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">PreparedStatement</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DBHepler</span> <span class="token punctuation">{</span>    <span class="token comment">//静态代码</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> cname <span class="token operator">=</span> <span class="token string">"com.microsoft.sqlserver.jdbc.SQLServerDriver"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> uname <span class="token operator">=</span> <span class="token string">"sa"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> upwd <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:sqlserver://localhost:1433;DatabaseName=students"</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment">//创建驱动</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>cname<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//处理异常</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//定义连接</span>        <span class="token class-name">Connection</span> con <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment">//连接驱动</span>            con <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> uname<span class="token punctuation">,</span> upwd<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//处理异常</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//返回连接</span>        <span class="token keyword">return</span> con<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 关闭连接     * @param con连接     * @param ps执行对象     * @param rs结果集     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getclose</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> con<span class="token punctuation">,</span><span class="token class-name">PreparedStatement</span> ps<span class="token punctuation">,</span><span class="token class-name">ResultSet</span> rs<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>con<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//关闭连接</span>                con<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>ps<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//关闭执行对象</span>                ps<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>rs<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//关闭结果集</span>                rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//处理异常</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="编写实体类-entity"><a href="#编写实体类-entity" class="headerlink" title="编写实体类 entity"></a>编写实体类 entity</h1><p>本项目为学生成绩管理系统，应课程作业要求共需要五张表，分别为学生信息表、课程信息表、系信息表、成绩表、学生关系表。</p><p>实体类编写很简单，只需要编写对有表含有的字段的get和set方法，以及对应构造函数，注意返回值和形参数据类型即可。</p><p>以下以Student和Grade实体类作说明：</p><h2 id="学生Student实体类"><a href="#学生Student实体类" class="headerlink" title="学生Student实体类"></a>学生Student实体类</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hushan<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>    <span class="token comment">//私有化属性</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> sid<span class="token punctuation">;</span><span class="token comment">//学号</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sname<span class="token punctuation">;</span><span class="token comment">//姓名</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> ssex<span class="token punctuation">;</span><span class="token comment">//性别</span>    <span class="token comment">//公开属性</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSid</span><span class="token punctuation">(</span><span class="token keyword">int</span> sid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sid <span class="token operator">=</span> sid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sname<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSname</span><span class="token punctuation">(</span><span class="token class-name">String</span> sname<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sname <span class="token operator">=</span> sname<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSsex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> ssex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSsex</span><span class="token punctuation">(</span><span class="token class-name">String</span> ssex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ssex <span class="token operator">=</span> ssex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//构造函数</span>    <span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token keyword">int</span> sid<span class="token punctuation">,</span> <span class="token class-name">String</span> sname<span class="token punctuation">,</span> <span class="token class-name">String</span> ssex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sid <span class="token operator">=</span> sid<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sname <span class="token operator">=</span> sname<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ssex <span class="token operator">=</span> ssex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> sid<span class="token punctuation">,</span><span class="token class-name">String</span> sname<span class="token punctuation">,</span> <span class="token class-name">String</span> ssex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sid<span class="token operator">=</span>sid<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sname <span class="token operator">=</span> sname<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ssex <span class="token operator">=</span> ssex<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="成绩Grade实体类"><a href="#成绩Grade实体类" class="headerlink" title="成绩Grade实体类"></a>成绩Grade实体类</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hushan<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Grade</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> cno<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sno<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> grade<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> cname<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Grade</span><span class="token punctuation">(</span><span class="token class-name">String</span> cno<span class="token punctuation">,</span> <span class="token class-name">String</span> sno<span class="token punctuation">,</span> <span class="token class-name">String</span> grade<span class="token punctuation">,</span> <span class="token class-name">String</span> cname<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cno <span class="token operator">=</span> cno<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sno <span class="token operator">=</span> sno<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>grade <span class="token operator">=</span> grade<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cname <span class="token operator">=</span> cname<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//构造函数</span>    <span class="token keyword">public</span> <span class="token class-name">Grade</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCno</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> cno<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCno</span><span class="token punctuation">(</span><span class="token class-name">String</span> cno<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cno <span class="token operator">=</span> cno<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSno</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sno<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSno</span><span class="token punctuation">(</span><span class="token class-name">String</span> sno<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sno <span class="token operator">=</span> sno<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> grade<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setGrade</span><span class="token punctuation">(</span><span class="token class-name">String</span> grade<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>grade <span class="token operator">=</span> grade<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> cname<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCname</span><span class="token punctuation">(</span><span class="token class-name">String</span> cname<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cname <span class="token operator">=</span> cname<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="编写方法类-dao"><a href="#编写方法类-dao" class="headerlink" title="编写方法类 dao"></a>编写方法类 dao</h1><p>方法类主要针对数据库进行增删改查编写函数方法,包括增删改查、带参查询、模糊查询。</p><p>下面以对学生表的方法类StudentDao做说明：</p><h2 id="StudentDao方法类"><a href="#StudentDao方法类" class="headerlink" title="StudentDao方法类"></a>StudentDao方法类</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hushan<span class="token punctuation">.</span>dao</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">PreparedStatement</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hushan<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hushan<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">DBHepler</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StudentDao</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 添加方法     * @param t要添加学生信息     * @return成功放回1，失败放回0     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Student</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//定义影响行数</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//定义连接为null</span>        <span class="token class-name">Connection</span> con <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//定义执行对象为null</span>        <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment">//执行连接</span>            con <span class="token operator">=</span> <span class="token class-name">DBHepler</span><span class="token punctuation">.</span><span class="token function">getcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//执行sql语句</span>            ps <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span><span class="token string">"insert into student values (?,?,?)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//给占位符赋值</span>            ps<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ps<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">getSname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ps<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">getSsex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//计算影响行数</span>            i <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// TODO: handle exception</span>            <span class="token comment">//处理异常</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment">//关闭资源</span>            <span class="token class-name">DBHepler</span><span class="token punctuation">.</span><span class="token function">getclose</span><span class="token punctuation">(</span>con<span class="token punctuation">,</span> ps<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//返回影响行数</span>        <span class="token keyword">return</span> i<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 修改方法     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span> sid<span class="token punctuation">,</span><span class="token class-name">Student</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//定义影响行数</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//定义连接为null</span>        <span class="token class-name">Connection</span> con <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//定义执行对象为null</span>        <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment">//执行连接</span>            con <span class="token operator">=</span> <span class="token class-name">DBHepler</span><span class="token punctuation">.</span><span class="token function">getcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//执行sql语句</span>            ps <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span><span class="token string">"update student set sname=?,ssex=? where sno="</span><span class="token operator">+</span>sid<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//给占位符赋值</span>            ps<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">getSname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ps<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">getSsex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//计算影响行数</span>            i <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// TODO: handle exception</span>            <span class="token comment">//处理异常</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment">//关闭资源</span>            <span class="token class-name">DBHepler</span><span class="token punctuation">.</span><span class="token function">getclose</span><span class="token punctuation">(</span>con<span class="token punctuation">,</span> ps<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//返回影响行数</span>        <span class="token keyword">return</span> i<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 删除方法     * @param sid 要删除学生信息     * @return成功放回1，失败放回0     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">int</span> sid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//定义影响行数</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//定义连接为null</span>        <span class="token class-name">Connection</span> con <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//定义执行对象为null</span>        <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment">//执行连接</span>            con <span class="token operator">=</span> <span class="token class-name">DBHepler</span><span class="token punctuation">.</span><span class="token function">getcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//执行sql语句</span>            ps <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span><span class="token string">"delete from student where sno="</span><span class="token operator">+</span>sid<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//计算影响行数</span>            i <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// TODO: handle exception</span>            <span class="token comment">//处理异常</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment">//关闭资源</span>            <span class="token class-name">DBHepler</span><span class="token punctuation">.</span><span class="token function">getclose</span><span class="token punctuation">(</span>con<span class="token punctuation">,</span> ps<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//返回影响行数</span>        <span class="token keyword">return</span> i<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 模糊查询     * @param col字段名     * @param str关键字     * @return集合信息     */</span>    <span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">&gt;</span></span> <span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">String</span> col<span class="token punctuation">,</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//定义一个实体类集合</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//定义连接为null</span>        <span class="token class-name">Connection</span> con <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//定义执行对象为null</span>        <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//定义结果集为null</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment">//执行连接</span>            con <span class="token operator">=</span> <span class="token class-name">DBHepler</span><span class="token punctuation">.</span><span class="token function">getcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//执行sql语句</span>            ps <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span><span class="token string">"select * from student where "</span><span class="token operator">+</span>col<span class="token operator">+</span><span class="token string">" like '%"</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">"%'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//执行结果集</span>            rs <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//遍历</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//赋值</span>                <span class="token keyword">int</span> sid <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> sname <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> ssex <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//实例化对象赋值</span>                <span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span> ssex<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//添加</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// TODO: handle exception</span>            <span class="token comment">//处理异常</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment">//关闭资源</span>            <span class="token class-name">DBHepler</span><span class="token punctuation">.</span><span class="token function">getclose</span><span class="token punctuation">(</span>con<span class="token punctuation">,</span> ps<span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//返回集合信息</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 查询单个     * @param sid要查询的学生id     * @return实体类信息     */</span>    <span class="token keyword">public</span> <span class="token class-name">Student</span> <span class="token function">chaxun</span><span class="token punctuation">(</span><span class="token keyword">int</span> sid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//定义一个实体类为null</span>        <span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//定义连接为null</span>        <span class="token class-name">Connection</span> con <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//定义执行对象为null</span>        <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//定义结果集为null</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment">//执行连接</span>            con <span class="token operator">=</span> <span class="token class-name">DBHepler</span><span class="token punctuation">.</span><span class="token function">getcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//执行sql语句</span>            ps <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span><span class="token string">"select * from student where sno="</span><span class="token operator">+</span>sid<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//执行结果集</span>            rs <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//遍历</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//赋值</span>                <span class="token class-name">String</span> sname <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> ssex <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//实例化对象赋值</span>                stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span> ssex<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// TODO: handle exception</span>            <span class="token comment">//处理异常</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment">//关闭资源</span>            <span class="token class-name">DBHepler</span><span class="token punctuation">.</span><span class="token function">getclose</span><span class="token punctuation">(</span>con<span class="token punctuation">,</span> ps<span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//返回实体类信息</span>        <span class="token keyword">return</span> stu<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="编写界面类-views"><a href="#编写界面类-views" class="headerlink" title="编写界面类 views"></a>编写界面类 views</h1><p>主要利用Java swing进行图形化界面代码编写，如果对Swing没有了解，可能比较难看懂部分代码，因此需要自行学习或者寻找其他方法。</p><p>部分同学使用eclipse的Windowsbuilder插件实现拖拽式建立界面，奈何本人实在没用过，所以本次作业未使用该插件，据我了解该插件只在eclipse中可以使用，本项目使用IDEA开发工具，若想使用同样拖拽式建界面，可以安装JFormDesigner，付费插件，没用过，自行破解。</p><img src="http://image.kmoon.fun//images/202212150928055.png" alt="image-20221215092817013" style="zoom:67%;"><h2 id="登录界面Login类"><a href="#登录界面Login类" class="headerlink" title="登录界面Login类"></a>登录界面Login类</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Login</span> <span class="token punctuation">{</span>    <span class="token class-name">JFrame</span> jf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JFrame</span><span class="token punctuation">(</span><span class="token string">"登录"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        jf<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Dimension</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JPanel</span> jp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">paintComponent</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    <span class="token class-name">Image</span> bg <span class="token operator">=</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"src/com/hushan/views/images/loginback.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>bg<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setResizable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setContentPane</span><span class="token punctuation">(</span>jp<span class="token punctuation">)</span><span class="token punctuation">;</span>        jp<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridBagLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JLabel</span> jl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"欢迎使用学生成绩管理系统"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JLabel</span> username <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"用户名:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JLabel</span> password <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"密码:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ImageIcon</span> icon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span><span class="token string">"src/com/hushan/views/images/login.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JButton</span> jb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span>icon<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JPasswordField</span> jPasswordField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPasswordField</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JTextField</span> jTextField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTextField</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jp<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jb<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">230</span><span class="token punctuation">,</span> <span class="token number">270</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jl<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        username<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        password<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPasswordField<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">230</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jTextField<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">230</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jb<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">;</span>        jl<span class="token punctuation">.</span><span class="token function">setForeground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">DARK_GRAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jl<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">"楷体"</span><span class="token punctuation">,</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token constant">BOLD</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jTextField<span class="token punctuation">.</span><span class="token function">setForeground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">DARK_GRAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jTextField<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">"微软雅黑"</span><span class="token punctuation">,</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token constant">BOLD</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jTextField<span class="token punctuation">)</span><span class="token punctuation">;</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jl<span class="token punctuation">)</span><span class="token punctuation">;</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jPasswordField<span class="token punctuation">)</span><span class="token punctuation">;</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jb<span class="token punctuation">)</span><span class="token punctuation">;</span>        jb<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cs <span class="token operator">=</span> jPasswordField<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> psw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> nameW <span class="token operator">=</span> jTextField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>psw <span class="token operator">+</span> nameW<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录中"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>nameW<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"sa"</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> psw<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">"登入成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                jf<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//选择表的界面</span>                <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">"登入失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span><span class="token constant">EXIT_ON_CLOSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token comment">// TODO Auto-generated method stub</span>      <span class="token keyword">new</span> <span class="token class-name">Login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://image.kmoon.fun//images/202212150930363.png" alt="image-20221215093024309"></p><h2 id="菜单界面Menu类"><a href="#菜单界面Menu类" class="headerlink" title="菜单界面Menu类"></a>菜单界面Menu类</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Menu</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">final</span> <span class="token class-name">JFrame</span> jf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JFrame</span><span class="token punctuation">(</span><span class="token string">"菜单"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Dimension</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JPanel</span> jp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">paintComponent</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    <span class="token class-name">Image</span> bg <span class="token operator">=</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"src/com/hushan/views/images/loginback.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>bg<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setResizable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setContentPane</span><span class="token punctuation">(</span>jp<span class="token punctuation">)</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenuBar</span> menuBar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenu</span> fileMenu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenu</span><span class="token punctuation">(</span><span class="token string">"表格"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenu</span> editMenu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenu</span><span class="token punctuation">(</span><span class="token string">"统计"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenuItem</span> exitMenu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"退出"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        menuBar<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fileMenu<span class="token punctuation">)</span><span class="token punctuation">;</span>        menuBar<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>editMenu<span class="token punctuation">)</span><span class="token punctuation">;</span>        menuBar<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>exitMenu<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenuItem</span> <span class="token class-name">StuMenuItem</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"学生信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenuItem</span> <span class="token class-name">DepMenuItem</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"系信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenuItem</span> <span class="token class-name">CouMenuItem</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"课程信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenuItem</span> <span class="token class-name">GraMenuItem</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"成绩信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenuItem</span> <span class="token class-name">RelMenuItem</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"关系信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 子菜单添加到一级菜单</span>        fileMenu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">StuMenuItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileMenu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">DepMenuItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileMenu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">CouMenuItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileMenu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">GraMenuItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileMenu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">RelMenuItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenuItem</span> <span class="token class-name">PeoMenuItem</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"人数统计"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenuItem</span> <span class="token class-name">GratjMenuItem</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"成绩统计"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JMenuItem</span> <span class="token class-name">AvgMenuItem</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"平均成绩"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 子菜单添加到一级菜单</span>        editMenu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">PeoMenuItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        editMenu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">GratjMenuItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        editMenu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">AvgMenuItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">StuMenuItem</span><span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">new</span> <span class="token class-name">Index_Stu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">DepMenuItem</span><span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">new</span> <span class="token class-name">Index_Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CouMenuItem</span><span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">new</span> <span class="token class-name">Index_Cou</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">GraMenuItem</span><span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">new</span> <span class="token class-name">Index_Gra</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">RelMenuItem</span><span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">new</span> <span class="token class-name">Index_Rel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PeoMenuItem</span><span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">Sumstudent</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">GratjMenuItem</span><span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">Listgrade</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">AvgMenuItem</span><span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">Avggrade</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        exitMenu<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                jf<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*         * 最后 把菜单栏设置到窗口         */</span>        jf<span class="token punctuation">.</span><span class="token function">setJMenuBar</span><span class="token punctuation">(</span>menuBar<span class="token punctuation">)</span><span class="token punctuation">;</span>        jf<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// TODO Auto-generated method stub</span>        <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://image.kmoon.fun//images/202212150950426.png" alt="image-20221215095018366"></p><h2 id="添加信息类Add"><a href="#添加信息类Add" class="headerlink" title="添加信息类Add"></a>添加信息类Add</h2><p>Add类只写一个类的原因是，我通过<strong>函数重载</strong>的方法，传入不同的参数，调用不同的方法进行对不同的表进行添加信息。</p><p>以下仅以添加学生信息进行说明：</p><p><img src="http://image.kmoon.fun//images/202212150934775.png" alt="image-20221215093432727"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Add</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">Add</span><span class="token punctuation">(</span><span class="token class-name">Index_Stu</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 创建窗体-标题</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"添加"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建窗体-大小</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建窗体-居中</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建窗体-关闭</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span><span class="token constant">EXIT_ON_CLOSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建画布</span>        <span class="token class-name">JPanel</span> jp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 网袋布局</span>        <span class="token class-name">GridBagLayout</span> gbl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridBagLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束对象</span>        <span class="token class-name">GridBagConstraints</span> gbc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridBagConstraints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 设置网袋约束</span>        jp<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span>gbl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建文本标签-学号</span>        <span class="token class-name">JLabel</span> jl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"学号："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jl<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建文本框</span>        <span class="token class-name">JTextField</span> jts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTextField</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jts<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jts<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建文本标签-姓名</span>        <span class="token class-name">JLabel</span> jl1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"姓名："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jl1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jl1<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建文本框</span>        <span class="token class-name">JTextField</span> jtf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTextField</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jtf<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jtf<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建文本标签-性别</span>        <span class="token class-name">JLabel</span> jl2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"性别："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jl2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jl2<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 单选按钮-男</span>        <span class="token class-name">JRadioButton</span> jr1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JRadioButton</span><span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jr1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jr1<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 单选按钮-女</span>        <span class="token class-name">JRadioButton</span> jr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JRadioButton</span><span class="token punctuation">(</span><span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jr2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jr2<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 单选键设唯一</span>        <span class="token class-name">ButtonGroup</span> but <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ButtonGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        but<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jr2<span class="token punctuation">)</span><span class="token punctuation">;</span>        but<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jr1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建按钮-确认</span>        <span class="token class-name">JButton</span> jb1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"确认"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jb1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jb1<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建按钮-取消</span>        <span class="token class-name">JButton</span> jb2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"取消"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jb2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jb2<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 给确认按钮内部匿名事件</span>        jb1<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token comment">// TODO Auto-generated method stub</span>            <span class="token class-name">Integer</span> sno <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>jts<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取文本框的值</span>            <span class="token class-name">String</span> sname <span class="token operator">=</span> jtf<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取单选键的值</span>            <span class="token class-name">String</span> ssex <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>jr1<span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ssex <span class="token operator">=</span> <span class="token string">"男"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>jr2<span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ssex <span class="token operator">=</span> <span class="token string">"女"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">// 实例化对象赋值</span>            <span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>sno<span class="token punctuation">,</span> sname<span class="token punctuation">,</span> ssex<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 实例化dao类，获取影响行数</span>            <span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StudentDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 判断影响行数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i1 <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"添加成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 调用showinfo方法</span>                i<span class="token punctuation">.</span><span class="token function">showinfo</span><span class="token punctuation">(</span><span class="token string">"sname"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 关闭本窗体</span>                <span class="token class-name">Add</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"添加失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 给取消按钮内部匿名事件</span>        jb2<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token comment">// TODO Auto-generated method stub</span>            <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"退出添加"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 关闭本窗体</span>            <span class="token class-name">Add</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 显示</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://image.kmoon.fun//images/202212150951448.png" alt="image-20221215095118395"></p><h2 id="更新信息类Update"><a href="#更新信息类Update" class="headerlink" title="更新信息类Update"></a>更新信息类Update</h2><p>同样利用函数重载的方法，以下仅以修改学生信息函数作说明：</p><p><img src="http://image.kmoon.fun//images/202212150935584.png" alt="image-20221215093556520"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Update</span><span class="token punctuation">(</span><span class="token class-name">Index_Stu</span> i<span class="token punctuation">,</span> <span class="token class-name">Student</span> stu<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 创建窗体-标题</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"修改"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建窗体-大小</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建窗体-居中</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建窗体-关闭</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span><span class="token constant">EXIT_ON_CLOSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建画布</span>        <span class="token class-name">JPanel</span> jp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 网袋布局</span>        <span class="token class-name">GridBagLayout</span> gbl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridBagLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束对象</span>        <span class="token class-name">GridBagConstraints</span> gbc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GridBagConstraints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 设置网袋约束</span>        jp<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span>gbl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建文本标签-学号</span>        <span class="token class-name">JLabel</span> jl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"学号："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jl<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建文本框</span>        <span class="token class-name">JTextField</span> jts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTextField</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jts<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jts<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建文本标签-姓名</span>        <span class="token class-name">JLabel</span> jl1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"姓名："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jl1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jl1<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建文本框</span>        <span class="token class-name">JTextField</span> jtf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTextField</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jtf<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jtf<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建文本标签-性别</span>        <span class="token class-name">JLabel</span> jl2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"性别："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jl2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jl2<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 单选按钮-男</span>        <span class="token class-name">JRadioButton</span> jr1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JRadioButton</span><span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jr1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jr1<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 单选按钮-女</span>        <span class="token class-name">JRadioButton</span> jr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JRadioButton</span><span class="token punctuation">(</span><span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jr2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jr2<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 单选键设唯一</span>        <span class="token class-name">ButtonGroup</span> but <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ButtonGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        but<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jr2<span class="token punctuation">)</span><span class="token punctuation">;</span>        but<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jr1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建按钮-确认</span>        <span class="token class-name">JButton</span> jb1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"确认"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jb1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jb1<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建按钮-取消</span>        <span class="token class-name">JButton</span> jb2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"取消"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到画布</span>        jp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jb2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 约束</span>        gbc<span class="token punctuation">.</span>gridx <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        gbc<span class="token punctuation">.</span>gridy <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        gbl<span class="token punctuation">.</span><span class="token function">setConstraints</span><span class="token punctuation">(</span>jb2<span class="token punctuation">,</span> gbc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//给文本框赋值</span>        jts<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//给单选键赋值</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getSsex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            jr1<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getSsex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            jr2<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">// 给确认按钮内部匿名事件</span>        jb1<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token comment">// TODO Auto-generated method stub</span>            <span class="token class-name">Integer</span> sno<span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>jts<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取文本框的值</span>            <span class="token class-name">String</span> sname <span class="token operator">=</span> jtf<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取单选键的值</span>            <span class="token class-name">String</span> ssex <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>jr1<span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ssex <span class="token operator">=</span> <span class="token string">"男"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>jr2<span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ssex <span class="token operator">=</span> <span class="token string">"女"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">// 实例化对象赋值</span>            <span class="token class-name">Student</span> stu1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>sno<span class="token punctuation">,</span>sname<span class="token punctuation">,</span> ssex<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 实例化dao类，获取影响行数</span>            <span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StudentDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>sno<span class="token punctuation">,</span> stu1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 判断影响行数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i1 <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"修改成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 调用showinfo方法</span>                i<span class="token punctuation">.</span><span class="token function">showinfo</span><span class="token punctuation">(</span><span class="token string">"sname"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 关闭本窗体</span>                <span class="token class-name">Update</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"修改失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 给取消按钮内部匿名事件</span>        jb2<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// TODO Auto-generated method stub</span>                <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"退出修改"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 关闭本窗体</span>                <span class="token class-name">Update</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 显示</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://image.kmoon.fun//images/202212150951114.png" alt="image-20221215095146051"></p><h2 id="查询总界面类Index-Stu"><a href="#查询总界面类Index-Stu" class="headerlink" title="查询总界面类Index_Stu"></a>查询总界面类Index_Stu</h2><p>仅以查询学生信息作说明</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Index_Stu</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token comment">// 创建上面的画布</span>    <span class="token class-name">JPanel</span> jp1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建表格</span>    <span class="token class-name">JTable</span> jta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建表模式</span>    <span class="token class-name">DefaultTableModel</span> def <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultTableModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建滚动面板</span>    <span class="token class-name">JScrollPane</span> jsc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JScrollPane</span><span class="token punctuation">(</span>jta<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建下面的画布</span>    <span class="token class-name">JPanel</span> jp2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Index_Stu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 创建窗体-标题</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"首页"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建窗体-大小</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建窗体-居中</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建下拉框</span>        <span class="token class-name">JComboBox</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> jco <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JComboBox</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加元素</span>        jco<span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">"名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jco<span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">"性别"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jco<span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">"学号"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建文本框</span>        <span class="token class-name">JTextField</span> jtf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTextField</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建按钮-查询</span>        <span class="token class-name">JButton</span> jb1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"查询"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加的上面的画布</span>        jp1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jco<span class="token punctuation">)</span><span class="token punctuation">;</span>        jp1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jtf<span class="token punctuation">)</span><span class="token punctuation">;</span>        jp1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jb1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 设置表模式</span>        jta<span class="token punctuation">.</span><span class="token function">setModel</span><span class="token punctuation">(</span>def<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 给表模式添加元素</span>        def<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token string">"学号"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        def<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token string">"姓名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        def<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token string">"性别"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 调用刷新方法</span>        <span class="token function">showinfo</span><span class="token punctuation">(</span><span class="token string">"sname"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建按钮-添加，删除，修改，详情</span>        <span class="token class-name">JButton</span> jb2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"添加"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JButton</span> jb3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"删除"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JButton</span> jb4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"修改"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加到下面的画布</span>        jp2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jb2<span class="token punctuation">)</span><span class="token punctuation">;</span>        jp2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jb3<span class="token punctuation">)</span><span class="token punctuation">;</span>        jp2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jb4<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 给查询按钮内部匿名事件</span>        jb1<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// TODO Auto-generated method stub</span>                <span class="token comment">// 获取下拉框的值</span>                <span class="token class-name">String</span> col <span class="token operator">=</span> jco<span class="token punctuation">.</span><span class="token function">getSelectedItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>col<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"名称"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    col <span class="token operator">=</span> <span class="token string">"sname"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>col<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"性别"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    col <span class="token operator">=</span> <span class="token string">"ssex"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>col<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"学号"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    col <span class="token operator">=</span> <span class="token string">"sno"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment">// 获取文本框的值</span>                <span class="token class-name">String</span> str <span class="token operator">=</span> jtf<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 调用刷新方法</span>                <span class="token function">showinfo</span><span class="token punctuation">(</span>col<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 给添加按钮内部匿名事件</span>        jb2<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// TODO Auto-generated method stub</span>                <span class="token comment">//打开添加窗体</span>                <span class="token keyword">new</span> <span class="token class-name">Add</span><span class="token punctuation">(</span><span class="token class-name">Index_Stu</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 给删除按钮内部匿名事件</span>        jb3<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// TODO Auto-generated method stub</span>                <span class="token comment">// 获取所选择行数</span>                <span class="token keyword">int</span> row <span class="token operator">=</span> jta<span class="token punctuation">.</span><span class="token function">getSelectedRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 判断</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">// 获取选择行数的第一个字段值</span>                    <span class="token class-name">String</span> id <span class="token operator">=</span> def<span class="token punctuation">.</span><span class="token function">getValueAt</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token comment">// 强转</span>                    <span class="token keyword">int</span> sid <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showConfirmDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"是否删除？"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment">// 实例化dao类</span>                        <span class="token class-name">StudentDao</span> sdao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StudentDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment">// 调用dao类删除单个方法,获取影响行数</span>                        <span class="token keyword">int</span> i <span class="token operator">=</span> sdao<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>sid<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment">// 判断</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"删除成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">// 调用showinfo的方法</span>                            <span class="token function">showinfo</span><span class="token punctuation">(</span><span class="token string">"sname"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                            <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"删除失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"取消删除"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"请选择要删除的学生"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 给修改按钮内部匿名事件</span>        jb4<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// TODO Auto-generated method stub</span>                <span class="token keyword">int</span> row <span class="token operator">=</span> jta<span class="token punctuation">.</span><span class="token function">getSelectedRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 判断</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">// 获取选择行数的第一个字段值</span>                    <span class="token class-name">String</span> id <span class="token operator">=</span> def<span class="token punctuation">.</span><span class="token function">getValueAt</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token comment">// 强转</span>                    <span class="token keyword">int</span> sid <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 实例化dao类</span>                    <span class="token class-name">StudentDao</span> sdao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StudentDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 调用dao类查询单个方法</span>                    <span class="token class-name">Student</span> stu <span class="token operator">=</span> sdao<span class="token punctuation">.</span><span class="token function">chaxun</span><span class="token punctuation">(</span>sid<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 打开修改窗体</span>                    <span class="token keyword">new</span> <span class="token class-name">Update</span><span class="token punctuation">(</span><span class="token class-name">Index_Stu</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> stu<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"请选择要修改的学生"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 显示</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"North"</span><span class="token punctuation">,</span> jp1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Center"</span><span class="token punctuation">,</span> jsc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"South"</span><span class="token punctuation">,</span> jp2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showinfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> col<span class="token punctuation">,</span> <span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 获取所有行</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> jta<span class="token punctuation">.</span><span class="token function">getRowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 遍历</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// 删除所有行</span>            def<span class="token punctuation">.</span><span class="token function">removeRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">// 实例化dao</span>        <span class="token class-name">StudentDao</span> sdao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StudentDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 调拥dao类查询赋值给集合</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> sdao<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>col<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 遍历</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Student</span> s <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// 实例化vc</span>            <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> v <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 添加数据，绑定数据</span>            v<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            v<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getSname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            v<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getSsex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 给表绑定数据</span>            def<span class="token punctuation">.</span><span class="token function">addRow</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">Index_Stu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://image.kmoon.fun//images/202212150950390.png" alt="image-20221215095045332"></p><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>本项目结构代码冗余度很大，我自己也很清楚，如果有好的代码优化思路或者其他核心问题，很乐意与您探讨。</p><p>如果单纯想完成作业怕低分，那我能给的全部写出来了，能帮上您最好，帮不上我也爱莫能助，一点不懂的话需要自己下功夫想办法，还有不要把有些东西搞成生意，没必要，就这样: )。</p><p>了解了整个项目结构，具备基础的知识，对哪一行代码不理解，评论或者发邮件给我。</p><p>–over–</p><blockquote><p>2022.12.15 重庆 Kmoon.</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;基于Java、Swing、SQL server的图形化界面学生成绩管理系统，WHUT数据库应用系统开发大作业项目，未经允许禁止cv，有任何关于具体代码的问题下方评论区联系我，没有Java代码基础自行学习，不提供源代码，仅提供部分核心代码和实现思路。&lt;/p&gt;</summary>
    
    
    
    <category term="实验报告" scheme="https://www.kmoon.fun/categories/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Swing" scheme="https://www.kmoon.fun/tags/Swing/"/>
    
    <category term="SQL" scheme="https://www.kmoon.fun/tags/SQL/"/>
    
    <category term="Java" scheme="https://www.kmoon.fun/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>WUT-数据库应用系统开发实验报告</title>
    <link href="https://www.kmoon.fun/2022/dbcreatereport/"/>
    <id>https://www.kmoon.fun/2022/dbcreatereport/</id>
    <published>2022-11-14T12:20:08.000Z</published>
    <updated>2022-12-15T02:20:58.898Z</updated>
    
    <content type="html"><![CDATA[<p><strong>WHUT 数据库应用系统开发实验报告</strong></p><blockquote><p><strong>有点水 不好意思 凑合看 闲了一定完善</strong></p><p><strong>代码仅提供思路参考 严禁抄袭。</strong></p><p>有问题下方评论👇</p></blockquote><span id="more"></span><h1 id="学生信息管理软件开发（C）"><a href="#学生信息管理软件开发（C）" class="headerlink" title="学生信息管理软件开发（C）"></a><strong>学生信息管理软件开发（C）</strong></h1><h3 id="1-建立学生数据库、学生信息表"><a href="#1-建立学生数据库、学生信息表" class="headerlink" title="1.建立学生数据库、学生信息表"></a>1.建立学生数据库、学生信息表</h3><img src="http://image.kmoon.fun//images/202211151902348.png" alt="image-20221115190253261" style="zoom:80%;"><h3 id="2-ODBC数据源配置"><a href="#2-ODBC数据源配置" class="headerlink" title="2.ODBC数据源配置"></a>2.ODBC数据源配置</h3><p>1）打开控制面板管理工具中的ODBC数据源<br><img src="http://image.kmoon.fun//images/202211142036059.jpg" alt="img"></p><p>2）配置数据源名称、描述和服务器名称<br><img src="http://image.kmoon.fun//images/202211142036056.jpg" alt="img"></p><p>3）设置用户登录账号和密码、默认数据库等相关信息</p><p><img src="http://image.kmoon.fun//images/202211142036062.jpg" alt="img"><br><img src="http://image.kmoon.fun//images/202211142036072.jpg" alt="img"></p><p>4）测试连接，连接成功<br><img src="http://image.kmoon.fun//images/202211142036074.jpg" alt="img"></p><h3 id="3-编程实现"><a href="#3-编程实现" class="headerlink" title="3.编程实现"></a>3.编程实现</h3><ul><li><p>包含必要库文件</p><p><img src="http://image.kmoon.fun//images/202211151837882.png" alt="image-20221115183706772"></p></li><li><p>连接数据库</p><p><img src="http://image.kmoon.fun//images/202211151846537.png" alt="image-20221115184636483"></p></li><li><p>查询</p><p><img src="http://image.kmoon.fun//images/202211151852091.png" alt="image-20221115185257954"></p></li><li><p>插入</p><p><img src="http://image.kmoon.fun//images/202211151853257.png" alt="image-20221115185327148"></p></li><li><p>删除</p><p><img src="http://image.kmoon.fun//images/202211151855184.png" alt="image-20221115185548064"></p></li><li><p>修改</p><p><img src="http://image.kmoon.fun//images/202211151856272.png" alt="image-20221115185651100"></p></li><li><p>显示全部学生信息</p><p><img src="http://image.kmoon.fun//images/202211151857273.png" alt="image-20221115185735184"></p></li></ul><h1 id="学生信息管理软件开发（JAVA）"><a href="#学生信息管理软件开发（JAVA）" class="headerlink" title="学生信息管理软件开发（JAVA）"></a><strong>学生信息管理软件开发（JAVA）</strong></h1><blockquote><p>准备工作：</p><p>1.Eclipse下载安装</p><p>2.jdk下载安装</p><p>3.java环境变量配置</p><p>4.jdbc驱动下载</p></blockquote><h2 id="1-建库建表"><a href="#1-建库建表" class="headerlink" title="1.建库建表"></a>1.建库建表</h2><h2 id="2-eclipse配置"><a href="#2-eclipse配置" class="headerlink" title="2.eclipse配置"></a>2.eclipse配置</h2><img src="http://image.kmoon.fun//images/202211142047976.png" alt="image-20221114204744928" style="zoom:67%;"><h2 id="3-编程实现-1"><a href="#3-编程实现-1" class="headerlink" title="3.编程实现"></a>3.编程实现</h2><ol><li>导入必要库</li></ol><p><img src="http://image.kmoon.fun//images/202211151858117.png" alt="image-20221115185818075"></p><ol start="2"><li>连接数据库</li></ol><p><img src="http://image.kmoon.fun//images/202211151858698.png" alt="image-20221115185840648"></p><ol start="3"><li>查询</li></ol><p><img src="http://image.kmoon.fun//images/202211151859285.png" alt="image-20221115185925170"></p><ol start="4"><li><p>修改</p><p><img src="http://image.kmoon.fun//images/202211151900680.png" alt="image-20221115190014556"></p></li><li><p>删除</p></li></ol><p><img src="http://image.kmoon.fun//images/202211151900465.png" alt="image-20221115190050350"></p><ol start="6"><li>添加</li></ol><p><img src="http://image.kmoon.fun//images/202211151901912.png" alt="image-20221115190130787"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;WHUT 数据库应用系统开发实验报告&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;有点水 不好意思 凑合看 闲了一定完善&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码仅提供思路参考 严禁抄袭。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有问题下方评论👇&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="实验报告" scheme="https://www.kmoon.fun/categories/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Whut" scheme="https://www.kmoon.fun/tags/Whut/"/>
    
  </entry>
  
  <entry>
    <title>WUT-电子线路EDA实验报告</title>
    <link href="https://www.kmoon.fun/2022/edareport/"/>
    <id>https://www.kmoon.fun/2022/edareport/</id>
    <published>2022-11-14T12:17:05.000Z</published>
    <updated>2022-11-15T11:21:02.864Z</updated>
    
    <content type="html"><![CDATA[<p><strong>WHUT电子线路EDA选修课 实验报告</strong></p><blockquote><p>大作业源代码暂时没办法 害怕重复:)</p></blockquote><p><strong>实验报告仅提供思路参考 严禁抄袭。</strong></p><span id="more"></span><h1 id="实验一-五人表决器"><a href="#实验一-五人表决器" class="headerlink" title="实验一 五人表决器"></a>实验一 五人表决器</h1><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>实验要求设计一个五人表决器，只要在规定的时间内，同意人数大于或等于3，则表决通过。</p><p>分析题意，可知此次仿真需要5个输入端口，1个输出端口，分别设置A,B,C,D,E为输入端口，F为输出端口。</p><p>当表决器的5个输入变量中有3个以上（含3个）为“1”时，表决器输出“1”，否则输出“0”。</p><p>因此可根据真值表得到输出的逻辑表达式为F=ABC+ABD+ABE+ACD+ACE+ADE+BCD+BCE+BDE+CDE。</p><h2 id="顶层原理图"><a href="#顶层原理图" class="headerlink" title="顶层原理图"></a>顶层原理图</h2><img src="http://image.kmoon.fun//images/202211142021452.png" alt="1-1" style="zoom: 50%;"><h2 id="程序代码清单"><a href="#程序代码清单" class="headerlink" title="程序代码清单"></a>程序代码清单</h2><h4 id="1-芯片代码"><a href="#1-芯片代码" class="headerlink" title="1.芯片代码"></a>1.芯片代码</h4><p><img src="http://image.kmoon.fun//images/202211151903888.png" alt="image-20221115190349839"></p><h4 id="2-仿真代码"><a href="#2-仿真代码" class="headerlink" title="2.仿真代码"></a>2.仿真代码</h4><p><img src="http://image.kmoon.fun//images/202211151904950.png" alt="image-20221115190405894"></p><h2 id="仿真波形"><a href="#仿真波形" class="headerlink" title="仿真波形"></a>仿真波形</h2><p>波形图</p><img src="http://image.kmoon.fun//images/202211142021056.png" alt="1-2" style="zoom: 50%;"><p>A,B,C,D,E分别表示五人投票结果的逻辑变量，高电平代表同意，低电平代表不同意。变量F表示表决结果，高电平代表通过，低电平代表不通过。本次实验仿真代码随机选取5次情况（ABCDE），分别为00001、00101、01010、01100、11000、11100，则投票结果（F）依次为0、0、0、0、0、1，根据波形图可以验证设计正确。</p><h2 id="实验总结"><a href="#实验总结" class="headerlink" title="实验总结"></a>实验总结</h2><p>1.本次实验利用ABEL语言，通过绘制芯片BJQ原理图，编写芯片代码和仿真代码，实现并验证了组合逻辑电路五人表决器。<br>2.基本了解ISPLEVER软件的使用方法，掌握了用此软件完成电子设计的基本流程，并能够用ABEL语言完成对芯片模块的程序设计。<br>3.作为电子线路EDA的第一个实验，在软件使用和代码编写上存在不熟练等问题，导致编译不通过，后续不断查找资料成功解决了问题。</p><h1 id="实验二-四位二进制乘法器"><a href="#实验二-四位二进制乘法器" class="headerlink" title="实验二 四位二进制乘法器"></a>实验二 四位二进制乘法器</h1><h2 id="设计思路-1"><a href="#设计思路-1" class="headerlink" title="设计思路"></a>设计思路</h2><p>设计一个乘法器，实现两个4位二进制数的乘法。两个二进制数分别是被乘数A3A2A1A0和乘数B3B2B1B0。</p><p>将乘法运算分解为加法运算和移位运算，将每次相加的结果用部分积Ti表示，由于被乘数和乘数都是二进制，利用移位相加方法，所以利用乘数从第一位到最后一位每一位依次与被乘数相乘，从第二位开始每一位都要依次左移一位，形成一个阵列的式。</p><h2 id="顶层原理图-1"><a href="#顶层原理图-1" class="headerlink" title="顶层原理图"></a>顶层原理图</h2><img src="http://image.kmoon.fun//images/202211142021095.png" style="zoom: 45%;"><h2 id="程序代码清单-1"><a href="#程序代码清单-1" class="headerlink" title="程序代码清单"></a>程序代码清单</h2><h4 id="1-芯片代码-1"><a href="#1-芯片代码-1" class="headerlink" title="1.芯片代码"></a>1.芯片代码</h4><p><img src="http://image.kmoon.fun//images/202211151904507.png" alt="image-20221115190422445"></p><h4 id="2-仿真代码-1"><a href="#2-仿真代码-1" class="headerlink" title="2.仿真代码"></a>2.仿真代码</h4><p><img src="http://image.kmoon.fun//images/202211151904913.png" alt="image-20221115190432856"></p><h2 id="仿真波形-1"><a href="#仿真波形-1" class="headerlink" title="仿真波形"></a>仿真波形</h2><img src="http://image.kmoon.fun//images/202211142021101.png" style="zoom: 48%;"><p>A3A2A1A0表示四位二进制逻辑变量A，B3B2B1B0表示四位二进制逻辑变量B；</p><p>Q7Q6Q5Q4Q3Q2Q1Q0表示乘法结果逻辑变量Q，高电平为1，低电平为0。</p><p>测试数据如下图所示，经验算结果正确，四位二进制乘法器设计仿真成功。</p><table><thead><tr><th align="center">序号</th><th align="center">A</th><th align="center">B</th><th align="center">Q</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">2</td><td align="center">9</td><td align="center">18</td></tr><tr><td align="center">2</td><td align="center">10</td><td align="center">5</td><td align="center">50</td></tr><tr><td align="center">3</td><td align="center">6</td><td align="center">3</td><td align="center">18</td></tr><tr><td align="center">4</td><td align="center">7</td><td align="center">3</td><td align="center">21</td></tr><tr><td align="center">5</td><td align="center">3</td><td align="center">8</td><td align="center">24</td></tr></tbody></table><h2 id="实验总结-1"><a href="#实验总结-1" class="headerlink" title="实验总结"></a>实验总结</h2><ol><li>本次实验利用ABEL-HDL语言实现了4位二进制乘法器的设计与仿真，进一步熟悉了ISPLEVER的使用，掌握了利用ispLEVER设计组合型逻辑电路的方法，学会了操作仿真波形使其更加直观显示结果的方法。</li><li>MODULE M依照竖式的计算过程实现，四位乘法器主要运用错位相加运算来实现乘法运算。</li><li>通过本次实验，掌握了二进制数乘法的原理和运算方法，以及移位相加法的使用。</li></ol><h1 id="实验三-十字路口交通灯控制器"><a href="#实验三-十字路口交通灯控制器" class="headerlink" title="实验三 十字路口交通灯控制器"></a>实验三 十字路口交通灯控制器</h1><h2 id="设计思路-2"><a href="#设计思路-2" class="headerlink" title="设计思路"></a>设计思路</h2><p>设计与仿真十字路口交通灯控制器，十字路口模拟图如下：</p><p><img src="http://image.kmoon.fun//images/202211142022017.png"></p><center>图1时间状态分布：<table><thead><tr><th align="center">状态</th><th align="center">主干道</th><th align="center">支干道</th><th align="center">持续时间</th><th align="center">下一状态</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">绿灯</td><td align="center">红灯</td><td align="center">40s</td><td align="center">2</td></tr><tr><td align="center">2</td><td align="center">黄灯</td><td align="center">红灯</td><td align="center">5s</td><td align="center">3</td></tr><tr><td align="center">3</td><td align="center">红灯</td><td align="center">绿灯</td><td align="center">20s</td><td align="center">4</td></tr><tr><td align="center">4</td><td align="center">红灯</td><td align="center">黄灯</td><td align="center">5s</td><td align="center">1</td></tr></tbody></table><center>表1<p>交通信号灯剩余时间的倒计时显示，转换为8421BCD码驱动数码管显示；程序启动时，主支干道都亮红灯，然后从状态1开始正常运行；交通灯从绿变红时，有5秒黄灯亮的间隔时间，从红变绿是直接进行的，没有间隔时间。</p><h2 id="实验原理图"><a href="#实验原理图" class="headerlink" title="实验原理图"></a>实验原理图</h2><img src="http://image.kmoon.fun//images/202211142022015.png" alt="image-20221015112323123" style="zoom: 67%;">  <center>图2## 芯片代码<p><img src="http://image.kmoon.fun//images/202211151904799.png" alt="image-20221115190456609"></p><h2 id="仿真波形-2"><a href="#仿真波形-2" class="headerlink" title="仿真波形"></a>仿真波形</h2><p>首先添加输入输出端口，并设置各端口变量类型，其中主支干道交通灯倒计时设置为十六进制显示。</p><p><img src="http://image.kmoon.fun//images/202211142022020.png"></p><p>运行仿真程序，结果如图4，5所示：</p><p><img src="http://image.kmoon.fun//images/202211142022026.png" alt="image-20221016115757150"></p><img src="http://image.kmoon.fun//images/202211142022033.png" alt="3-2"><p>其中clk为外部时钟脉冲。cnt为计数变量，用以标志状态周期，从69至0为一个现实周期（图5）</p><p>ctr为控制端，如图4所示，作用时（即ctr为高电平使能）主干道和次干道都亮红灯，倒计时显示00，高电平有效。mainroad_lights和branchroad_lights都</p><p>是宽度为3的总线，由高到低分别表示红灯、黄灯和绿灯，高电平有效。mainroad_time_BCD和branchroad_time_BCD都是宽度为8的总线，高4位与低4位分别为</p><p>倒计时的8421BCD码，仿真时用十六进制显示。</p><p>验证各状态波形，仿真结果符合实验设计要求。</p><h2 id="实验总结-2"><a href="#实验总结-2" class="headerlink" title="实验总结"></a>实验总结</h2><ol><li><p>通过本次实验初步掌握了VHDL语言的基本语法和编写流程。</p></li><li><p>本设计利用三个进程并行工作的思想，分别解决了时钟、交通灯状态控制和交通灯倒计时显示三个问题。</p></li><li><p>对整数取余运算，分别得到十位和个位的值。利用CONV_STD_LOGIC_VECTOR()将整数转换为长度为4的向量，生成8421BCD码。</p></li></ol><h1 id="武汉市地铁1号线汉西一路站自动售票系统的设计与仿真"><a href="#武汉市地铁1号线汉西一路站自动售票系统的设计与仿真" class="headerlink" title="武汉市地铁1号线汉西一路站自动售票系统的设计与仿真"></a>武汉市地铁1号线<code>汉西一路</code>站自动售票系统的设计与仿真</h1><h2 id="一、设计思路"><a href="#一、设计思路" class="headerlink" title="一、设计思路"></a>一、设计思路</h2><p>本设计用于模拟地铁售票机自动售票，完成地铁售票机的核心功能。当乘客按下开始购票按钮进行购票，此时只能选择一个出站口，根据选站的不同票价不同。共设有27站</p><p>(如图1-1所示)，票价参考表1-1乘客购票时可以一次购买几张票，本设计中最多可以支持4张。售票机投币口识别范围为1元、10元。投币时可以连续投币，当投入金额大</p><p>于所需时，出票并找零，结束本次交易，系统恢复初始状态等待下次购票。在购票过程中乘客可以在出票之前按取消按钮来取消操作，系统会自动退出之前投入的钱币，并系</p><p>统自动恢复到初始化状态等待再次使用。</p><img src="http://image.kmoon.fun//images/202211142023950.png" alt="image-20221016205848571" style="zoom: 67%;"><table><thead><tr><th align="center">站数/站</th><th align="center">票价/元</th></tr></thead><tbody><tr><td align="center">[1,5]</td><td align="center">2</td></tr><tr><td align="center">[6,10]</td><td align="center">3</td></tr><tr><td align="center">[11,15]</td><td align="center">4</td></tr><tr><td align="center">[16,20]</td><td align="center">5</td></tr></tbody></table><h2 id="二、设计方法"><a href="#二、设计方法" class="headerlink" title="二、设计方法"></a>二、设计方法</h2><p>经过分析本自动售票机，其主要实现以下功能：出站点的选择、购票数量的选取、投币的处理、出票和余额找零的处理以及输入出错时的取消返回和恢复初始状态的处理。</p><ul><li><p>整体功能：在购买车票时，乘客按“开始选择”按钮，然后选择出站口接着选择购票的数量（一次购票的票数限制在最多4张）；然后按“开始投币”按钮，开始投币；当投入钱币到达所需钱币时系统会自动打开出票口进行出票。如果需要找零此时系统会自动找零，在找零时全部以1元硬币形式给出。</p></li><li><p>取消购票：乘客进行购票操作在未出票前，乘客按取消按钮进行取消购票，此时系统会自动退回投入钱币并恢复系统等待下次操作，取消系统会回到原始等待购票状态。</p></li><li><p>票价计算：乘客购票只能选择一个出站口，根据其选择的出站口来计算所需要的票价。本设计全程共有27个站点，本设计起始站为<strong>汉西一路</strong>，乘客最多可以乘坐18站到</p><p>达<strong>滠口新城</strong>。总共27站使用5位二进制来表示，即1站五环大道用00001表示，27站滠口新城用11011表示，起始站汉西一路用01000表示。</p></li><li><p>投币设计：本设计中售票机投币口只可以识别1元、10元的人民币。采用4位二进制表示，1元使用0001表示，10元采用1010表示。</p></li></ul><h2 id="三、程序流程图"><a href="#三、程序流程图" class="headerlink" title="三、程序流程图"></a>三、程序流程图</h2><p>首先当对自动售票机无操作时要在初始化状态下，即为等待购票时售票机的状态，在初始化状态下按下“开始购票”后系统开始进入购票模式。</p><p>在此模式下用户可使用所有的购票功能。接着必须要选择出站口，再选择购票数。系统会根据选择的站点和购票数来判定所需要的投币金额，根据系统提示所需的投币金额进</p><p>行投币。</p><p>当投入的钱币达到所需的数目时,系统会自动从出票口出票，并将投入的钱币入库。当投入金额大于所需金额时，系统会自动出票并及时找零。</p><p>购票过程中若有选择错误，可选择取消。如：在选择目的地、选择购票数时出错，可选择取消来恢复到初始化状态；当在投入钱币但不到所需金额时如有特殊情况可选择取</p><p>消，系统会自动退回投入的钱币并恢复到初始化状态等待下一次购票。具体的购票流程图如图2-1。</p><img src="http://image.kmoon.fun//images/202211142023998.png" alt="image-20221109104230719" style="zoom: 50%;"><h2 id="四、核心代码"><a href="#四、核心代码" class="headerlink" title="四、核心代码"></a>四、核心代码</h2><p><code>after</code></p><h2 id="五、波形仿真"><a href="#五、波形仿真" class="headerlink" title="五、波形仿真"></a>五、波形仿真</h2><p><img src="http://image.kmoon.fun//images/202211142028323.png" alt="image-20221114202852257"></p><h2 id="六、心得体会"><a href="#六、心得体会" class="headerlink" title="六、心得体会"></a>六、心得体会</h2><h2 id="七、附录"><a href="#七、附录" class="headerlink" title="七、附录"></a>七、附录</h2><h3 id="1-原理图"><a href="#1-原理图" class="headerlink" title="1. 原理图"></a>1. 原理图</h3><img src="http://image.kmoon.fun//images/202211142024888.png" alt="image-20221109110225729" style="zoom:50%;"><h3 id="2-源代码"><a href="#2-源代码" class="headerlink" title="2. 源代码"></a>2. 源代码</h3><p><code>after</code></p></center></center></center>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;WHUT电子线路EDA选修课 实验报告&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大作业源代码暂时没办法 害怕重复:)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;实验报告仅提供思路参考 严禁抄袭。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="实验报告" scheme="https://www.kmoon.fun/categories/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Whut" scheme="https://www.kmoon.fun/tags/Whut/"/>
    
  </entry>
  
  <entry>
    <title>他山之石-GoogleHacking谷歌语法</title>
    <link href="https://www.kmoon.fun/2022/google/"/>
    <id>https://www.kmoon.fun/2022/google/</id>
    <published>2022-10-28T14:45:13.000Z</published>
    <updated>2022-10-30T06:07:56.351Z</updated>
    
    <content type="html"><![CDATA[<p>我们都知道渗透测试中信息收集的重要性，是第一步也是最重要的一步。有的人渗透测试使出浑身解数破门而不入，可对有的人来说却如同囊中取物，也许功力就是差在信息收集，那么现在就让我带领各位读者重新认识一下Google———你军火库中的“大咖” 。（前面基础部分希望大家不要错过，说不定有你不知道的秘密）</p><span id="more"></span><h2 id="0X1-你不得不知道的谷歌基础"><a href="#0X1-你不得不知道的谷歌基础" class="headerlink" title="0X1 你不得不知道的谷歌基础"></a>0X1 你不得不知道的谷歌基础</h2><h3 id="一、谷歌周边"><a href="#一、谷歌周边" class="headerlink" title="一、谷歌周边"></a>一、谷歌周边</h3><p><strong>1.谷歌图片</strong></p><p>谷歌图片是一个图片识别的非常强大的工具，一张你不知道来源的图片上传之后不仅能知道来源，还能自动寻找相似图片。</p><p>![此处输入图片的描述][1]</p><p>![此处输入图片的描述][2]</p><p><strong>2.谷歌地球</strong></p><p>坐看世界各地，笑看云卷云舒，渗透之前看看渗透的地方长啥样对吧…</p><p>![此处输入图片的描述][3]</p><p>![此处输入图片的描述][4]</p><p><strong>3.谷歌论坛</strong></p><p>信息收集的重要地点，谷歌背后的繁荣之地（多得是你不知道的事）</p><p>![此处输入图片的描述][5]</p><p><strong>4.谷歌日历</strong></p><p>记录你生活的点点滴滴，给hacker留下了巨大的财富</p><p>![此处输入图片的描述][6]</p><p>![此处输入图片的描述][7]</p><p><strong>5.谷歌地图</strong></p><p>找到你回家的路，跑路的重要工具…..</p><p>![此处输入图片的描述][8]</p><p><strong>6.谷歌高级搜索</strong></p><p>可以自定义你的搜索，相当的强大</p><p>![此处输入图片的描述][9]</p><p>7.谷歌自定义搜索引擎</p><p>![此处输入图片的描述][10]</p><p><strong>7.GHDB 谷歌黑客数据库</strong></p><p><a href="https://www.exploit-db.com/google-hacking-database/">https://www.exploit-db.com/google-hacking-database/</a></p><p><strong>这一部分我在下面一篇文章中会单独仔细的讲一下</strong></p><p>![此处输入图片的描述][11]</p><h3 id="二、搜索基础"><a href="#二、搜索基础" class="headerlink" title="二、搜索基础"></a>二、搜索基础</h3><p><strong>语法基础</strong></p><p>1.谷歌查询是<strong>不区分</strong>大小写的</p><p>（但是有一个最显著的例外就是or 当他被用作是布尔运算符的时候必须写成大写OR）</p><p>2.谷歌的通配符</p><p><code>*</code>在谷歌搜索的时候只能当做<strong>一个单词</strong>使用</p><p>3.谷歌保留忽略的权利</p><p>有些词在某些情况下搜索中会忽略，包括WHERE HOW </p><p>4.谷歌有32词的搜索限制</p><p>当然可以通过<code>*</code>代替某些单词突破这种限制</p><p>5.短语搜索是要带上双引号的，严格按照顺序对其搜索</p><p>6.对谷歌来说AND是多余的，谷歌会自动查询你输入的所有元素</p><p>7.谷歌会忽略特别常见的字符，但是在这些字符前加上+就能强制查询（+后面不能有空格）</p><p>8.NOT使用-代替（-前要有空格）</p><p>9.布尔查询 |/OR</p><p><strong>注意：</strong></p><p>加入括号分割这些令人困惑的运算规则将增强可读性</p><p><strong>其他</strong></p><p>1.URL 的第一部分 </p><p><a href="http://www.google.com/search%E8%BF%99%E4%B8%AA%E6%98%AFgoogle%E6%90%9C%E7%B4%A2%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BD%8D%E7%BD%AE">www.google.com/search这个是google搜索脚本的位置</a></p><p>2.当你把一个特殊字符包含进你的url的时候，浏览器会帮你使用等价的十六进制编码特殊的字符或者空格</p><p>3.<a href="http://www.google.comsearch/advanced_search">http://www.google.comsearch/advanced_search</a> 是谷歌的高级搜索页面</p><h2 id="0X2-不得不说的高级运算符"><a href="#0X2-不得不说的高级运算符" class="headerlink" title="0X2 不得不说的高级运算符"></a>0X2 不得不说的高级运算符</h2><p>如果在一个查询中没有使用高级运算符，谷歌就会在任何区域寻找你的搜索项，包括标题，文本，URL等</p><h3 id="一、总览"><a href="#一、总览" class="headerlink" title="一、总览"></a>一、总览</h3><pre><code>intitle，allintitleinurl,allinurlfiletypeallintextsitelinkinanchordatarangecacheinforelatedphonebookrphonebookbphonebookuthorgroupmsgidinsubjectstocksdefine</code></pre><p><strong>规则</strong></p><p>operator:search_term</p><p><strong>注意点</strong></p><p>1.在操作符、冒号、搜索项之间<strong>没有</strong>空格</p><p>2.布尔运算符和特殊字符不能用来冒号的作用</p><p>3.all运算符（以all开头的运算符)都是有些奇怪的,通常一个查询只能使用一次，而且不和和其他运算符一起使用</p><p>①allintitle 会告诉谷歌，它后面的每一个单词或者短语都要在标题中出现</p><p>②allintext 除了在标题、URL、链接以外的任何地方找到某个内容（它后面的每一个单词或者短语都要在内容中出现）</p><p>4.intitle:”index of”等价于 intitle:index.of</p><p>因为.休止符能够代替任何字符(这个技术也提供了一个无需键入空格和两边引号的短语)</p><p>5.intitle:”index of” private 返回标题中有index of 以及在任何地方有 private的页面（intitle只对后面的第一个搜索项有效）</p><h3 id="二、常见运算符解释"><a href="#二、常见运算符解释" class="headerlink" title="二、常见运算符解释"></a>二、常见运算符解释</h3><p><strong>site 把搜索精确到特定的网站</strong></p><p>site 允许你搜索仅仅位于一个特定服务器上的或者在一个特定域名里的页面</p><p><strong>注意：</strong></p><p>整个因特网是从右到左读取web服务器的名字，而人类习惯从左到右读取网站的名字</p><p><strong>filetype 搜索特定后缀的文件</strong> </p><p>搜索以一个特别的文件扩展名结尾的页面，谷歌会以网页快照的形式来将这种格式转换成html页面，但是你直接点击标题就会下载</p><p><strong>link 包含指定网页的链接的网页</strong></p><p>搜索包含指定网页的链接的网页，link后面跟的是完整的URL可以包含目录名、文件名、参数等，信息量越大查询结果越精确。</p><p><strong>注意：</strong></p><p>1.不要认为 Link能搜索链接中的文本，inanchor才执行的是这个操作，如果输入错误，那么并不会执行link查询而是把 link:短语当做一个整体直接默认查询</p><p>2.link运算符不能和其他运算符一起使用</p><p><strong>inanchor 寻找链接的锚点</strong></p><p>inanchor 用于寻找链接的锚点，或者在链接中显示的文本（就是显示在页面上的提供点击的文字）</p><p><strong>cache 显示页面的缓存版本</strong></p><p>直接跳转到页面的缓存版本</p><p><strong>numberange 搜索一个数字</strong></p><p>numberange 需要两个参数，一个低位数字，一个高位数字，中间用连字符分割</p><p>为了找到12345  numberange:12344-12346</p><p><strong>注意：</strong></p><p>1.这个运算符还有简化版， 12344..12346</p><p>2.可以和其他运算符一起使用</p><p><strong>daterange 搜索在特定日期范围内发布额的页面</strong></p><p>谷歌每次重新抓取一个网页，网页日期就会更新</p><p>两个日期都必须是自公元前 4713年1月1日起经过的天数，中间用连字符分割，（不如使用谷歌的高级搜索引擎实现）</p><p><strong>info 显示谷歌的总结信息</strong></p><p>显示一个网站的总结信息还提供了可能关于该网站的其他搜索链接</p><p><strong>注意：</strong></p><p>不能和其他运算符一起使用</p><p><strong>related 显示相关站点</strong></p><p>参数是一个URL </p><p><strong>注意：</strong></p><p>1.使用高级搜索引擎能实现相同的功能</p><p>2.不能和其他运算符一起使用</p><h4 id="define-显示一个术语的定义"><a href="#define-显示一个术语的定义" class="headerlink" title="define 显示一个术语的定义"></a>define 显示一个术语的定义</h4><p>此处词穷……</p><h2 id="0X3Google-Hacking-基础"><a href="#0X3Google-Hacking-基础" class="headerlink" title="0X3Google Hacking 基础"></a>0X3Google Hacking 基础</h2><h3 id="一、缓存"><a href="#一、缓存" class="headerlink" title="一、缓存"></a>一、缓存</h3><p>1.谷歌会把抓取到的绝大部分web数据保存一份拷贝（这种行为是可以预防的），但是点击缓存的连接不仅会访问google的服务器还会访问原始的服务器去加载非html文件</p><p>2.把缓存链接拷贝到剪切板，然后直接在后面加上参数 &amp;script=1 就会显示缓存页面的html文件，不去访问原始服务器</p><h3 id="二、目录列表"><a href="#二、目录列表" class="headerlink" title="二、目录列表"></a>二、目录列表</h3><p>目录列表能列出存在于一个web服务器上的文件和目录</p><p><strong>问题：</strong></p><p>1.无法阻止用户下载特定的文件或者访问特定的目录</p><p>2.会显示一些服务器的细节</p><p>3.不会分辨哪些是公共文件，哪些是后台文件</p><p>4.一般是偶然被显示，当顶层索引文件如 index.php消失时</p><p><strong>攻击：</strong></p><p><strong>1.查找目录列表</strong></p><p>实例：</p><p>intitle:index.of （这里的休止符代表的是单个字母的通配符）</p><p>![此处输入图片的描述][12]</p><p><strong>更优化的查找</strong></p><p>实例：</p><p>intitle:index.of “parent directory”</p><p>intitle:index.of name size</p><p><strong>2.查找特定的目录</strong></p><p>我们有时候不仅要查找目录列表，还要查找能访问特定目录的目录列表</p><p>实例：</p><p>intitle:index.of.admin</p><p>intitle:index.of inurl:admin</p><p><strong>3.查找特定的文件</strong></p><p>我们可以直接在这个目录中搜索敏感文件</p><p>实例：</p><p>intitle:index.of ws_ftp.log</p><p>filetype:log inurl:ws_ftp.log</p><p><strong>4.服务器版本</strong></p><p>能被攻击者用来决定攻击web服务器最佳方法的一小段信息就是确切的服务器版本，虽然攻击者能直接连接那个服务器的网页端口，并发送http请求来获取版本信息，但是google也可以</p><p>实例：</p><p>intitle:index.of “”server at;</p><p>intitle:index.of “Apache/1.3.27 Server at”</p><p>![此处输入图片的描述][13]</p><p><strong>5.操作系统</strong></p><p>我们还可以确定服务器的操作系统、模块和其他信息</p><p>我们会把操作系统写在括号里</p><pre><code>Apache/1/3/26(Unix)CentOSDebianDebian GNU/LinuxFedoraFreeBSDLinux/SUSELinux/SuSENETWRERed HatUbuntuUNIXWin32</code></pre><p>攻击者能结合这个操作系统标签里的信息以及web服务器的版本制定有针对性的攻击</p><h3 id="三、遍历技术"><a href="#三、遍历技术" class="headerlink" title="三、遍历技术"></a>三、遍历技术</h3><p><strong>1.目录遍历</strong></p><p>实例：</p><p>intitle:index.of inurl:”admin”</p><p><strong>注意：</strong></p><p>1.在目录列表中 点击 parent directory 就能得到父目录</p><p>2.我们甚至能利用漏洞得到我们无权看到的目录方法是  file=././././etc/passwd</p><p><strong>2.增量替换</strong></p><p>这个技术包括在URL里面通过替换数字尝试查找隐藏的目录或者文件，或者从其他网页链接不到的内容（谷歌通常只能查找到从别的网页能链接都的文件，一般带有数字的都可以这么试）</p><p><strong>3.扩展遍历</strong></p><p>经常会出现web页面的备份文件，他们有泄露源码的倾向。</p><p>常常在配置错误的时候出现这种问题，把php代码备份到不是以php结尾的文件中，比如bak</p><p>我们可以</p><p>实例：</p><p>intitle:index.of index.php.bak</p><p>inurl:index.php.bak</p><p>![此处输入图片的描述][14]</p><p><strong>注意：</strong></p><p>目录列表的问题可能会在缓存中出现，即使现在已经补上了顶层索引文件</p><h3 id="四、文档细分"><a href="#四、文档细分" class="headerlink" title="四、文档细分"></a>四、文档细分</h3><p>google 只搜索做过语法分析的或者是可见的一个文档视图</p><p>google 并不会搜索文档的元数据或者叫做域值（就是文件内部的一些属性），这些值只能你自己把文档下载下来右键查看</p><p><strong>一、配置文件</strong></p><p>配置文件存放程序的设置信息，攻击者或者是安全专家能通过这些文件洞察程序的使用情况，正在运行的系统的信息以及网络的使用和配置情况</p><p>不管配置文件的数据类型，一个配置文件本身的存在就很说明问题，配置文件的存在说明服务就在附近</p><p><strong>实例：</strong></p><p>filetype:conf inurl:firewall</p><p>![此处输入图片的描述][15]</p><p><strong>注意：</strong></p><p>1.配置文件名conf的使用，也可以组合其他的通用的命名规则来查找其他等价的命名规则</p><p><strong>例如：</strong></p><p>inurl:conf OR inurl:config OR inurl:cfg</p><p>2.如果你能知道配置文件的名字也是一个非常好的搜索方式，当然你可以从配置文件中抽取特定的字符串来查询</p><p>3.如果能再配上软件名字的话就效果更好了</p><p><strong>考虑的点:</strong></p><p>1.使用配置文件中独一无二的单词或者短语</p><p>2.过滤掉单词 sample example test how to tutorial来过滤示例文件</p><p>3.用 -cvs 来过滤到CVS库，里面经常存放默认的配置文件</p><p>4.如果你正在搜索一个UNIX的配置文件，过滤掉manpage 或者是Manual</p><p>5.在默认配置文件中寻找一个修改域生成查询</p><p><strong>二、查找文件</strong></p><p>日志文件中也记录着很多的敏感信息</p><p>日志文件也有一个默认的名字可以被我们用作基础的搜索，最常见的扩展名就是log了</p><p><strong>实例：</strong></p><p>filetype:log inurl:log </p><p>ext:log log </p><p>filetype:log username putty</p><p>![此处输入图片的描述][16]</p><p><strong>三、office文档</strong></p><p><strong>实例：</strong></p><p>filetype:xls inurl:password.xls</p><p>filetype:xls username password email</p><p>![此处输入图片的描述][17]</p><h3 id="五、数据库挖掘"><a href="#五、数据库挖掘" class="headerlink" title="五、数据库挖掘"></a>五、数据库挖掘</h3><p><strong>一、登录入口</strong></p><p>登录入口是第一道防线，很容易泄露软硬件的信息</p><p>查找入口一般使用关键字login </p><p>大的厂商一般会把版权的注意事项放在页面的底部</p><p>![此处输入图片的描述][18]</p><p><strong>二、支持的文件</strong></p><p>另一种方法就是通过查询支持文件，该文件和数据库软件一同安装或者由其创建，包括配置文件，调试脚本，甚至是样例数据库文件，这些支持文件要么和流行的数据库客户端服务器包含在一起，要么完全由他们创建</p><p>使用mysql_connect 函数的php脚本泄露的信息几乎是全部的，但是inc扩展名使之成为了一个includefile</p><p><strong>三、错误消息</strong></p><p>数据库的错误消息能够用来分析操作系统和web服务器的版本<br>还可能更多</p><p>SQL command not properly ended </p><p>这个表示没有在sql语句的最后找到正确的终止符，所以可能会被用于注入攻击</p><p><strong>四、数据库的转储</strong></p><p>数据库基于文本的转换在网络上是很常见的，使用数据库的转储数据库管理员能完整地重建数据库，也就意味着一个完整的转储的细节并不只是数据表格的结构还有每张表的每一条记录。</p><p>攻击者可以搜索转储的标题 </p><p><code># Dumping data for table</code></p><p>并且通过执行必要的关键词 username password等能够缩小范围</p><p><code># Dumping data for table(user|username|password|pass)</code></p><p>还可以关注一些由别的工具添加到数据库转储中最后的文件名</p><p><strong>实例：</strong></p><p>filetype:sql sql </p><p>![此处输入图片的描述][19]</p><p><strong>五、真实的数据库文件</strong></p><p>攻击者还能直接搜索到数据库本身，并不适合所有的数据库系统，只适合哪些有着特定名字或者扩展名的数据库,因为是二进制文件，所以没法在里面搜索字符</p><p><strong>实例：</strong><br>filetype:mdb inurl:com</p><p>![此处输入图片的描述][20]</p><h2 id="0X4谷歌在一个信息收集框架中的身影"><a href="#0X4谷歌在一个信息收集框架中的身影" class="headerlink" title="0X4谷歌在一个信息收集框架中的身影"></a>0X4谷歌在一个信息收集框架中的身影</h2><p>所有的搜索都遵循几个步骤</p><p>1.定义一个原始的搜索项</p><p>2.扩展该搜索项</p><p>3.从数据源获得数据</p><p>4.语义分析该数据</p><p>5.把该数据加工成信息</p><p><strong>一、原始搜索项</strong></p><p>清晰的定一个目标是搜索中最困难的一项，聪明的搜索不会获得一个不明确的目标，记住：无用输入，无用输出。<br>目标的分解工作尤为重要</p><p><strong>二、扩展搜索项</strong></p><p>自动化搜索的真正的力量在于想象出人操作的过程并翻译成某种形式的算法</p><p><strong>1.Email地址：</strong></p><p>很多网站都会尝试模糊处理email来欺骗数据挖掘程序，因为很多的垃圾邮件的发送者会通过数据挖掘程序来收集email地址。<br>当然我们有办法解决</p><p>email 地址可以扩展，比如：</p><pre><code>qazwsx@k0rz3n.comqazwsx at k0rz3n.comqazwsx at k0rz3n dot comqazwsx@k0rz3n dot comqazwsx_at_k0rz3n.comqazwsx_at_k0rz3n dot comqazwsx_at_k0rz3n_dot_comqazwsx@k0rz3n.remove.comqazwsx@_removethis_k0rz3n.com</code></pre><p><strong>注意：</strong></p><p>1.@符号能被篡改成很多的形式，比如说： -(at) <em>at</em> -at- 这也同样适用与dot </p><p>2.@ 和 dot 会被搜索引擎忽略</p><p><strong>验证一个email的地址</strong></p><p>Linux上使用host 命令 host -t xxx.gmail.com</p><p>windows上使用nslookup -qutype = xxx.gmail.com</p><p><strong>2.电话号码</strong></p><p>email地址是有格式的，但是电话号码没有</p><p>在一定的范围内查找结果中包含电话号码的有趣的地方是，你可以使用google 的numrange运算符，最好的方法就是指定起始数字然后在数字最后带上..（..是numberange的简写形式）</p><p><strong>例如：</strong></p><p>252793..9999</p><p><strong>3.人</strong></p><p>1.找到某人信息最好的方法就是google他们，最常见的方式就是直接放到google中，但是这样会存在大量的无用结果，我们需要增加信息，</p><p>“Andrew Williams” Syngress publishing security </p><p>2.另一种方法就是把搜索结果限制在国家中</p><p>如果他曾经在英国待过， site:uk</p><p><strong>4.获得大量的结果</strong></p><p>比如你想找到某个顶级域名中的所有的网站或者email地址，你要完成以下两件事</p><p>①突破1000个结果的限制</p><p>②增加你每次搜索的结果</p><p><strong>例如：</strong></p><p>site:xxxx.gov -<a href="http://www.xxxx.gov/">www.xxxx.gov</a></p><p>相当于查询子域名</p><p>![此处输入图片的描述][21]</p><p>我们可以给每个查询添加一些通用的额外关键字</p><p>about offical page site等</p><p><strong>5.更多组合</strong></p><p>我们可以把自己的搜索与能获取更好的结果的搜索项一起使用</p><p>1.当查找email时，能添加类似 通讯录 邮件 电子邮件 发送这种关键词</p><p>2.查找电话号码的时候可以使用一些类似 电话 移动电话 通讯录 数字 手机</p><p><strong>三、使用特别的运算符</strong></p><p>扩展名有时候能使用布尔运算符再次组合起来</p><p><strong>实例：</strong></p><p>filetype:ppt or filetype:doc site:xxxx.gov</p><p><strong>四、从数据源获取数据</strong></p><p>1.自行挖掘请求和接受响应的几个自动化的工具</p><p><strong>Netcat(nc)</strong>:</p><p>TCP/IP的瑞士军刀，功能异常强大，但是这里我们仅仅用它来接收响应：</p><pre><code>$(echo "GET/HTTP/1.0"; echo "Host:www.google.com";echo)|nc www.google.com 80 -vv</code></pre><p>当然我们也可以把请求头写入文件</p><p>1.txt</p><pre><code>GET /HTTP/1.1Host:www.google.com~~</code></pre><p><strong>注意:这两个波浪线代表两个空行</strong></p><pre><code>nc www.google.com 80 -vv &lt; 1.txt &gt;2.txt</code></pre><p>这里直接把响应写入了2.txt</p><p><strong>wget:</strong></p><pre><code>wget "http://www.baidu.com" -O output.txt</code></pre><p>我们还能够指定请求头的参数来规避谷歌的反爬虫机制</p><pre><code>wget -U my_diesel_driven_browser "https://www.google.com" -O output.txt</code></pre><p><strong>curl:</strong></p><p>curl就更加简单了，带有一个可选的参数-A 代表 UA </p><pre><code>curl -A xxxx "https://www.google.com"</code></pre><p><strong>lynx:</strong></p><p>纯文本模式的网页浏览器,不支持图形、音视频等多媒体信息。用法参见<a href="http://man.linuxde.net/lynx">http://man.linuxde.net/lynx</a></p><p>当然你可以选择使用脚本实现网页的抓取</p><p>2.使用其他的搜索引擎如 bing</p><p><strong>思考：如何发现一个透明代理：</strong></p><p>1.telnet到网络外面的一些随机的ip地址的80端口，如果你每次都能获得一个连接的话，你就在一个透明代理后面</p><p>2.直接telnet 到网站里，然后发送GET/HTTP/1.0 查看响应，不要给Host参数（一些代理使用Host:header 确定你想去的位置，如果你不给就会报出400的错误）</p><h2 id="0X5查找漏洞寻找目标"><a href="#0X5查找漏洞寻找目标" class="headerlink" title="0X5查找漏洞寻找目标"></a>0X5查找漏洞寻找目标</h2><p><strong>一、查找漏洞代码</strong></p><p><strong>实例：</strong></p><p>inurl:exploits</p><p><strong>二、查找公开漏洞的网站</strong></p><p>查找漏洞代码的一种方法就是关乎源代码中的文件扩展名，然后搜索该代码中的特定的内容。</p><p><strong>实例：</strong></p><p>filetype:c exploit</p><p>使用下面的命令把这些网站从转储的google结果页面中隔离出来</p><p><strong>实例：</strong></p><p>grep Cached exploit_file|awk =F “-“ ‘{print $1}’|sort -u</p><p>或者也可以使用 lynx -dump </p><p><strong>三、利用常见的代码字符串查找漏洞</strong></p><p>关注源代码中的常用字符，一种重要的方法就会是关注源代码中的包含的文件或者头文件的引用。以C文件为例，通常会被包含在一个 #include&lt;stdio.h&gt;中，不管文件的扩展名是什么</p><p>实例：</p><p><code>"#include&lt;stdio.h&gt;"</code> usage expoit</p><p><strong>四、查找易受攻击的目标</strong></p><p><strong>1.利用漏洞的公告查找目标</strong></p><p>软件供货商和安全研究员会定期发布关于易受攻击的软件的报告，这些报告会显示一个受影响软件供应商网站的链接，我们的目标是通过建立一个查询字符串来找到网页上易受攻击的目标。</p><p>特别有用的是使用 <strong>Powered by xxxx</strong></p><h2 id="0X6-十大简单有效的安全搜索"><a href="#0X6-十大简单有效的安全搜索" class="headerlink" title="0X6 十大简单有效的安全搜索"></a>0X6 十大简单有效的安全搜索</h2><p><strong>一、site:</strong></p><p>在一个安全评估的信息收集阶段，site运算符非常的重要 </p><p>sie 运算符应该作为一个基础的搜索而不是一个单独的搜索</p><p>谷歌会将最受欢迎的页面浮动到搜索结果的最上方</p><p>site 搜索能够搜集由一个目标维护的服务器和主机的信息</p><p><strong>实例：</strong></p><p>site:nytimes.com -site:<a href="http://www.nytimes.com/">www.nytimes.com</a> </p><p>这个查询很快就找到了在 mytimes.com 而不在 <a href="http://www.nytimes.com/">www.nytimes.com</a> 域中的主机，得到的这些可能是主机也可能是子域</p><p><strong>二、intitle:index.of</strong></p><p>解释见前文</p><p><strong>三、error|warning</strong></p><p>错误信息会泄露大量的关于目标的信息，我们常常将其与site结合在一起使用</p><p><strong>实例：</strong></p><p>(“for more information”|”noot found”) (error|warning)</p><p><strong>四、login|logon</strong></p><p>关联到登录入口的文档列出了email 电话 或者是帮助忘记密码的用户重获权限的人工助手的URL,这些人工助手或许就是社会工程攻击的完美目标，安全系统最大的弱点是键盘后面的人</p><p>login trouble 也是很有价值的</p><p><strong>五、username|userid|employee.ID “your username is”</strong></p><p>有很多的方法能从目标系统获取用户名，即使用户名是大多数认证机制中不太重要的部分</p><p>![此处输入图片的描述][22]</p><p><strong>六、password|passcode|”your password is” reminder forgotten</strong></p><p>某些情况下，这种查询与site结合会找到提供创建密码策略信息的帮助页面，这对后面的密码的猜解提供了巨大的帮助</p><p>![此处输入图片的描述][23]</p><p><strong>七、admin|administrator</strong></p><p>我们还可以加上 contact you/contact your (system) administrator</p><p>返回的结果可能会涉及本地、公司、网站、部门、服务器、系统、网络、数据库、email 等</p><p>![此处输入图片的描述][24]</p><p><strong>实例：</strong></p><p>“administrative login”|”admin login” </p><p>很容易就能找到登录的界面</p><p>![此处输入图片的描述][25]</p><p><strong>注意：</strong></p><p>另一种方式就是用inurl 在URL查找adminstrator 类似的词语，十有八九就是网站的登录界面</p><p><strong>八、-ext:html|-ext:htm|-ext:shtml|-ext:asp|-ext:php</strong></p><p>ext 是filetype类型的同义词，上面的查询也是一个否定查询，要和site结合起来用，单独使用是没有效果的</p><p>但是如果site搜索与排除了前十个最常见文件类型的搜索组合使用的话，就能直接找到有趣的文档，这能给攻击者节省大量的时间</p><p><strong>九、inurl:temp|inurl:tmp|inurl:backup|inurl:bak</strong></p><p>与site 相结合就能在一个服务器上查找备份和临时文件，尽管临时和备份文件可能会被命名成奇怪的样子，但是他们的格式是不会变的</p><p><strong>十、intrnet|help.desk</strong></p><p>intranet 已经变成了描述一个小团体中局域网的通用名词，这个名词代表着封闭的网络，不对外开放</p><p>但是现在很多的站点已经配置了从因特网访问一个局域网的入口，这就把攻击者与封闭网络拉近了距离</p><p><strong>注意：</strong></p><p>少数情况下，由于网络设备的错误配置，私有的局域网会在公网上被发现，而管理员却毫不知情。</p><p>一般过滤器只会允许来自某机构或者是某校园的特定的地址访问</p><p>这里有两个问题：</p><p>1.对特别页面的访问权限的跟踪记录是一个管理噩梦</p><p>2.如果一个攻击者能访问一个本地代理服务器的话，向一个配置错误的代理服务器发送请求或者是，把一台同网络的机器转变成被信任的内网用户<br>这个搜索是用来查找描述技术支持服务程序的页面，结合site威力更大</p><h2 id="0X7-追踪web服务器，登录入口和网络硬件"><a href="#0X7-追踪web服务器，登录入口和网络硬件" class="headerlink" title="0X7 追踪web服务器，登录入口和网络硬件"></a>0X7 追踪web服务器，登录入口和网络硬件</h2><h3 id="一、查找和分析web服务器"><a href="#一、查找和分析web服务器" class="headerlink" title="一、查找和分析web服务器"></a>一、查找和分析web服务器</h3><p>攻击者关注操作系统，web服务器版本、品牌、默认配置、有漏洞的脚本、</p><p>很多不同的方法可以找到一台服务器，最常用的手段就是端口扫描</p><p>使用nmap Nessus openvas qualys这类工具,但是谷歌的查询相比会更加的不明显</p><p><strong>1.目录列表：</strong></p><p>一个目录列表底部的server标签能够提供正在运行的wen服务器软件明确的细节</p><p>server.at “Apache/2.4.12”</p><p>并非所有的web服务器会把标签放在目录列表的底部，但是apache 的大多数衍生产品都默认打开这个功能，其他平台也有类似的信息</p><p>“Microsoft-IIS/7.0 server at”</p><p><strong>2.web 服务器的软件错误消息</strong></p><p>错误信息的文件常常会保存在某个地方，通常以错误的名字来命名的，我们可以分析这些文件之间的共性和特性，从而利用Google找到这个错误页面</p><p>虽然可以通过服务器的配置设置自定义的错误页面，但是含有404 403 500 等错误消息的页面是不能定制的</p><p>以Apache为例</p><p><strong>实例：</strong></p><p>“Apache/2.4.12 Server at” “-intitle:index.of intitle:inf”</p><p>“Apache/2/4/12 Server at” -intitle:index.of intitle:error</p><p>就能找到由错误信息暴露出服务器版本的apache 服务器</p><p>但是我们从服务器自身查找线索更有效</p><p>apache 会有一个叫做 httpd.conf的配置文件，对httpd.conf的搜索泄露了错误消息模板的位置，比如</p><p>/error/http_BAD_REQUEST.html.var 涉及文件系统中的error目录</p><p>我们会在这些文件包含的其他文件中找到这样一句话</p><p>think this is a server error </p><p>于是我们可以这样搜索</p><p><strong>实例：</strong></p><p>intitle:”Object not found!” “think this is a server error”</p><p>使用基本shell命令就能既分离一个错误页面的标题又分离可能出现在错误页面上的文本</p><p><strong>实例：</strong></p><p>grep -h -r “Content-language:en” * -A 10|grep -A5 “TITLE”|grep -v virtual</p><p>我们还能支持其他语言类型的错误，只要把en 换成 de es fr 或者sv</p><p><strong>3.默认页面</strong></p><p>另一个查找特定类型的服务器或者web软件的方法就是搜索默认的web页面，大多数的web软件或者是服务器自身都带有一页或者是更多页的web页面，这些页面使得网站管<br>理员很容易地测试一个web服务器或者是应用的安装情况。</p><p>在网站的早期，也就是默认页面还存在的时候谷歌就抓取到信息，导致实时显示的页面与缓存页面有不同。</p><p>而当我们提交查询的时候查询的就是页面的缓存版本，</p><p><strong>4.默认文档</strong></p><p>web服务器软件经常会将web目录里存放的手册和文档一起提供给用户，而攻击者能用这些文档查找软件</p><p>虽然文档提供的信息可能无法描述服务器的版本，但是这种管理员的疏忽给我们足够的信心相信，类似的问题还会发生</p><h3 id="二、查找登录入口"><a href="#二、查找登录入口" class="headerlink" title="二、查找登录入口"></a>二、查找登录入口</h3><p>黑客们把登录入口当做是描述运行在服务器上程序的一种方法，同时也是给攻击提供有用的信息和链接的方法</p><p>如果你能通过默认的页面找到登录入口的话，那么只能说明这个网站的管理员的安全意识不太强，侧面反映出网站的安全性比较差，有些入口还显示了软件的版本，这对攻击者寻找已知的漏洞很有帮助。</p><h3 id="三、使用和查找各种web工具"><a href="#三、使用和查找各种web工具" class="headerlink" title="三、使用和查找各种web工具"></a>三、使用和查找各种web工具</h3><p>Network Query Tool 是一款网页版的扫描器，NQT的功能看起来是来源于带有NQT应用的网站，我们能通过简单的查询寻找带有NQT功能的服务器，NQT程序通常叫做nqt.php，并且页面上通常偶 Network Query Tool的字样</p><p>inurl:nqt.php intitle:”Network Query Tool” </p><p>NQT程序也接受POST请求，我们可以向服务器传递参数，服务器就会以你的名义来执行这个NQT指令</p><h3 id="四、定位开启的网络设备"><a href="#四、定位开启的网络设备" class="headerlink" title="四、定位开启的网络设备"></a>四、定位开启的网络设备</h3><p>谷歌也能用来探测很多开启web的网络设备，很多设备都装有网络界面使得管理员能远程控制，但是只要是被Google抓取过得页面都会存在于网络映射中】<br>intitle:”BorderManager alert” 就能泄露代理防火墙服务器的存在，</p><p>如果这台设备是一个代理服务器的话，攻击者就能利用这台主机获得可信网络的访问权限</p><p><strong>实例：</strong></p><p>“Version Info” “BootVesion” “Internet Settings” 能找到 Belkin Cable/DSL路由器<br>……</p><h3 id="五、查找网络报告"><a href="#五、查找网络报告" class="headerlink" title="五、查找网络报告"></a>五、查找网络报告</h3><p>ntop程序显示了网络流量统计数据，这些数据能用来确定一个目标网络的结构</p><p>intitle:”Welcome to ntop!”会找到已经公开了他们ntop程序的服务器</p><h3 id="六、查找网络硬件"><a href="#六、查找网络硬件" class="headerlink" title="六、查找网络硬件"></a>六、查找网络硬件</h3><p>比如网络打查找网络硬件印机，网络摄像头，这些设备能提供大量有价值的信息，列出周围的网络命名规则以及其他信息</p><h2 id="0X8-用户名、密码以及其他信息"><a href="#0X8-用户名、密码以及其他信息" class="headerlink" title="0X8 用户名、密码以及其他信息"></a>0X8 用户名、密码以及其他信息</h2><h3 id="一、搜索用户名"><a href="#一、搜索用户名" class="headerlink" title="一、搜索用户名"></a>一、搜索用户名</h3><p>大多数的认证机制会使用用户名和密码，数据库的错误消息，web服务器的错误消息等都会泄露用户信息</p><p>某些情况下用户名能从检查web行为的web统计程序中找到，Webalizer程序显示了关于一个web服务器使用情况的各种信息</p><p><strong>实例：</strong></p><p>+intext:webalizer+intext:”Total Username” + intext:”Usage Statistics for” 可以找到</p><p>windows注册表存有各种的认证信息，包括用户名和密码，虽然搜索到导出的windows注册表文件不常见，但是查询：filetype:reg HKEY_CURRENT_USER username 还是能找到许多结果</p><p>有很多方法能找到一个已知的文件名</p><p><strong>实例：</strong></p><p>intitle:index.of install.log</p><p>filetype:log nurl:install.log</p><p>二、搜索密码：</p><p>大多数在google上发现的密码都是别被加密的，但是大多数情况下还是能找到破解办法，比如 <a href="http://www.openwall.com/John">http://www.openwall.com/John</a> 的 John the Ripper ,强大的密码破解网站</p><p><strong>实例：</strong></p><p>ext:pwd inurl:_vti_pvt inurl:(Server|authors|administrators)</p><p>intext:(password|passcode|pass) intext:(username|userid|user)</p><h3 id="三、搜索信用卡号码、社会保险后妈等"><a href="#三、搜索信用卡号码、社会保险后妈等" class="headerlink" title="三、搜索信用卡号码、社会保险后妈等"></a>三、搜索信用卡号码、社会保险后妈等</h3><p>往往是钓鱼者放在自己服务器上的信息，以为只有自己能看到，实际谷歌早就发现了</p><h3 id="四、其他信息"><a href="#四、其他信息" class="headerlink" title="四、其他信息"></a>四、其他信息</h3><p><strong>实例：</strong></p><p>filetype:ctt messager MSN信使联系人列表</p><p>filetype:blt blt + intext:screenname AIM好友列表</p><p>我们甚至还能找扫描器生成的报告</p><p>This file was generated by Nessus</p><h2 id="0X9-如何入侵谷歌服务"><a href="#0X9-如何入侵谷歌服务" class="headerlink" title="0X9 如何入侵谷歌服务"></a>0X9 如何入侵谷歌服务</h2><h3 id="一、日历"><a href="#一、日历" class="headerlink" title="一、日历"></a>一、日历</h3><p>谷歌日历是一个很有趣的功能，他提供日历共享。我们可以登录calender 然后搜索password/passcode 我们会发现很多有趣的结果，比如泄露的会议安排，有时候会议的电话号码和访问号码也都列了出来，这样就能悄无声息的进监听整个会议</p><p>我们也可以搜索上面的变体， username password ，找到的可能就是把敏感的登录信息放到日历中的人，我们还能通过他查到生日、名字、宠物名字等信息</p><h3 id="二、谷歌快讯"><a href="#二、谷歌快讯" class="headerlink" title="二、谷歌快讯"></a>二、谷歌快讯</h3><p>我们需要经常追踪谷歌结果集的变化，比如说我们要监控某网站的漏洞，我们其实不需要扫描器，我们只要建立一个cron 任务就能监控google的返回结果并且在检测到变化的时候把结果发邮件通知我们。而谷歌快讯就是一个能检测到结果集变化的强大系统</p><h3 id="三、google自定义搜索引擎"><a href="#三、google自定义搜索引擎" class="headerlink" title="三、google自定义搜索引擎"></a>三、google自定义搜索引擎</h3><p>访问 <a href="https://cse.google.com/cse/">https://cse.google.com/cse/</a></p><p>输入自己搜索引擎的名字</p><p>他会围绕Google Hacking数据库展开工作</p><h2 id="0X10-保护自己免受google骇客攻击"><a href="#0X10-保护自己免受google骇客攻击" class="headerlink" title="0X10 保护自己免受google骇客攻击"></a>0X10 保护自己免受google骇客攻击</h2><h3 id="web-服务器的安全防护"><a href="#web-服务器的安全防护" class="headerlink" title="web 服务器的安全防护"></a>web 服务器的安全防护</h3><p><strong>1、目录列表和丢失的索引文件</strong></p><p>.htaccess 可以来防止目录的内容未授权的访问，但是不当的配置还会让这个文件可见甚至可读</p><p>在 apache 的服务器上可以通过 httpd.conf文件中的单词indexs前加一个连字符或者减号来禁止目录列表</p><p><strong>2、robots.txt</strong></p><p><code>#</code> 开头的行会被认为是注释，每一个不以#开头的行都会以User-agent 或者是一个disallow 声明开头，表示禁止爬虫爬行的位置，但是也可以允许特定的爬虫访问</p><p><strong>3、NOARCHIVE缓存杀手</strong></p><p>有时候你希望google住抓取某个页面但是又不希望对页面的副本进行缓存，或者搜索结果中显示缓存链接，这个要求可以通过META实现</p><p><code>&lt;META NAME= "ROBOTS" CONTENT= "NOARCHIVE"&gt;</code></p><p>如果你只想阻止谷歌对文件的缓存，可以在HEAD节里使用</p><p><code>&lt;META NAME="GOOGLEBOT" CONTENT="NOINDEX,NOFOLLOW"&gt;</code></p><p><strong>4、NOSNIPET 去除摘要</strong></p><p><code>&lt;META NAME="GOOGLEBOT" CONTENT="NOSNIPPET"&gt;</code></p><p>另外这个功能还有个副作用，就是谷歌也不能缓存，一举两得</p><p><strong>5.十五条防止信息泄露和服务器入侵的措施</strong></p><p>1.检查所有的文档能否被Google搜索到，避免敏感文件能出现在公众的视野中</p><p>2.选择一个强大的自动化工具来扫描你网站上是否有信息的泄露</p><p>3.不要使用默认的登录入口，以防止登录入口被hack猜解</p><p>4.关闭数据库的远程管理工具</p><p>5.删除明显的显示软件版本的信息</p><p>6.配置服务器只能下载特定的文件类型（白名单比黑名单要简单有效得多）</p><p>7.正确的配置你的服务器，不要抱有侥幸心理，任何的松懈带来的灾难是巨大的</p><p>8.不要把源码的备份放在未经授权就能访问的地方，并且及时删除网站上的无用的备份文件</p><p>9.不要使用弱密码，防止攻击者轻易攻破后台</p><p>10.登录请加上强度相对较高的验证手段，防止攻击者采用爆破的手段</p><p>11.关闭服务器不必要的端口</p><p>12.请不要使用网站上的任何信息作为密码，否则都属于容易爆破的类型</p><p>13.备份的源代码请经过专业的混淆，防止被下载之后轻易读取到内容</p><p>14.及时更新服务器的系统，修复潜在的漏洞</p><p>15.安装正规的安全防护软件，如”安全狗”</p><p><img src="https://picture-1253331270.cos.ap-beijing.myqcloud.com/TP1.png"></p><p><img src="https://picture-1253331270.cos.ap-beijing.myqcloud.com/TP1.png"><br>[2]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/TP2.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/TP2.png</a><br>[3]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/DQ1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/DQ1.png</a><br>[4]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/DQ2.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/DQ2.png</a><br>[5]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/LT1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/LT1.png</a><br>[6]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/RL1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/RL1.png</a><br>[7]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/RL3.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/RL3.png</a><br>[8]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/DT1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/DT1.png</a><br>[9]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/GJ.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/GJ.png</a><br>[10]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/ZDY1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/ZDY1.png</a><br>[11]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/GHDB1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/GHDB1.png</a><br>[12]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/MLLB1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/MLLB1.png</a><br>[13]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/MLLB2.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/MLLB2.png</a><br>[14]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/MLLB3.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/MLLB3.png</a><br>[15]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/MLLB4.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/MLLB4.png</a><br>[16]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/MLLB5.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/MLLB5.png</a><br>[17]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/YHMMA1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/YHMMA1.png</a><br>[18]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/DL1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/DL1.png</a><br>[19]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/SJK1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/SJK1.png</a><br>[20]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/SJK2.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/SJK2.png</a><br>[21]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/ZYM1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/ZYM1.png</a><br>[22]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/DLCW.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/DLCW.png</a><br>[23]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/CZMM1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/CZMM1.png</a><br>[24]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/DLQX.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/DLQX.png</a><br>[25]:  <a href="https://picture-1253331270.cos.ap-beijing.myqcloud.com/DLJM1.png">https://picture-1253331270.cos.ap-beijing.myqcloud.com/DLJM1.png</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我们都知道渗透测试中信息收集的重要性，是第一步也是最重要的一步。有的人渗透测试使出浑身解数破门而不入，可对有的人来说却如同囊中取物，也许功力就是差在信息收集，那么现在就让我带领各位读者重新认识一下Google———你军火库中的“大咖” 。（前面基础部分希望大家不要错过，说不定有你不知道的秘密）&lt;/p&gt;</summary>
    
    
    
    <category term="他山之石" scheme="https://www.kmoon.fun/categories/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
    
    <category term="Google" scheme="https://www.kmoon.fun/tags/Google/"/>
    
    <category term="信息收集" scheme="https://www.kmoon.fun/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>开门见山-欢迎来到Kmoon的小世界</title>
    <link href="https://www.kmoon.fun/2022/action/"/>
    <id>https://www.kmoon.fun/2022/action/</id>
    <published>2022-10-21T07:04:06.641Z</published>
    <updated>2022-10-30T06:51:00.099Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hi-this-is-Hushan"><a href="#Hi-this-is-Hushan" class="headerlink" title="Hi,this is Hushan."></a>Hi,this is Hushan.</h3><h3 id="You-can-call-me-kmoon"><a href="#You-can-call-me-kmoon" class="headerlink" title="You can call me kmoon."></a>You can call me kmoon.</h3><h3 id="In-the-same-month-all-things-are-clear-😄"><a href="#In-the-same-month-all-things-are-clear-😄" class="headerlink" title="In the same month, all things are clear.😄"></a>In the same month, all things are clear.😄</h3><span id="more"></span><h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>简介： <a href="http://kmoon.fun/2022/10/me/">me</a></p><ul><li>🌎建站日期：2022|8|10</li><li>😎ID：千山同一月(Kmoon)</li><li>🏠中国 | 重庆</li><li>🐴2002|02|23</li><li>🎓信息工程|本科大三|在读</li><li>🏀爱好：篮球|文学|旅游等</li><li>🎯渗透测试工程师、安全攻防工程师等(ing)</li></ul><p>目前正在做的事情：在备考CET6、学习C++、51单片机、Linux基础</p><p>未来规划：考研or上班</p><h2 id="联系我"><a href="#联系我" class="headerlink" title="联系我"></a>联系我</h2><p>Email：<a href="mailto:kmoon_hs@foxmail.com">kmoon_hs@foxmail.com</a></p><p>QQ：MjQzODI1NzkwOC8zNDUzODYzNDky</p><p>Wechat：Qstyy_hs</p><p>Github：<a href="https://github.com/kmoonn">https://github.com/kmoonn</a></p><h2 id="博客指南"><a href="#博客指南" class="headerlink" title="博客指南"></a>博客指南</h2><p>My博客主要分为以下几个板块，方便自己记录学习过程和阅览者阅读：</p><ul><li><h4 id="学习札记"><a href="#学习札记" class="headerlink" title="学习札记"></a>学习札记</h4><blockquote><p>核心板块，记录一门语言或一个技术从零开始的学习笔记，快速查阅文档。</p></blockquote></li><li><h4 id="深渊"><a href="#深渊" class="headerlink" title="深渊"></a>深渊</h4><blockquote><p>收集互联网教材、参考解答电子书，软件资源合集，方便读者下载浏览。</p></blockquote></li><li><h4 id="未命名"><a href="#未命名" class="headerlink" title="未命名"></a>未命名</h4><blockquote><p>不好分类的奇思妙想、水文等，比如小脚本、小尝试、小分享等</p></blockquote></li><li><h4 id="小胡日记"><a href="#小胡日记" class="headerlink" title="小胡日记"></a>小胡日记</h4><blockquote><p>文字的故乡，记录平时写的小短文、阅读笔记等</p><p>一本书需要达到<strong>3万字</strong>以上的标准，才能出版，目标是有朝一日可以为自己整理成册一本书</p><p>目前进度-&gt;<strong>15320/30000</strong></p></blockquote></li><li><h4 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h4><blockquote><p>核心板块、渗透测试主板块 记录渗透测试过程、思路、漏洞复现等</p></blockquote></li><li><h4 id="渗透工具"><a href="#渗透工具" class="headerlink" title="渗透工具"></a>渗透工具</h4><blockquote><p>渗透测试子板块，整理常见渗透测试Tools使用方法</p></blockquote></li><li><h4 id="靶场日记"><a href="#靶场日记" class="headerlink" title="靶场日记"></a>靶场日记</h4><blockquote><p>渗透测试子板块，快乐打靶日记 xss、upload、sqli等</p></blockquote></li><li><h4 id="面试宝典"><a href="#面试宝典" class="headerlink" title="面试宝典"></a>面试宝典</h4><blockquote><p>核心板块，记录面经</p></blockquote></li><li><h4 id="他山之石"><a href="#他山之石" class="headerlink" title="他山之石"></a>他山之石</h4><blockquote><p>他山之石，可以攻玉。记录互联网上其他优秀作者的博文、项目等</p></blockquote></li><li><h4 id="刷题笔记"><a href="#刷题笔记" class="headerlink" title="刷题笔记"></a>刷题笔记</h4><blockquote><p>核心板块，记录针对学习札记中涉及到的知识和技术栈的刷题记录</p><p>后续打算主要记录计算机408、数据结构、数据库、算法、密码学等</p></blockquote></li><li><h4 id="项目计划"><a href="#项目计划" class="headerlink" title="项目计划"></a>项目计划</h4><blockquote><p>大学竞赛、互联网开源项目学习记录，为后续求职简历<strong>项目经历</strong>一栏做准备。</p></blockquote></li><li><h4 id="实验报告"><a href="#实验报告" class="headerlink" title="实验报告"></a>实验报告</h4><blockquote><p>记录WUT信息工程专业部分课程实验报告，原则上只上传不太water的报告。</p><p>目前已有-&gt;组网技术实验|电子线路EDA</p><p>正在更新-&gt;C++程序设计基础|单片机嵌入式原理|数字信号处理</p></blockquote></li><li><h4 id="懒人必备"><a href="#懒人必备" class="headerlink" title="懒人必备"></a>懒人必备</h4><blockquote><p>不多说 懂的都懂</p><p>目前主要针对学校的一些偷懒小脚本</p></blockquote></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Hi-this-is-Hushan&quot;&gt;&lt;a href=&quot;#Hi-this-is-Hushan&quot; class=&quot;headerlink&quot; title=&quot;Hi,this is Hushan.&quot;&gt;&lt;/a&gt;Hi,this is Hushan.&lt;/h3&gt;&lt;h3 id=&quot;You-can-call-me-kmoon&quot;&gt;&lt;a href=&quot;#You-can-call-me-kmoon&quot; class=&quot;headerlink&quot; title=&quot;You can call me kmoon.&quot;&gt;&lt;/a&gt;You can call me kmoon.&lt;/h3&gt;&lt;h3 id=&quot;In-the-same-month-all-things-are-clear-😄&quot;&gt;&lt;a href=&quot;#In-the-same-month-all-things-are-clear-😄&quot; class=&quot;headerlink&quot; title=&quot;In the same month, all things are clear.😄&quot;&gt;&lt;/a&gt;In the same month, all things are clear.😄&lt;/h3&gt;</summary>
    
    
    
    
    <category term="me" scheme="https://www.kmoon.fun/tags/me/"/>
    
  </entry>
  
  <entry>
    <title>实验报告-WUT_C++程序设计实验报告</title>
    <link href="https://www.kmoon.fun/2022/c/"/>
    <id>https://www.kmoon.fun/2022/c/</id>
    <published>2022-10-21T07:02:47.000Z</published>
    <updated>2022-12-15T01:59:23.444Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>C++程序设计基础是大三的一门专业选修课，学习札记可以参考另一篇文章”学习札记-C++程序设计基础”。这里将教学过程中的四次实验内容列举一下，记录实验和学习过程，并附上自己完成的实验报告以供参考。</p></blockquote><span id="more"></span><p><strong>Github地址</strong></p><p><a href="https://github.com/kmoonn/WUT-IE_Exeriment_Reports/tree/main/C%2B%2B">https://github.com/kmoonn/WUT-IE_Exeriment_Reports/tree/main/C%2B%2B</a></p><h2 id="实验一-类与对象的操作实验"><a href="#实验一-类与对象的操作实验" class="headerlink" title="实验一 类与对象的操作实验"></a>实验一 类与对象的操作实验</h2><h2 id="实验二-运算符重载实验"><a href="#实验二-运算符重载实验" class="headerlink" title="实验二 运算符重载实验"></a>实验二 运算符重载实验</h2><h2 id="实验三-继承与派生实验"><a href="#实验三-继承与派生实验" class="headerlink" title="实验三 继承与派生实验"></a>实验三 继承与派生实验</h2><h2 id="实验四-输入输出流实验"><a href="#实验四-输入输出流实验" class="headerlink" title="实验四 输入输出流实验"></a>实验四 输入输出流实验</h2><h2 id="大作业1-work1"><a href="#大作业1-work1" class="headerlink" title="大作业1 work1"></a>大作业1 work1</h2><p><img src="http://image.kmoon.fun//images/202212150956899.png" alt="image-20221215095653866"></p><h2 id="大作业2-work2"><a href="#大作业2-work2" class="headerlink" title="大作业2 work2"></a>大作业2 work2</h2><p><img src="http://image.kmoon.fun//images/202212150957410.png" alt="image-20221215095708377"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;C++程序设计基础是大三的一门专业选修课，学习札记可以参考另一篇文章”学习札记-C++程序设计基础”。这里将教学过程中的四次实验内容列举一下，记录实验和学习过程，并附上自己完成的实验报告以供参考。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="实验报告" scheme="https://www.kmoon.fun/categories/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="C++" scheme="https://www.kmoon.fun/tags/C/"/>
    
    <category term="实验报告" scheme="https://www.kmoon.fun/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>项目计划-[推推]:小说更新就通知(测试)</title>
    <link href="https://www.kmoon.fun/2022/project1/"/>
    <id>https://www.kmoon.fun/2022/project1/</id>
    <published>2022-10-20T14:51:03.000Z</published>
    <updated>2022-10-30T06:08:08.698Z</updated>
    
    <content type="html"><![CDATA[<p>项目计划-[推推]:小说更新就通知，主要负责测试部分的项目</p><span id="more"></span><img src="https://img.gejiba.com/images/5c7159dff960fd2369da8ab5a90ea69f.png" alt="5c7159dff960fd2369da8ab5a90ea69f.png" style="zoom:67%;"><h3 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h3><p><strong>竞品分析</strong></p><p>1 起点等小说APP 原生通知<br>速度快。但是一般需要付费 且需要安装APP</p><p>2 其它盗版平台<br>更新通知不及时 且部分就算有更新也无法阅读最新（防盗）</p><p><strong>引出需求</strong><br>1 能不能有原生的更新通知速度 ，但是有到位的免费阅读源<br>2 提供多本图书的通知订阅服务，且通知不依赖APP<br>3 基于订阅的，青年人同好读书推荐<br>4 基于订阅的，推推阅读榜单<br>5 商品最低价定时、纪念日倒计时等</p><p><strong>商业目标</strong><br>1 用户量大了之后，按定时任务收费，如1元1月<br>2 与小说、游戏、电商合作，进行基于青年人的广告业务</p><p><strong>亮点难点</strong><br>1 热门书籍在更新点的访问压力<br>2 书籍更新通知的及时性和有效性<br>3 书荒：同好推荐的可能性<br>4 后期：定时任务的压力 ；任务的扩展</p><h3 id="项目时间"><a href="#项目时间" class="headerlink" title="项目时间"></a>项目时间</h3><p>2022年10月24日-11月18日</p><h3 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h3><p>喜欢看小说的同学心里肯定有一种痛——等待每天的更新，为了看最新的章节，有时候一天能刷新页面三四次甚至更多。</p><p>本项目就是解决这种小说更新通知的产品。只要小说一更新，第一时间推送微信消息给你，免去反复去刷新去等待的痛苦。</p><p>项目分为前台和后台两部分，前台提供给用户使用，是基于手机的网站嵌入到微信公众号内；后端是PC网站，是平台对小说书目、访问地址和刷新频率的配置和管理。</p><h3 id="主要模块"><a href="#主要模块" class="headerlink" title="主要模块"></a>主要模块</h3><ul><li>查询小说更新的定时器</li><li>手机端用户的使用流程和通知</li><li>后台的小说录入和管理 </li><li>微信JS-SDK的使用</li></ul><h3 id="项目框架"><a href="#项目框架" class="headerlink" title="项目框架"></a>项目框架</h3><p>基于java的开发体系</p><p>项目管理： git/svn</p><p>前端：css3\html5\vue.js</p><p>后台：spring\springboot\maven\mysql</p><h3 id="项目分工"><a href="#项目分工" class="headerlink" title="项目分工"></a>项目分工</h3><ul><li>产品</li><li>UI</li><li>前端</li><li>开发</li><li>测试</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;项目计划-[推推]:小说更新就通知，主要负责测试部分的项目&lt;/p&gt;</summary>
    
    
    
    <category term="项目计划" scheme="https://www.kmoon.fun/categories/%E9%A1%B9%E7%9B%AE%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="测试" scheme="https://www.kmoon.fun/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>学习札记-计算机网络</title>
    <link href="https://www.kmoon.fun/2022/jw/"/>
    <id>https://www.kmoon.fun/2022/jw/</id>
    <published>2022-10-06T13:51:39.000Z</published>
    <updated>2022-11-05T07:01:52.800Z</updated>
    
    <content type="html"><![CDATA[<p>计算机没什么用.他们只会告诉你答案.</p><blockquote><p>本篇作为计算机网络知识的起始篇，主要了解关于计算机网络的一些基本内容。</p><p>基于谢希仁老师的**计算机网络(第7、8版)**教材开始学习。</p><p>内容只会越来越少，学习本就是<strong>将知识变成常识</strong>的过程，那么常识当然不用再特意写出来咯。后面部分是刷题记录，当然也只会越来越少。</p></blockquote><span id="more"></span><h2 id="专有名词"><a href="#专有名词" class="headerlink" title="专有名词"></a>专有名词</h2><h3 id="1-基础"><a href="#1-基础" class="headerlink" title="1. 基础"></a>1. 基础</h3><p><strong>Internet</strong> 互联网</p><p><strong>ISP</strong>（Internet Service Provider）互联网服务提供者</p><blockquote><p>例如中国电信、联通、移动</p></blockquote><p><strong>IXP</strong>（Internet eXchange Point）互联网交换点</p><blockquote><p>主要作用就是允许两个网络直接相连并交换分组，而不需要再通过第三个网络来转发分组</p></blockquote><p><strong>ISO</strong>（International Organization for Standardization）国际标准化组织</p><p><strong>OSI</strong> 开放系统互连基本参考模型</p><p><strong>WAN</strong>（Wide Area Network）广域网</p><p><strong>MAN</strong>（Metropolitan Area Network）城域网</p><p><strong>LAN</strong>（Local Area Network）局域网</p><p><strong>PAN</strong>（Personal Area Network）个人区域网</p><p><strong>VLAN</strong>（Virtual LAN）虚拟局域网</p><blockquote><p>一组逻辑上的设备和用户，不受物理位置的限制，可以根据功能、部门及应用等因素将它们组织起来，相互之间的通信就好像它们在同一个网段中一样</p></blockquote><p><strong>PDU</strong> （Protocol Data Unit）协议数据单元</p><p><strong>P2P</strong> （Peer-to-Peer）对等方式 </p><p><strong>MTU</strong> （Maximum Transfer Unit）最大传送单元</p><p><strong>RTT</strong> （Round-Trip Time）往返时间</p><h3 id="2-物理层"><a href="#2-物理层" class="headerlink" title="2. 物理层"></a>2. 物理层</h3><p><strong>FDM</strong> 频分复用</p><p><strong>TDM</strong> 时分复用</p><p><strong>WDM</strong> 波分复用</p><p><strong>STDM</strong> 统计时分复用</p><p><strong>CDM</strong>（Code Division Multiplexing）码分复用</p><p><strong>CDMA</strong>（Code Division Multiplex Access）码分多址</p><h3 id="3-数据链路层"><a href="#3-数据链路层" class="headerlink" title="3. 数据链路层"></a>3. 数据链路层</h3><p>   <strong>PPP</strong> （Point-to-Point Protocol）点对点协议</p><p>   <strong>CSMA/CD</strong>（Carrier Sense Multiple Access/Collision Detection）<strong>载波监听多点接入/冲突检测</strong></p><p>   <strong>CRC</strong> (Cyclic Redundancy Check) 循环冗余校验</p><p>   <strong>FCS</strong>（Frame Check Sequence） 帧校验序列</p><h3 id="4-网络层"><a href="#4-网络层" class="headerlink" title="4. 网络层"></a>4. 网络层</h3><p>   <strong>IGP</strong>（Interior Gateway Protocol）内部网关协议 </p><p>   <strong>RIP</strong>（Routing Information Protocol）路由信息协议</p><blockquote><p>适用于<strong>小规模网络</strong>环境</p><p>基于<strong>距离向量</strong></p><p>用于一个AS（自治系统）内的路由信息的传递</p><p>每<strong>30s</strong>发送一次<strong>路由信息更新</strong></p><p>提供跳数作为尺度来衡量路由的距离</p><p>最多支持的跳数为15</p></blockquote><p>   <strong>OSPF</strong> （Open Shortest Path First）开放最短路径优先</p><blockquote><p>开放最短路径优先协议</p><p><strong>内部</strong>网关协议</p><p><strong>分布式</strong>的<strong>链路状态</strong>协议</p></blockquote><p>   <strong>EGP</strong>（External Gateway Protocol）外部网关协议</p><p>   <strong>BGP</strong>（Border Gateway Protocol）边界网关协议</p><p>   <strong>ARP</strong>（Address Resolution Protocol）地址解析协议</p><blockquote><p>解决同一个局域网上的主机或路由器的IP地址和硬件地址的映射问题</p></blockquote><p>   <strong>RARP</strong>（Reverse Address Resolution Protocol）逆地址解析协议</p><blockquote><p>允许局域网的物理机器从网关服务器的ARP表或者缓存上请求其IP地址</p></blockquote><p>   <strong>IP</strong> （Internet Protocol）<strong>网际协议</strong></p><p>   <strong>MAC</strong>（Message Authentication Code）报文鉴别码</p><p>   <strong>ICMP</strong> （Internet Control Message Protocol）网际<strong>控制</strong>报文协议</p><p>   <strong>PING</strong> （Packet InterNet Groper）</p><blockquote><p>分组网间探测，乒程序，ICMP的一种应用</p></blockquote><p>   <strong>IGMP</strong>（Internet Group Management Protocol）网际<strong>组管理</strong>协议</p><p>   <strong>CIDR</strong>（Classless InterDomain Routing）无分类域间路由选择</p><p>   <strong>AS</strong>（Autonomous System）自治系统</p><p>   <strong>NAT</strong> （Network Address Translation）网络地址转换</p><h3 id="5-运输层"><a href="#5-运输层" class="headerlink" title="5. 运输层"></a>5. 运输层</h3><p>   <strong>UDP</strong> （User Datagram Protocol）用户数据报协议</p><p>   <strong>TCP</strong> （Transmission Control Protocol）传输控制协议</p><p>   <strong>ARQ</strong>（Automatic Repeat reQuest）自动重传请求</p><p>   <strong>MF</strong>（More Fragment）还有分片</p><h3 id="6-应用层"><a href="#6-应用层" class="headerlink" title="6. 应用层"></a>6. 应用层</h3><p>   **DNS(53)**（Domain Name System）域名系统</p><blockquote><p>用于域名和IP地址相互映射的一个分布式数据库</p><p>能够使用户更方便的访问互联网，不用去记能够被机器直接读取的IP地址</p></blockquote><p>   <strong>FTP(21)</strong> （File Transfer Protocol）文件传送协议</p><p>   <strong>TFTP(69)</strong> （Trivial File Transfer Protocol）简单文件传送协议</p><p>   <strong>TELNET(23)</strong> （TELetype NETwork）</p><blockquote><p>电传机网络，一种互联网的应用程序 </p></blockquote><p>   <strong>WWW</strong> （World Wide Web）万维网</p><blockquote><p>一个由许多互相链接的超文本组成的系统</p><p>分为WEB客户端和WEB服务器程序</p></blockquote><p>   <strong>URL</strong> （Uniform Resource Locator）统一资源定位符</p><blockquote><p>互联网上资源的位置和访问方法的一种简洁的表示</p><p>基本URL包含协议、IP地址、路径、文件名</p></blockquote><p>   <strong>HTTP(80)</strong> 超文本传输协议</p><blockquote><p>WWW可以让Web客户端（浏览器）访问浏览Web服务器上的页面</p><p>这些资源通过HTTP传送给用户，而后者通过点击链接来获得资源</p></blockquote><p>   <strong>HTTPS(443)</strong> （HyperText Transfer Protocol）超文本传送协议</p><p>   <strong>HTML</strong>（HyperText Markup Language）超文本标记语言</p><p>   <strong>SMTP(25)</strong> （Simple Mail Transfer Protocol）简单邮件传送协议</p><p>   <strong>POP3</strong> （Post Office Protocol）邮局协议 </p><p>   <strong>IMAP</strong> （Internet Message Access Protocol）网际报文存取协议</p><p>   <strong>MIME</strong>（Multipurpose Internet Mail Extensions）通用互联网邮件扩充 </p><p>   <strong>SNMP(161)</strong> （Simple Network Management Protocol）简单网络管理协议 </p><p>   <strong>SMI</strong> （Structure of Management Information）管理信息结构</p><p>   <strong>MIB</strong>（Management Information Base）管理信息库</p><p>   <strong>P2P</strong> （Peer-to-Peer）对等方式</p><p>   <strong>DHCP</strong>（Dynamic Host Configuration Protocol）动态主机配置协议</p><h3 id="7-无线网络、移动网络"><a href="#7-无线网络、移动网络" class="headerlink" title="7. 无线网络、移动网络"></a>7. 无线网络、移动网络</h3><p>   <strong>WLAN</strong> （Wireless Local Area Network）无线局域网</p><blockquote><p>利用射频的技术，使用电磁波，取代旧式双绞铜线所构成的局域网络，在空中进行自由连接。</p></blockquote><p>   <strong>WPAN</strong> （Wireless Personal Area Network）无线个人区域网</p><p>   <strong>WMAN</strong> （Wireless Metropolitan Area Network）无线城域网</p><p>   <strong>CSMA/CA</strong>（Carrier Sense Multiple Access/Collision Avoidance）<strong>载波监听多点接入/冲突避免</strong></p><h3 id="8-网络安全"><a href="#8-网络安全" class="headerlink" title="8. 网络安全"></a>8. 网络安全</h3><p>   <strong>VPN</strong> （Virtual Private Network）虚拟专用网</p><h3 id="9-其他"><a href="#9-其他" class="headerlink" title="9. 其他"></a>9. 其他</h3><p>   <strong>ACK</strong> （ACKnowledgement）确认</p><p>   <strong>ADSL</strong> （Asymmetric Digital Subscriber Line）非对称数字用户线</p><h2 id="第一章-概述"><a href="#第一章-概述" class="headerlink" title="第一章 概述"></a>第一章 概述</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"># 重点边缘部分、核心部分作用分组交换概念性能指标分层次的体系结构协议、服务概念<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.1</p><p>三网融合：<strong>电信网络、有线电视网络、计算机网络</strong></p><p>Internet是<strong>由数量极大的各种计算机网络互连起来的</strong> </p><p>互联网具有两个重要基本特点：连通性和共享性</p><p>1.2</p><p><strong>计算机网络</strong>（简称为<strong>网络</strong>）由若干<strong>结点</strong>和连接这些结点的<strong>链路</strong>组成。</p><p>发展三阶段：</p><p>第一阶段是从<strong>单个网络ARPANET</strong>向互连网发展的过程。</p><p>第二阶段的特点是建成了<strong>三级结构的互联网</strong>（主干、地区、校园网）。</p><p>第三阶段的特点是逐渐形成了<strong>多层次ISP结构的互联网</strong>。</p><blockquote><p><strong>互联网服务提供者</strong> ISP（Internet Service Provider）</p><p>在许多情况下，ISP就是一个进行商业活动的公司，因此ISP又常译为<strong>互联网服务提供商</strong> 。例如，中国电信、中国联通和中国移动等公司都是我国最有名的ISP。</p></blockquote><p>互联网交换点IXP的主要作用就是允许两个网络直接相连并交换分组，而不需要再通过第三个网络来转发分组。</p><ul><li><p>互联网现在采用<strong>存储转发</strong>的<strong>分组交换技术</strong>，以及三层ISP结构。</p></li><li><p>互联网按工作方式可划分为<strong>边缘部分与核心部分</strong>。</p><p>边缘部分：由<strong>所有连接在互联网上的主机</strong>组成 这部分是<strong>用户直接使用</strong>的，用来进行通信和资源共享</p><p>核心部分：由<strong>大量网络和连接这些网络的路由器</strong>组成 这部分是<strong>为边缘部分提供服务</strong>的（提供连通性和交换）</p></li><li><p>主机在网络的边缘部分，其作用是进行<strong>信息处理</strong>。</p></li><li><p>路由器在网络的核心部分，其作用是按存储转发方式进行<strong>分组交换</strong>。</p></li><li><p>计算机通信是计算机中的<strong>进程</strong>（即运行着的程序）之间的通信</p></li><li><p>计算机网络采用的通信方式是<strong>客户–服务器方式（C/S）</strong>和<strong>对等连接方式（P2P）</strong></p></li><li><p>计算机网络最常用的性能指标是：速率、带宽、吞吐量、时延（发送时延、传播时延、处理时延、排队时延）、时延带宽积、往返时间和信道（或网络）利用率</p></li><li><p>网络协议即<strong>协议</strong>，是<strong>为进行网络中的数据交换而建立的规则</strong>。</p></li><li><p>计算机网络的<strong>各层及其协议的集合</strong>，称为<strong>网络的体系结构</strong>。</p></li></ul><p>internet（互连网）泛指由多个计算机网络互连而成的计算机网络。<br>Internet 指当前全球最大的、开放的、由众多网络相互连接而成的特定互联网，它采用TCP/IP协议作为通信的规则，且前身是美国的ARPANET。</p><p>电路交换</p><blockquote><p>建立连接——通话——释放连接</p><p>(两个用户在连接期间始终占用端到端的通信资源)</p><p>(连接指专用的物理通道)</p></blockquote><p>分组交换 <strong>存储转发技术</strong></p><blockquote><p>存储转发，将报文（要发送的整块数据）划分为几个分组，利用相关控制信息进行分装为数据单元 ，然后进行转发。</p></blockquote><p>性能指标</p><p><strong>速率</strong>：数据率</p><p><strong>带宽</strong>：单位时间内信道能通过的最高数据率</p><p><strong>吞吐量</strong>：单位时间内通过某网络（信道或者接口）的实际数据量</p><p><strong>时延:</strong></p><p><strong>发送时延</strong>：发送端发送一个完整的数据帧所需要的时延</p><p>发送时延 = 数据帧长度（bit）/发送速率（bit/s）（最好的情况下为带宽）</p><p><strong>传播时延</strong>：电磁波在信道中传播所需要的时间</p><p>传播时延 = 信道长度（m）/电信波在信道上的传播速率（m/s）</p><p>处理时延：主机或路由器处理数据分组时花费的时间</p><p>排队时延：在路由器中等待分组时间</p><p>分层体系结构</p><p>协议：控制两个对等实体（或多个实体）进行通信的规则的集合</p><p>网络协议三要素：</p><ul><li>语法：即数据与控制信息的结构和格式</li><li>语义：即需要发出何种控制信息，完成何种动作以及做出何种响应</li><li>同步：即事件实现顺序的详细说明</li></ul><p>服务</p><h2 id="第二章-物理层"><a href="#第二章-物理层" class="headerlink" title="第二章 物理层"></a>第二章 物理层</h2><p>主要任务：确定与传输媒体的接口有关的一些特性</p><ul><li>机械特性</li><li>电气特性</li><li>功能特性</li><li>过程特性</li></ul><p>一个数据通信系统可划分为三大部分，即源系统、传输系统和目的系统。</p><p>根据双方信息交互的方式，通信可以划分为单工通信、半双工通信和全双工通信）</p><p>传输媒体可分为两大类，即导引型传输媒体（双绞线、同轴电缆或光纤）和非导引型传输媒体（无线或红外或大气激光）</p><p>常用信道复用技术</p><ul><li>频分复用</li><li>码分复用</li><li>时分复用</li><li>统计时分复用</li><li>波分复用</li></ul><p>宽带接入技术</p><ul><li>ADSL技术 非对称数字用户线</li><li>FTTX技术</li></ul><h2 id="第三章-数据链路层"><a href="#第三章-数据链路层" class="headerlink" title="第三章 数据链路层"></a>第三章 数据链路层</h2><p>数据链路层使用的信道主要有点对点信道和广播信道两种</p><p>数据链路层传送的协议数据单元是帧。</p><p>数据链路层的三个基本问题是：封装成帧、透明传输和差错检测。</p><p>循环冗余检验CRC是一种检错方法，而帧检验序列FCS是添加在数据后面的冗余码。</p><p>点对点协议PPP是数据链路层使用最多的一种协议，它的特点是：简单；只检测差错，而不是纠正差错；不使用序号，也不进行流量控制；可同时支持多种网络层协议</p><p>计算机与外界局域网的通信要通过通信适配器（或网络适配器），它又称为网络接口卡或网卡。计算机的硬件地址就在适配器的ROM中。</p><p>以太网采用的协议是具有冲突检测的载波监听多点接入CSMA/CD。</p><p>协议的要点是：<strong>发送前先监听，边发送边监听，一旦发现总线上出现了碰撞，就立即停止发送。然后按照退避算法等待一段随机时间后再次发送。</strong>因此，每一个站在自己发送数据之后的一小段时间内，存在着遭遇碰撞的可能性。以太网上各站点都平等地争用以太网信道。</p><p>以太网的硬件地址，即MAC地址实际上就是适配器地址或适配器标识符，与主机所在的地点无关。源地址和目的地址都是48位长。</p><p>点对点信道 PPP协议 一对一的点对点通信方式 </p><p>广播信道 CSMA/CD协议一对多的广播通信方式 协议数据单元：IP数据报（数据报、分组、包）</p><p>三个基本问题</p><ul><li>封装成帧 添加首部和尾部 最大传送单元MTU</li><li>透明传输 </li><li>差错检测 循环冗余检验</li></ul><p>以太网MAC层的硬件地址</p><p>物理地址 MAC地址 适配器唯一编号</p><p>总共64位</p><p><strong>CSMA/CD协议</strong></p><ul><li><strong>多点接入</strong> 总线网络</li><li><strong>载波监听</strong> 不断检测信道是否占用</li><li><strong>碰撞检测</strong> 边发送边监听</li></ul><h2 id="第四章-网络层"><a href="#第四章-网络层" class="headerlink" title="第四章 网络层"></a>第四章 网络层</h2><p>TCP/IP体系中的网络层向上只提供简单灵活的、无连接的、尽最大努力交付的数据报服务。</p><p>网络层不提供服务质量的承诺，不保证分组交付的时限，所传送的分组可能出错、丢失、重复和失序。</p><p>进程之间通信的可靠性由运输层负责。</p><p>IP数据报分为首部和数据两部分。首部的前一部分是固定长度，共20字节，是所有IP数据报必须具有的（源地址、目的地址、总长度等重要字段都在固定首部中）。一些长度可变的可选字段放在固定首部的后面。</p><p>IP首部中的生存时间字段给出了IP数据报在互联网中所能经过的最大路由器数，可防止IP数据报在互联网中无限制地兜圈子。</p><p>地址解析协议ARP把IP地址解析为硬件地址，它解决同一个局域网上的主机或路由器的IP地址和硬件地址的映射问题。ARP的高速缓存可以大大减少网络上的通信量。</p><p>在互联网中，我们无法仅根据硬件地址寻找到在某个网络上的某台主机。因此，从IP地址到硬件地址的解析是非常必要的。</p><p>无分类域间路由选择CIDR是解决目前IP地址紧缺的一个好方法。CIDR记法把IP地址后面加上斜线“/”，然后写上前缀所占的位数。前缀（或网络前缀）用来指明网络，前缀后面的部分是后缀，用来指明主机。CIDR把前缀都相同的连续的IP地址组成一个“CIDR地址块”。IP地址的分配都以CIDR地址块为单位。</p><p>路由聚合（把许多前缀相同的地址用一个来代替）有利于减少路由表中的项目，减少路由器之间的路由选择信息的交换，从而提高了整个互联网的性能。</p><p>路由选择协议有两大类：内部网关协议（或自治系统内部的路由选择协议），如RIP和OSPF；外部网关协议（或自治系统之间的路由选择协议），如BGP-4。</p><p>RIP是分布式的基于距离向量的路由选择协议，只适用于小型互联网。RIP按固定的时间间隔与相邻路由器交换信息。交换的信息是自己当前的路由表，即到达本自治系统中所有网络的（最短）距离，以及到每个网络应经过的下一跳路由器。</p><p>OSPF是分布式的链路状态协议，适用于大型互联网。OSPF只在链路状态发生变化时，才向本自治系统中的所有路由器，用洪泛法发送与本路由器相邻的所有路由器的链路状态信息。“链路状态”指明本路由器都和哪些路由器相邻，以及该链路的“度量”。“度量”可表示费用、距离、时延、带宽等，可统称为“代价”。所有的路由器最终都能建立一个全网的拓扑结构图。</p><p>ICMP报文的种类有两种，即ICMP差错报告报文和ICMP询问报文</p><p>ICMP的一个重要应用就是分组网间探测PING，用来测试两台主机之间的连通性。PING使用了ICMP回送请求与回送回答报文。</p><p>使用网络地址转换NAT技术，可以在专用网络内部使用专用IP地址，而仅在连接到互联网的路由器使用全球IP地址。这样就大大节约了宝贵的IP地址。</p><p>负责分组交换网上的不同主机提供通信服务</p><p>虚拟互联网</p><ul><li>逻辑互联网络</li><li>物理层使用的中间设备：转发器（集线器）</li><li>数据链路层使用的中间设备：<strong>网桥（交换机）</strong></li><li>网络层使用的中间设备：路由器</li><li>网络层以上使用的中间设备：网关</li></ul><p>IP地址与物理地址的关系</p><ul><li><p>硬件地址时物理层和数据链路层使用的地址</p></li><li><p>IP地址是IP数据报在网络层及以上各层使用的一种逻辑地址</p></li></ul><p>传统分类的IP地址（包括子网掩码）</p><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221026134545897.png" alt="image-20221026134545897"></p><ul><li>IP地址概念：用来唯一标识全球连接在互联网上的主机的接口的标识符</li></ul><p>无分类域间路由选择CIDP</p><p>路由选择协议的工作方式</p><ul><li><p><strong>内部网关协议IGP：</strong>在自治系统<strong>内部</strong>使用的路由选择协议，<strong>域间路由选择</strong>，有多种，如RIP，OSPF</p></li><li><p>RIP 是一种<strong>分布式</strong>的基于<strong>距离向量</strong>的路由选择协议</p><p><strong>特点：好消息传播的快。坏消息传播的慢</strong></p></li><li></li><li><p><strong>外部网关协议EGP：</strong>在自治系统<strong>之间</strong>使用的路由选择协议，<strong>域内路由选择，</strong>目前使用的是BGP协议</p></li></ul><p>网络层提供的两种服务</p><ul><li>面向连接的虚电路服务</li><li>无连接的数据报服务</li></ul><p>网际协议IP</p><p>三个协议</p><ul><li><p>地址解析协议 ARP</p></li><li><p>网际报文管理协议 ICMP</p><p>ICMP数据报有两种：<strong>ICMP差错报告报文</strong>和<strong>ICMP询问报文</strong></p></li><li><p>网际组织管理协议 IGMP</p></li></ul><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221026120904056.png" alt="image-20221026120904056" style="zoom:50%;"><p>三网合一：计算机网络、电信网络、有线电视网络</p><p>计算机网络的端设备是计算机</p><p>计算机网络功能：连通性、共享性</p><p>网络由若干<strong>节点</strong>和连接这些节点的<strong>链路</strong>组成（节点可以是计算机，集线器，交换机，路由器等）</p><p>网络和网络之间通过<strong>路由器</strong>连接起来，构成了<strong>互连网</strong>——即网络的网络</p><h2 id="第五章-运输层"><a href="#第五章-运输层" class="headerlink" title="第五章 运输层"></a>第五章 运输层</h2><p>运输层提供应用进程间的逻辑通信</p><p>网络层为主机之间提供逻辑通信，而运输层为应用进程之间提供端到端的逻辑通信。</p><p>UDP的主要特点是：（1）无连接；（2）尽最大努力交付；（3）面向报文；（4）无拥塞控制；（5）支持一对一、一对多、多对一和多对多的交互通信；（6）首部开销小（只有四个字段：源端口、目的端口、长度、检验和）。</p><p>TCP的主要特点是：（1）面向连接；（2）每一条TCP连接只能是点对点的（一对一）；（3）提供可靠交付的服务；（4）提供全双工通信；（5）面向字节流。</p><p>停止等待协议能够在不可靠的传输网络上实现可靠的通信。每发送完一个分组就停止发送，等待对方的确认。在收到确认后再发送下一个分组。分组需要进行编号。</p><p>超时重传是指只要超过了一段时间仍然没有收到确认，就重传前面发送过的分组（认为刚才发送的分组丢失了）。因此每发送完一个分组需要设置一个超时计时器，其重传时间应比数据在分组传输的平均往返时间更长一些。这种自动重传方式常称为自动重传请求ARQ。</p><p>流量控制是一个端到端的问题，是接收端抑制发送端发送数据的速率，以便使接收端来得及接收。</p><p>拥塞控制是一个全局性的过程，涉及到所有的主机、所有的路由器，以及与降低网络传输性能有关的所有因素。</p><p>TCP的拥塞控制采用了四种算法，即慢开始、拥塞避免、快重传和快恢复。</p><p>运输连接有三个阶段，即：连接建立、数据传送和连接释放</p><p>TCP的连接建立采用三报文握手机制。服务器要确认客户的连接请求，然后客户要对服务器的确认进行确认。</p><p>两台主机进行通信就是两台主机中的应用进程互相通信</p><p>运输层的作用</p><ul><li>解决进程间的通信问题</li></ul><p>端口和套接字的意义</p><ul><li>端口指软件端口 是应用层的各种协议进程与运输实体进行层间交互的一种地址</li><li>运输层用16位端口号来标志一个端口,一个主机总共有65535个端口</li></ul><p>无连接的UDP的特点 </p><ul><li>用户数据报协议UDP</li><li>无连接</li><li>尽最大努力交付</li><li>面向报文</li><li>没用拥塞控制</li><li>支持一对一、一对多、多对一、多对多的交互通信</li><li>首部开销小</li></ul><p>面向连接的TCP的特点 </p><ul><li>传输控制协议TCP</li><li>点对点连接</li><li>可靠交付</li><li>提供全双工通信</li><li>面向字节流</li></ul><p>可靠传输的原理</p><ol><li>停止等待协议</li></ol><p>分组发送之后必须暂时保留该分组的副本</p><p>每个分组进行编号</p><p>发送确认</p><p>超时重传</p><p>TCP的滑动窗口、流量控制、拥塞控制和连接管理</p><p>发送窗口：发送窗口内的数据的可连续的发送出去，而不需要等待对方的确认（从而提高信道利用率）</p><p>滑动窗口：发送方每收到一个接受确认，就将发送窗口的向前滑动一个字节的位置；</p><p>TCP的拥塞控制算法有四种：慢开始、拥塞避免、快重传、快恢复</p><h2 id="第六章-应用层"><a href="#第六章-应用层" class="headerlink" title="第六章 应用层"></a>第六章 应用层</h2><p>应用层的许多协议都是基于客户服务器方式的</p><p>DNS是一个联机分布式数据库系统，并采用客户服务器方式。</p><p>文件传送协议FTP使用TCP可靠的运输服务。FTP使用客户服务器方式。一个FTP服务器进程可同时为多个客户进程提供服务。在进行文件传输时，FTP的客户和服务器之间要建立两个并行的TCP连接：控制连接和数据连接。实际用于传输文件的是数据连接。</p><p>在万维网中用来进行搜索的工具叫做搜索引擎。搜索引擎大体上可划分为全文检索搜索引擎和分类目录搜索引擎两大类。</p><p>域名系统DNS</p><p>文件传送协议 FTP 基于TCP 属于文件共享协议 联机访问</p><p>简单文件传送协议 TFTP 基于UDP 只支持传输不支持交互</p><p>远程终端协议 TELNET</p><p>万维网 WWW</p><p>万维网的信息检索</p><ul><li>全文检索</li><li>分类目录检索</li></ul><h2 id="第七章-网络安全"><a href="#第七章-网络安全" class="headerlink" title="第七章 网络安全"></a>第七章 网络安全</h2><h2 id="第八章-互联网上的音视频服务"><a href="#第八章-互联网上的音视频服务" class="headerlink" title="第八章 互联网上的音视频服务"></a>第八章 互联网上的音视频服务</h2><h2 id="第九章-无线网络和移动网络"><a href="#第九章-无线网络和移动网络" class="headerlink" title="第九章 无线网络和移动网络"></a>第九章 无线网络和移动网络</h2><ul><li>无线局域网可分为两大类。第一类是有固定基础设施的，第二类是无固定基础设施的。</li><li>无线局域网的标准是IEEE的802.11系列。使用802.11系列协议的局域网又称为Wi-Fi。</li><li>802.11无线以太网在MAC层使用CSMA/CA协议。不能使用CSMA/CD的原因是：在无线局域网中，并非所有的站点都能够听见对方（例如，当有障碍物出现在站点之间时），因此无法实现碰撞检测。使用CSMA/CA协议是为了尽量减小碰撞发生的概率。</li></ul><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><ol><li><p>协议</p><p>通信双方为进行网络中的数据交换而建立的规则、标准或约定称为网络协议</p><p>网络协议主要由以下三个要素组成：</p><p>(1) 语法，即数据与控制 信息的结构或格式； </p><p>(2) 语义，即需要发出何种控制信息，完成何种动作以及做出何种响应； </p><p>(3) 同步，即事件实现顺序的详细说明</p></li><li><p>CSMA/CD</p><p>CSMA/CD 意思是<strong>载波监听多点接入/碰撞检测</strong></p><p><strong>“多点接入”</strong>就是说明这是<strong>总线型网络</strong>，许多计算机以多点接入的方式连接在一根总线上，</p><p><strong>“载波监听”</strong>就是<strong>检测信道</strong>，不管在发送前，还是在发送中，每个站都必须不停地检测信道。 在发送前检测信道，是为了获得发送权，在发送中检测信道，是为了及时发现有没有其他站 的发送和本站发送的碰撞。这就称为碰撞检测。 </p><p><strong>“碰撞检测”</strong>也就是“<strong>边发送边监听</strong>”，即适配器边发送数据边检测信道上的信号电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。</p><p>任何一个正在发送数据的站，一旦发现总线上出现了碰撞，其适配器就要立即停止发送，免 得继续进行无效的发送，白白浪费网络资源，然后等待一段随机时间后再次发送。</p></li><li><p>RIP 分布式的基于距离向量的路由选择协议</p></li><li><p>请简述 RIP 的三要点。</p><p>（1）仅和<strong>相邻路由器</strong>交换信息。  </p><p>（2）交换的信息是当前本路由器所知道的<strong>全部信息</strong>，即自己的路由表。 </p><p>（3）按<strong>固定的时间间隔</strong>(如每隔 30s)交换路由信息。</p></li><li><p>请简述 ARP 的四种典型情况。</p><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221026165924461.png" alt="image-20221026165924461"></p></li><li><p>请简述 OSPF 的三要点</p><p>（1）向本自治系统中所有路由器发送信息，使用<strong>洪泛法</strong>。  </p><p>（2）发送的信息就是与本路由器<strong>相邻的所有路由器的链路状态</strong>，但这只是路由器所知道的<strong>部分信息</strong>。  </p><p>（3）只有当链路状态<strong>发生变化时</strong>，路由器才用洪泛法向所有路由器发送此信息</p></li></ol><h2 id="典型例题"><a href="#典型例题" class="headerlink" title="典型例题"></a>典型例题</h2><ul><li><img src="http://image.kmoon.fun//images/202210301951286.png" alt="image-20221030195124150"></li></ul><p><img src="http://image.kmoon.fun//images/202210301954221.png" alt="image-20221030195413162"></p><p><img src="http://image.kmoon.fun//images/202210301959680.png" alt="image-20221030195930573"></p><p><img src="http://image.kmoon.fun//images/202210301959941.png" alt="image-20221030195958825"></p><p><img src="http://image.kmoon.fun//images/202210302000581.png" alt="image-20221030200016529"></p><ul><li><p><img src="http://image.kmoon.fun//images/202210302006612.png" alt="image-20221030200618498"></p></li><li><p><img src="http://image.kmoon.fun//images/202210302007261.png" alt="image-20221030200708190"></p></li></ul><p><img src="http://image.kmoon.fun//images/202210302008884.png" alt="image-20221030200816798"></p><ul><li><img src="http://image.kmoon.fun//images/202210302012280.png" alt="image-20221030201204199"></li><li><img src="http://image.kmoon.fun//images/202210302013350.png" alt="image-20221030201330232"></li></ul><h2 id="刷题小记"><a href="#刷题小记" class="headerlink" title="刷题小记"></a>刷题小记</h2><ol><li><p><strong>MAC地址</strong> <strong>网卡</strong>地址 <strong>物理</strong>地址</p></li><li><p>总线的特点： CSMA/CD 载波监听多点接入/碰撞检测</p><p>①所有节点时刻检测总线信号</p><p>②<strong>广播</strong></p><p>③通过<strong>数据帧中的目的地址</strong>与<strong>适配器ROM中的硬件地址</strong>匹配实现<strong>一对一通信</strong></p><p>④<strong>同一时间只能允许一台</strong>计算机发送数据</p></li><li><p>驻留子网（所在子网）=子网掩码**&amp;&amp;**IP地址 按位相与</p></li><li><p><strong>网络层</strong> <strong>IP路由表</strong></p></li><li><p>相同<strong>网络地址</strong>的主机可以<strong>直接通信</strong>，不同需要通过<strong>路由转发</strong></p></li><li><p>主机<strong>自动</strong>运行<strong>ARP请求</strong>，找出<strong>目的主机的MAC地址</strong></p></li><li><p>RIP属于<strong>距离向量型</strong>路由协议，OSPF属于<strong>链路状态型</strong>路由协议</p></li><li><p>RIP和OSPF属于<strong>动态</strong>路由</p></li><li><p><strong>IGP</strong>（<strong>内部网关协议</strong>）的作用范围是<strong>自治系统</strong> AS</p></li><li><p>对IP数据包分片的<strong>重组</strong>通常发生在目的主机上</p></li><li><p><strong>无线局域网</strong>WLAN标准：<strong>IEEE 802.11</strong></p></li><li><p>web服务器，<strong>创建发布</strong>网站，不对网站做<strong>编辑</strong>。</p></li><li><p><strong>多路复用</strong>技术：<strong>码分、波分、频分、时分</strong>多路复用</p></li><li><p><strong>TCP可靠传输</strong>的实现依赖于<strong>确认机制、重传机制</strong></p></li><li><p><strong>SNMP</strong>由<strong>①SNMP本身、②管理信息结构SMI和③管理信息库MIB</strong>组成</p></li><li><p>光缆的<strong>光纤</strong>通常是<strong>偶数个，一进一出</strong></p></li><li><p><strong>三层交换机</strong> 基于<strong>IP地址</strong>的<strong>路由转发</strong></p></li><li><p><strong>默认路由</strong>是在路由表中没有找到明确的目的网络时所选择的路由</p></li><li><p><strong>无线局域网</strong>的<strong>MAC层协议</strong>为<strong>CSMA/CA协议</strong> 载波监听多点接入/<strong>冲突避免</strong></p></li><li><p>从逻辑功能上计算机网络可分为<strong>资源子网和通信子网</strong></p></li><li><p>基本的带通调制方法有<strong>调幅、调频、调相</strong></p></li><li><p>IPv6的地址长度是<strong>128位</strong>二进制位</p></li><li><p>物理层描述的<strong>媒体接口特性</strong>：机械特性、电气特性、功能特性、规程特性</p></li><li><p><strong>OSI七层模型</strong>：物理层-数据链路层-物理层-运输层-<strong>会话层</strong>-<strong>表示层</strong>-应用层</p></li><li><p>物理层的主要协议：PPPoE、ATM</p></li><li><p>网络层的主要协议：<strong>IP、ICMP、ARP、</strong>RARP、IGMP</p></li><li><p><strong>电路交换</strong>时延=<strong>连接</strong>时延+<strong>发送</strong>时延（报文长度/数据率）+总<strong>传播</strong>时延（链路数*每段链路的传播时延）</p></li><li><p><strong>分组交换</strong>时延=总<strong>传播</strong>时延（链路数*每段链路的传播时延）+<strong>发送</strong>时延（分组数*每个分组的发送时延）+<strong>转发</strong>时延（k-1个节点的发送时延）</p></li><li><p><strong>循环冗余校验CRC</strong>原理：数据/多项式-&gt;余数，作为校验序列FCS</p></li><li><p>最大传送单元<strong>MTU</strong></p></li><li><p>数据报总长度=<strong>首部长度</strong>+<strong>数据部分</strong>长度</p></li><li><p>最常用的首部长度是<strong>20字节</strong>，不使用任何可选字段</p></li><li><p><strong>片偏移</strong>：较长的分组在分片后某片在原分组中的<strong>相对位置</strong>，片偏移以8个字节为偏移单位</p></li><li><p>标志字段的最低位是<strong>MF</strong>，MF=1 表示后面“还有分片”，MF=0 表示最后一个分片</p></li><li><p>光纤：带宽最大、传输信号衰减最小、抗干扰能力最强</p></li><li><p><strong>二层</strong>交换机（以太网交换机）工作在<strong>数据链路层</strong></p></li><li><p><strong>量化</strong>就是取得码元种类数，将不同的电平进行分布</p></li><li><p>RIP协议中最佳路径的衡量标准是<strong>路由跳数</strong></p></li><li><p>域名解析客户机必须知道互联网上<strong>任意</strong>一台域名服务器的<strong>IP地址</strong></p></li><li><p>UDP支持<strong>一对多、多对一、多对多</strong>的交互通信</p></li><li><p><strong>CIDR技术</strong>：<strong>路由聚合</strong> 把小的网络汇聚成大的超网</p></li><li><p>无线<strong>城域网</strong>标准：802.16</p></li><li><p>计算机网络最本质的活动是分布在不同地理位置的主机之间的<strong>进程通信</strong></p></li><li><p>VPN技术：隧道技术+加密技术+身份认证技术</p></li><li><p><strong>无线传输介质</strong>：无线电波、微波、红外线、激光</p></li><li><p><strong>网络拓扑结构</strong>：<strong>总线型、星型</strong>、环型、树型</p></li><li><p>保留IP地址：10、127、172、192</p></li><li><p>OSPF根据<strong>链路状态</strong>选择最佳路径、RIP根据<strong>距离向量</strong>选择最佳路径</p></li><li><p>网络连接设备：<strong>集线器、中继器、交换机、路由器</strong></p></li><li><p>网络层向上提供的服务：①面向<strong>连接</strong>的<strong>虚电路</strong>服务②<strong>无连接</strong>的<strong>数据报</strong>服务</p></li><li><p>RIP路由协议的工作原理</p><p>RIP是一种<strong>分布式</strong>的<strong>基于距离向量</strong>的<strong>动态路由选择协议</strong>。</p><p>RIP将“距离”定义为从源主机到目的主机所经过的路由器数量，也称为“<strong>跳数</strong>”。RIP认为好的路由就是<strong>跳数最少</strong>的路由。RIP允许一条路由<strong>最多</strong>包含<strong>15</strong>个路由器。</p><p>RIP仅和<strong>相邻</strong>路由器交换信息；路由器交换的信息是当前路由器所知道的全部信息，即自己的<strong>路由表</strong>；RIP通常每隔30秒交换一次路由信息。</p></li><li><p><strong>网络协议</strong>的组成三要素：<strong>语法、语义、同步</strong></p><p>（1）语法，即数据与控制信息的结构或格式； </p><p>（2）语义，即需要发出何种控制信息，完成何种动作以及做出何种响应；</p><p>（3）同步，即事件顺序的详细说明</p></li><li><p>调制解调器传输单位为比特 一个字节8个比特</p></li><li><p>循环冗余校验CRC</p><p>多项式G确定除数P</p><p>信息位<strong>尾部补0</strong>增加n位冗余码（n等于G最高次）</p><p>模2运算求解冗余多项式R（x）</p><p>确定冗余位位数（补齐0位）</p></li><li><p>数据链路层规定一个数据帧中的数据字段的最大长度（MTU最大传送单元） 也就是IP数据报的最大长度，IP数据报又分为首部＋数据长度</p></li><li><p>第一次对<strong>路由器</strong>进行配置应该通过<strong>console端口</strong>配置</p></li><li><p>同步<strong>SYN</strong>：在<strong>建立连接</strong>时用来同步序号，SYN<strong>置1</strong>就表示这是一个连接请求或连接接受报文</p></li><li><p><strong>协议</strong>是<strong>水平</strong>的，<strong>服务</strong>是<strong>垂直</strong>的</p></li><li><p><strong>无线</strong>局域网使用CSMA/ <strong>CA</strong>（冲突避免）协议 <strong>有线</strong>连接的局域网使用CSMA/ <strong>CD</strong>（碰撞检测）协议</p></li><li><p>地址解析协议ARP 是由主机<strong>自动</strong>建立的、ARP表是<strong>动态</strong>的、保存主机IP地址和MAC地址的<strong>映射</strong>关系</p></li><li><p><strong>网络层</strong>的<strong>路由器</strong>实现<strong>路由选择和转发分组</strong></p></li><li><p>10BASE-T规定从网卡到集线器的最大传输距离为<strong>100m</strong></p></li><li><p><strong>外部</strong>网关协议<strong>EGP</strong>在<strong>不同的自治系统</strong>使用的路由选择协议</p></li><li><p><strong>内部</strong>网关协议<strong>IGP</strong>在<strong>一个自治系统内部</strong>使用的路由选择协议</p></li><li><p><strong>网络体系结构</strong>：计算机网络<strong>各层次结构模型及其协议的集合</strong></p></li><li><p>以<strong>集线器</strong>为核心构建的网络拓扑结构：<strong>星型</strong></p></li><li><p>同步传输中的同步是指<strong>时钟同步</strong></p></li><li><p>服务器不是网络连接设备</p></li><li><p>IPv4-&gt;IPv6技术栈：双协议栈、隧道技术、网络地址转换NAT</p></li><li><p>波分复用主要用于光纤通信</p></li><li><p>域名 主机名www</p></li><li><p>数据链路层差错控制的两种基本编码方法：检错码和纠错码</p></li><li><p>IPv6采用<strong>冒号十六进制</strong>法</p></li><li><p>网络层中数据以<strong>分组</strong>为单位进行传输</p></li><li><p>串行通信中，点对点协议PPP面向的是字符</p></li><li><p>通信子网向端系统提供<strong>虚电路和数据报</strong>两种网络服务</p></li><li><p><strong>子网掩码</strong>：判断两台主机是否在同一个子网</p></li><li><p><strong>运输层提供端到端的服务</strong></p></li><li><p><strong>表示层</strong>主要是负责<strong>数据格式</strong>的转换，压缩与解压缩，加密与解密</p></li><li><p><strong>会话层</strong>的主要功能是在两个节点间建立、维护和释放面向用户的<strong>连接</strong>，并对会话进行管理和控制，保证会话数据可靠传送。</p></li><li><p>地址转换NAT:解决了地址短缺 为内部主机提供隐私</p></li><li><p>数字信号编码：不归零码、曼彻斯特码、差分曼彻斯特码</p></li><li><p>简述局域网、城域网和广域网的主要特征</p></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">局域网：覆盖有限的地理范围，提供高数据传输率、低误码率的高质量数据传输环境。城域网：分布范围介于局域网和广域网之间，属于一种高速网络。广域网：分布范围可达数百甚至数千公里。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="14"><li>简述本地域名服务器进行域名解析的过程</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">当一个主机发出域名解析请求时，这个请求首先被送往默认的（本地）域名服务器。本地域名服务器通常距离用户较近，一般不超过几个路由的距离。当所要解析的域名属于同一个本地子域时，本地域名服务器就能立即解析到 IP 地址，并返回给发出请求的主机。否则就需要以客户端的身份向其他域名服务器发出域名解析请求。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="15"><li>简述IP协议的基本任务</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">IP协议的基本任务是通过互联网传送数据报。其特点包括：主机上的网络层（IP层）向运输层提供服务；IP从源传输实体取得数据，并传送给目的地址的IP层；IP从不保证服务的可靠性；IP将高层协议数据封装为数据报，并交给下一层。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="16"><li>简述<strong>三报文握手</strong>算法的工作原理</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">①发送方向接收方发送建立连接的请求报文②接收方向发送方回应一个对建立连接请求报文的确认报文③发送方再向接收方发送一个对确认报文的确认报文<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol><li>集线器工作在物理层</li><li>以太网的物理地址 48bit位</li><li>IP服务的主要特点：不可靠、无连接、尽最大努力投递</li><li>0.0.0.0代表默认路由</li><li>TCP首部的<strong>确认号</strong>指期望收到对方下一个报文段的第一个数据字节的序号</li><li>介绍交换机MAC地址学习的基本过程</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">交换机工作在数据链路层，该层基于 MAC 地址转发数据。交换机 MAC 地址转发数据依赖MAC 地址表，MAC 地址表的生成即 MAC 地址学习的过程。假定以太网交换机有 4 个接口，分别连接了主机 A、B、C、D。一开始，交换机中的 MAC地址表是空的。现在主机 A 向主机 B 发送数据帧，从接口 1 进入交换机。交换机收到数据帧后，先查找地址表，没有查到应从哪个接口转发数据帧。这时，交换机会把数据帧的源 MAC地址 A 和接口 1 写入到 MAC 地址表中，然后向除接口 1 以外的所有接口广播这个数据帧。主机 C 和 D 收到后会丢弃该帧，因为目的地址不对。主机 B 收下该帧，主机 B 回复数据帧给 A，交换机将主机 B 的 MAC 地址和连接的接口 2 写入到 MAC 地址表。随着数据帧的多次转发，交换机就逐渐建立了比较完整的 MAC 地址表。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="8"><li><p>以太网封装IP数据包的<strong>最大长度</strong>是<strong>1500</strong>字节</p></li><li><p><strong>UDP 首部最少8字节</strong>，<strong>TCP首部最少20字节</strong></p></li><li><p>路由表更新：距离向量算法</p></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">首先修改X发来的RIP报文，将其中的距离全部+1，下一跳全部修改为X，距离不变；然后依次和接收RIP报文的路由器对比，若目的地址没有，则加上；若有且下一跳相同，则替换；若有且下一跳不同，则选择距离短的更新，其他情况不变化。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>IEEE 802.3或Ethernet规定数据传输必须使用<strong>曼彻斯特</strong>编码进行</li><li><strong>数据链路层</strong>三大基本问题：<strong>封装成帧，透明传输，差错检测</strong></li><li>计算机网络：<strong>资源子网</strong>、<strong>通信子网</strong>（负责节点间通信）</li><li>Internet采用<strong>TCP/IP协议</strong> 前身是ARPANET</li><li>调制（模-&gt;数） 解调（数-&gt;模）</li><li>TCP滑动窗口单位：字节</li><li>中继器：延长通信距离</li><li>以太网<strong>数据帧最大长度</strong>：1518B</li><li>以太网的MAC层 数据链路层的子层</li><li>端口号：用于标识应用层的<strong>进程</strong></li><li>数字通信中，发送端和接受端必须以某种方式保持同步</li><li>简述网络协议的概念及其要素</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">网络协议概念：网络协议是为进行网络中的数据交换而建立的规则、标准或约定。网络协议三要素：语法，即数据与控制信息的结构或格式。语义，即需要发出何种控制信息，完成何种动作以及做出何种响应。时序，即事件实现顺序的详细说明。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="14"><li>简述IP地址与MAC地址的区别，为什么要使用这两种不同类型的地址？</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">物理地址是数据链路层和物理层使用的地址，IP地址是网络层及其以上各层使用的地址，是一种逻辑地址。由于全世界存在各式各样的网络，使用不同的硬件地址。要使这些异构网络能够互相通信，就必须进行非常复杂的硬件地址转换工作。由用户或用户主机来完成这项工作几乎是不可能的事。但统一的IP地址把这个复杂问题解决了。连接到 Internet的主机只需拥有统一的IP地址，它们之间的通信就像连接在同一个网络上那样简单方便。当需要把IP地址转换为物理地址时，使用ARP协议即可实现。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>组播地址：224~239</p><p>网络地址：主机号全0</p><p>广播地址：主机号全1</p><ol><li><p>硬件地址（MAC地址）是传输数据时在媒体接入控制层使用的地址</p></li><li><p>IP协议的核心问题是寻径</p></li><li><p>FTP <strong>控制连接、数据连接</strong></p></li><li><p>ping 接收<strong>ICMP</strong>数据包的大小和数量、超时时间、成功率、往返时间</p></li><li><p>网络层 路由器 网络间连接</p></li><li><p>MAC地址格式 6字节 <strong>48位</strong> </p></li><li><p>域名查询：<strong>迭代查询、递归查询</strong></p></li><li><p>发送方窗口=min（接收方窗口rwnd，发送方拥塞窗口cwnd）</p></li><li><p>解决 IPv4 地址空间耗尽：</p><p>①可变长子网掩码VLSM，将两级结构的 IP 地址变换为三级结构的 IP 地址。 </p><p>②无类域间路由CIDR，消除网络地址和主机地址的划分，改为网络前缀和网络后缀。 </p><p>③网络地址转换NAT，将 IP 地址划分为本地地址和全球地址两种类型，如果本地主机要 使用 Internet，可使用 NAT 技术将本地 IP 地址转换为全球 IP 地址。 </p><p>④IPv6技术，将 IP 地址从 32 位扩展到 128 位。</p></li><li><p>发送方的 UDP 对应于程序交下来的报文，在添加首部后就向下交付给网络层。UDP 对 应用层交下来的报文，既不合并也不拆分，而是保留这些报文的边界。也就是说，应用层交 给 UDP 多长的报文，UDP 就照样发送，即一次发送一个报文。接收方的 UDP 对网络层交上 来的 UDP 数据报，在去除首部后就原封不动地交付给应用层。也就是说 UDP 向上层一次交 付一个完整的报文。 </p></li><li><p>TCP 无论是发送还是接收报文，都将报文数据块视为无边界的字节流，按顺序一个字节 一个字节地发送或接收。</p></li><li><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221022125834874.png" alt="image-20221022125834874"></p><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221022125754645.png" alt="image-20221022125754645"></p></li><li><p>根据信号中<strong>参数的取值方式</strong>分为：<strong>数字信号、模拟信号</strong></p></li><li><p>计算机网络<strong>各层次结构模型及其协议的集合</strong>称为 <strong>网络体系结构</strong></p></li><li><p>应用层的许多协议(HTTP,FTP)都是基于<strong>C/S方式</strong>（客户/服务器）</p></li><li><p>计算机网络采用<strong>分组交换</strong>技术，传统的电话网络采用电路交换技术</p></li><li><p>IEEE802.3局域网标准中，设置MAC子层的主要目的之一是实现<strong>帧的寻址和识别</strong></p></li><li><p><strong>IP协议</strong>向运输层提供的是<strong>无连接的不可靠的</strong>服务</p></li><li><p>虚拟专用网<strong>VPN</strong>采用的类似点对点通信的安全技术是 <strong>隧道技术</strong></p></li><li><p>流量控制实际上是对<strong>发送方</strong>数据流量的控制</p></li><li><p>Internet的<strong>域名空间</strong>采用的是<strong>树型结构</strong></p></li><li><p>由用户群组成的不需要基站、无固定路由器的通信网络是 <strong>移动自组网络</strong></p></li><li><p>双绞线可以传输数字信号、模拟信号</p></li><li><p>端口号是16位的二进制数</p></li><li><p>简述物理层的特性</p><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221026150745412.png" alt="image-20221026150745412"></p></li><li><p>TCP采用了什么样的连接服务？简述建立TCP连接的过程</p><blockquote><p>TCP是<strong>运输层的协议</strong>，采用了<strong>面向连接的服务</strong>。</p><p>TCP的连接过程被称为<strong>三报文握手</strong>。具体过程如下：</p><p>T1时刻，发送端向接收端<strong>发送建立连接的请求</strong>，并将连接请求标志字段SYN置为1。 </p><p>T2时刻，接收端收到发送端的请求，<strong>向发送端响应</strong>，并将连接请求字段SYN置为1。 </p><p>T3时刻，发送端收到接收端的响应，<strong>再向接收端发送连接确认</strong>，通信两端的连接正式建立。</p></blockquote></li><li><p>简述拥塞控制和流量控制的差异</p><blockquote><p>拥塞控制的任务是确保子网能够承载所达到的流量，涉及各种可能会削弱子网承载容量 的因素。 </p><p>流量控制只与特定的发送方和接收方之间的点到点流量有关，目的是确保一个快速的发 送方不会持续地以超过接收方能力的速率发送数据</p></blockquote></li><li><p>匿名FTP：anonymous、用户的电子邮件地址</p></li><li><p>socket包括IP地址和端口号</p></li><li><p>URL 在 WWW 应用中的完整格式：http://[用户名:口令@]主机域名或 IP 地址[:端口号]/URL 路径</p></li><li><p>使用<strong>netstat</strong>命令可以显示网络状态</p></li><li><p>采用电路交换：总延迟=电路建立时间+报文发送时间+每段链路的传输延迟</p></li><li><p>采用分组交换：总延迟=报文发送时间+每个分组交换机转发分组的时间+每段链路的传输延迟</p></li><li><p><strong>TCP的拥塞控制</strong></p><ul><li>慢开始 cwnd倍数增加</li><li>拥塞避免 cwnd逐1递增</li><li>超时检测到丢失报文段 cwnd直接降为1</li><li>三个重复的确认检测到丢失报文段  cnvd除2</li><li>门限值ssthresh</li></ul></li><li><p>FTP协议中，用于<strong>实际传输文件</strong>的连接是<strong>数据连接</strong></p></li><li><p><strong>RIP 协议和 OSPF 协议</strong>分别使用<strong>UDP和IP</strong>协议进行传输</p></li><li><p>基于 SNMP 的网络管理中，充当<strong>服务器</strong>的是<strong>管理代理</strong></p></li><li><p>在 TCP/IP 网络中，每台主机都应该配置<strong>IP地址和子网掩码</strong></p></li><li><p>OSPF是基于<strong>链路状态</strong>的分布式路由选择协议，采用<strong>迪杰斯特拉算法</strong>计算路由</p></li><li><p>FTP客户和服务器之间在进行传输期间建立两个连接是<strong>控制连接和数据连接</strong></p></li><li><p>基于SNMP的网络管理包括<strong>管理进程、管理代理、管理协议(SNMP)、管理信息库MIB</strong>四个组成部分</p></li><li><p>流量控制策略的基本思想是通过<strong>接收端控制发送端</strong>来实现的</p></li><li><p>在ISO参考模型中通信子网包括<strong>物理层、数据链路层、网络层</strong>三层</p></li><li><p><strong>脉码调制</strong>的过程包括<strong>采样、量化、编码</strong>三个阶段</p></li><li><p>客户-服务器网络典型的工作方式为<strong>请求-响应</strong></p></li><li><p>终端和主计算机属于<strong>DTE</strong></p></li><li><p><strong>可靠</strong>的端-端通信服务在<strong>运输层</strong>提供</p></li><li><p>网关是运行在 ISO 参考模型高层的互连中继设备</p></li><li><p>TCP 协议的<strong>流量控制</strong>手段采用<strong>可变窗口大小的滑动窗口法</strong></p></li><li><p>FTP 客户和服务器之间传递的命令是在<strong>建立在 TCP 之上的控制连接</strong>上进行</p></li><li><p>计算机网络由计<strong>算机、通信设备、通信线路以及网络协议和网络软件</strong>等组成</p></li><li><p>TCP传输的三个阶段：建立连接、维持连接、释放连接</p></li><li><p>Telnet协议使用TCP<strong>23</strong>端口, TFTP使用UDP<strong>69</strong>端口</p></li><li><p>DNS包括域名空间、名字服务器、解析器</p></li><li><p>二进制数据编码技术中的三种主要编码方案：<strong>不归零制、曼彻斯特编码、差分曼彻斯特编码</strong></p></li><li><p>802.3 以太网最大可传送的帧（数据）长度为<strong>1500</strong>个8位组。</p></li><li><p>ARP 的协议数据单元封装在<strong>以太帧</strong>中传送。</p></li><li><p>计算机互联的主要目的是<strong>资源共享</strong></p></li><li><p>ICMP的报文分为<strong>差错报告报文</strong>和<strong>询问报文</strong>，ICMP协议功能：报告通信故障</p></li><li><p>255.255.255.255 <strong>受限广播地址</strong>（本网广播地址）</p></li><li><p>实现分组交换的方法有 <strong>虚电路和数据报</strong></p></li><li><p>IPv6地址分为三种类型：<strong>单播地址、组播地址、任意播地址</strong></p></li><li><p>运输层的端口号分为<strong>熟知端口号、短暂端口号和注册端口号</strong></p></li><li><p>MIME提供的是多格式邮件服务,PGP是<strong>安全邮件协议</strong>,POP3为<strong>邮件接收协议</strong>,SMTP为<strong>邮件发送协议</strong></p></li><li><p>PPP协议只支持<strong>全双工</strong>链路</p></li><li><p>门户网站指通向某类综合性互联网信息资源，并提供有关信息服务的应用系统</p></li><li><p>一个 TCP 报文段中的数据部分最多为多少个字节？为什么？</p><blockquote><p>整个TCP报文必须适配IP分组<strong>65535字节</strong>的载荷段</p><p>因为<strong>TCP首部固定长度最少20B</strong>，所以仅剩下65515字节用于TCP数据</p><p>目的主要是避免TCP报文段传到IP层后要进行IP分片</p></blockquote></li><li><p>画出TCP报文段的20个字节的固定首部格式，并标清各字段的名字和所占的位数</p><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221022124832760.png" alt="image-20221022124832760"></p></li><li><p>将一台计算机通过电话网接入Internet需要使用调制解调器</p></li><li><p>对同一个域名向DNS服务器发出多次的DNS请求报文后，每一次得到的IP地址都一样吗？</p><blockquote><p>可能不一样。产生这样的结果是这个域名对应了多个IP地址。</p><p>一般的域名是没有这个必要的，但有的网站的访问量非常大，这样做可以使网站服务器的负载平衡。</p></blockquote></li><li><p>协议与服务有何区别？有何关系？ </p><blockquote><p><strong>协议是水平的，服务是垂直的。</strong></p><p>协议是“水平的” ，即协议是控制对等实体之间的通信的规则。</p><p>服务是“垂直的” ，即服务是由下层向上层通过层间接口提供的。</p><p>协议与服务的关系：</p><p>在协议的控制下，上层对下层进行调用，下层对上层进行服务，上下层间用交换原语交换信息。同层两个实体间有时有连接。</p></blockquote></li><li><p>常用的局域网的网络拓扑结构有哪些？现在最流行的是哪种结构？</p><blockquote><p>常用的局域网的网络拓扑结构有星形网、环形网和总线网。</p><p>现在最流行的是星形网。</p></blockquote></li><li><p>请将下图中IP数据报格式补全</p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221021220850152.png" alt="image-20221021220850152" style="zoom: 67%;"><ol start="10"><li>A类地址以1-126开始，B类地址以128-191开始，C类地址以192-223开始。</li><li><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221022094925855.png" alt="image-20221022094925855">片偏移以8个字节为偏移单位，每个<strong>分片长度</strong>一定是<strong>8字节</strong>（64位)的整数倍</li></ol></li><li><p>Ping命令发出的是<strong>ICMP请求报文</strong>  ICMP(网际控制报文协议)</p></li><li><p>三次握手方法用于运输层TCP<strong>连接</strong>的建立</p><blockquote><p>TCP建立连接的过程叫做握手,握手需要在客户和服务器之间交换三个TCP报文段。</p><p>简述三报文握手过程：假定主机A允许的是TCP客户程序，而B运行TCP服务器程序。最初两端的TCP进程都处于CLOSED状态。在打算建立TCP连接时，A向B发出连接请求报文段，B收到连接请求报文段后，如同意建立连接，则向A发送确认报文段。TCP客户进程收到B的确认后，还需要向B给出确认，这时TCP连接已经建立，A进入ESTABLISHED(已建立连接)状态，当B收到A的确认后也进入ESTABLISHED状态。</p></blockquote></li><li><p>私有IP地址的地址范围</p><blockquote><p>10.0.0.0-10.255.255.255</p><p>172.16.0.0-172.31.255.255</p><p>192.168.0.0-192.168.255.255</p></blockquote></li><li><p>ARP协议的作用是将IP地址映射到第二层地址（MAC地址）</p></li><li><p>运输层的协议通过使用<strong>端口</strong>与应用层的应用进程进行通信</p></li><li><p>网络边缘的端系统之间的通信方式可以划分为C/S方式和P2P方式两大类</p><blockquote><p>C/S 客户-服务器方式</p><p>P2P 对等连接方式</p></blockquote></li><li><p>ADSL采用频分复用技术把普通的电话线分为电话、上行、下行三个相对独立的信道</p><blockquote><p>非对称数字用户线ADSL 频分复用</p></blockquote></li><li><p>IP数据报IPv4、IPv6<strong>首部固定部分的长度</strong>分别是20、40字节</p></li><li><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221021193717810.png" alt="image-20221021193717810"></p><blockquote><p>(1)协议及其功能如下:</p><p>应用层：HTTP：WWW访问协议、DNS：域名解析</p><p>运输层：TCP：在客户和服务器之间建立连接，提供可靠的数据传输</p><p>网络层：IP：进行路由选择 ICMP：提供网络传输中的差错检测 ARP：将目的IP地址映射成物理MAC地址</p><p>网络接口层：LLC和MAC：提供数据链路层的功能，实现可靠的数据链路</p><p>(2)过程描述如下：</p><p>1.利用DNS，查询到<a href="http://www.google.com对应的ip地址/">www.google.com对应的IP地址</a></p><p>2.浏览器与Google的服务器利用TCP协议建立连接</p><p>3.浏览器利用HTTP的GET方法向谷歌服务器发送资源请求，谷歌发送回应信息</p><p>4.浏览器解释回应信息，并以图形化的方式显示在浏览器上</p></blockquote></li><li><p>路由表更新</p><blockquote><p>将接收到的路由表距离全部加1，下一跳路由器全部修改为发送新路由表的路由器，然后更新原来的路由表：</p><p>1.新的目的网络，添加进来</p><p>2.已有目的网络，相同的下一跳，更新</p><p>3.已有目的网络，不同的下一跳，选择距离更短的</p></blockquote></li><li><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221021195534902.png" alt="image-20221021195534902"></p><blockquote><p>子网地址</p><p>最小、大可用IP地址</p><p>可用IP地址范围</p><p>广播地址</p><p>子网掩码</p><p>解题过程：</p><p>1.判断分配到的IP地址是哪类</p><p>2.确定需要划分几个子网</p><p>3.计算需要借几位子网号（注意是否允许全0、1的子网）</p><p>4.确定网络号、子网号、主机号位数（需要满足≥主机数量）</p><p>5.将IP地址写成2进制，划分网络ID、子网ID、主机ID</p><p>6.划分子网，写出各子网可用IP地址范围、广播地址、子网掩码</p></blockquote></li><li><p>无分类编址CIDR 最长前缀 构造超网</p></li><li><p>计算机网络向用户可任意提供哪些服务？</p><p>计算机网络向用户提供的<strong>最重要的功能有两个</strong>：</p><p>①<strong>连通性</strong>：计算机网络使上网用户间都可以<strong>交换信息</strong></p><p>②<strong>共享性</strong>：指<strong>资源共享</strong>、可以是信息共享、软件共享、硬件共享等</p></li><li><p>试简述分组交换的特点</p><p>分组交换采用存储转发技术，兼有电路交换和报文交换的优点。</p><p>通常要将发送的较长报文按一定长度分割为许多小段的数据段，在每一个数据段前加上一些必要的控制信息组成的首部后，就构成一个分组。每一个分组在网络中独立的选择传输路径，并被正确地交付到分组传输的终点。其具有如下优点：</p><ul><li>高效：分组在传输过程中动态分配传输带宽，对通信链路逐段占用</li><li>灵活：为每一个分组独立选择转发路由</li><li>迅速：可以不建立连接就向其他主机发送分组</li><li>可靠：保证可靠性的网络协议；分布式多路由的分组交换网使网络具有很好的生存性</li></ul></li><li><p>发送时延与帧长和发送速率有关，传播时延与信道长度和信号在信道上的传播速率有关</p></li><li><p>*<em>时延带宽积=传播时延</em>带宽 ** 正在传播的比特数=数据率*传播时延</p></li><li><p>传输效率=数据部分长度/总长度</p></li><li><p>协议与服务有何区别？有何关系？</p><p>协议与服务的区别：</p><p>协议是“水平”的，即协议是控制对等实体之间的通信的规则</p><p>服务是“垂直”的，即服务是由下层向上层通过层间接口提供的</p><p>协议与服务的关系：</p><p>在协议的控制下，上层对下层进行调用，下层对上层提供服务，上下层间用交换原语交换信息。同层两个实体间有时有连接。</p></li><li><p>网络协议的三个要素是什么？各有什么含义</p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105145218033.png" alt="image-20221105145218033"></p></li><li><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105145233655.png" alt="image-20221105145233655"></p></li></ol><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105145246032.png" alt="image-20221105145246032"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105145255366.png" alt="image-20221105145255366"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105145338727.png" alt="image-20221105145338727"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105145348759.png" alt="image-20221105145348759"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105145403923.png" alt="image-20221105145403923"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105145537282.png" alt="image-20221105145537282"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105145550933.png" alt="image-20221105145550933"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105145613723.png" alt="image-20221105145613723"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105150112549.png" alt="image-20221105150112549"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105150122319.png" alt="image-20221105150122319"></p><p><img src="C:/Users/34538/AppData/Roaming/Typora/typora-user-images/image-20221105150151730.png" alt="image-20221105150151730"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;计算机没什么用.他们只会告诉你答案.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本篇作为计算机网络知识的起始篇，主要了解关于计算机网络的一些基本内容。&lt;/p&gt;
&lt;p&gt;基于谢希仁老师的**计算机网络(第7、8版)**教材开始学习。&lt;/p&gt;
&lt;p&gt;内容只会越来越少，学习本就是&lt;strong&gt;将知识变成常识&lt;/strong&gt;的过程，那么常识当然不用再特意写出来咯。后面部分是刷题记录，当然也只会越来越少。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="学习札记" scheme="https://www.kmoon.fun/categories/%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0/"/>
    
    
    <category term="计网" scheme="https://www.kmoon.fun/tags/%E8%AE%A1%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>深渊-单片机EDA软件工具下载</title>
    <link href="https://www.kmoon.fun/2022/software/"/>
    <id>https://www.kmoon.fun/2022/software/</id>
    <published>2022-10-06T12:36:11.000Z</published>
    <updated>2022-12-15T00:57:07.487Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>仅涉及<strong>目前</strong>课本所需要的工具以及软件</p></blockquote><span id="more"></span><table><thead><tr><th align="left">序号</th><th align="left">链接</th></tr></thead><tbody><tr><td align="left">Keil uVison5</td><td align="left"><a href="https://kmoon.fun/files/C51/keil.pdf">查看</a></td></tr><tr><td align="left">STC-ISP-v4.80</td><td align="left"><a href="https://kmoon.fun/files/C51/stcisp.zip">查看</a></td></tr><tr><td align="left">字模软件</td><td align="left"><a href="https://kmoon.fun/files/C51/%E5%AD%97%E6%A8%A1%E8%BD%AF%E4%BB%B6.zip">查看</a></td></tr><tr><td align="left">KST-51开发板原理图</td><td align="left"><a href="https://kmoon.fun/files/C51/KST-51%E5%BC%80%E5%8F%91%E6%9D%BF%E5%8E%9F%E7%90%86%E5%9B%BE.pdf">查看</a></td></tr><tr><td align="left">Quartus Ⅱ 18.0</td><td align="left"><a href="https://kmoon.fun/files/C51/Quartus.pdf">查看</a></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;仅涉及&lt;strong&gt;目前&lt;/strong&gt;课本所需要的工具以及软件&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="深渊" scheme="https://www.kmoon.fun/categories/%E6%B7%B1%E6%B8%8A/"/>
    
    
    <category term="Whut" scheme="https://www.kmoon.fun/tags/Whut/"/>
    
    <category term="单片机" scheme="https://www.kmoon.fun/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>实验报告-WUT组网技术实验报告</title>
    <link href="https://www.kmoon.fun/2022/networking/"/>
    <id>https://www.kmoon.fun/2022/networking/</id>
    <published>2022-10-06T12:20:31.000Z</published>
    <updated>2022-10-30T06:18:28.748Z</updated>
    
    <content type="html"><![CDATA[<p>NetworkingExperiment</p><p>武汉理工大学-信息工程-组网技术实验</p><p>目前已更新完成.</p><span id="more"></span><h3 id="实验一、客户机服务器网络配置"><a href="#实验一、客户机服务器网络配置" class="headerlink" title="实验一、客户机服务器网络配置"></a>实验一、客户机服务器网络配置</h3><h3 id="实验二、Internet组网"><a href="#实验二、Internet组网" class="headerlink" title="实验二、Internet组网"></a>实验二、Internet组网</h3><h3 id="实验三、网页制作"><a href="#实验三、网页制作" class="headerlink" title="实验三、网页制作"></a>实验三、网页制作</h3><h3 id="实验四、OPNET仿真网络规划设计"><a href="#实验四、OPNET仿真网络规划设计" class="headerlink" title="实验四、OPNET仿真网络规划设计"></a>实验四、OPNET仿真网络规划设计</h3><table><thead><tr><th align="left">序号</th><th align="left">查看</th></tr></thead><tbody><tr><td align="left">实验一、客户机服务器网络配置</td><td align="left"><a href="https://kmoon.fun/files/network/%E5%AE%9E%E9%AA%8C%E4%B8%80.pdf">查看</a></td></tr><tr><td align="left">实验二、Internet组网</td><td align="left"><a href="https://kmoon.fun/files/network/%E5%AE%9E%E9%AA%8C%E4%BA%8C.pdf">查看</a></td></tr><tr><td align="left">实验三、网页制作</td><td align="left"><a href="https://kmoon.fun/files/network/%E5%AE%9E%E9%AA%8C%E4%B8%89.pdf">查看</a></td></tr><tr><td align="left">实验四、OPNET仿真网络规划设计</td><td align="left"><a href="https://kmoon.fun/files/network/%E5%AE%9E%E9%AA%8C%E5%9B%9B.pdf">查看</a></td></tr><tr><td align="left">其他资料</td><td align="left"><a href="https://kmoon.fun/files/network/other.zip">查看</a></td></tr><tr><td align="left">Github地址</td><td align="left"><a href="https://github.com/kmoonn/WUT-NetworkingExperiment">查看</a></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;NetworkingExperiment&lt;/p&gt;
&lt;p&gt;武汉理工大学-信息工程-组网技术实验&lt;/p&gt;
&lt;p&gt;目前已更新完成.&lt;/p&gt;</summary>
    
    
    
    <category term="实验报告" scheme="https://www.kmoon.fun/categories/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Whut" scheme="https://www.kmoon.fun/tags/Whut/"/>
    
    <category term="组网技术" scheme="https://www.kmoon.fun/tags/%E7%BB%84%E7%BD%91%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>学习札记—Linux基础入门</title>
    <link href="https://www.kmoon.fun/2022/linux/"/>
    <id>https://www.kmoon.fun/2022/linux/</id>
    <published>2022-10-06T09:54:11.000Z</published>
    <updated>2022-10-30T06:15:34.318Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>没有结果就是最好的结果——Linux哲学</p></blockquote><p>Linux入门学习记录 ing~</p><span id="more"></span><h3 id="一、Linux系统简介"><a href="#一、Linux系统简介" class="headerlink" title="一、Linux系统简介"></a>一、Linux系统简介</h3><ul><li><p>linux 为何物</p><p>Linux就是一个<strong>操作系统</strong>，类似Windows,Mac OS。</p><p>Linux 主要是<strong>系统调用</strong>和<strong>内核</strong>那两层</p><img src="http://image.kmoon.fun//images/202210281136384.png" alt="image-20221023200239199" style="zoom:50%;"></li><li><p>linux 历史简介</p><p>操作系统始于二十世纪五十年代，当时的操作系统能运行批处理程序。</p><p><strong>批处理程序</strong>不需要用户的交互，它从文件或者穿孔卡片读取数据，然后输出到另外一个文件或者打印机。</p><p>二十世纪六十年代初，<strong>交互式</strong>操作系统开始流行。它不仅仅可以交互，还能使<strong>多个用户从不同的终端同时操作主机</strong>。这样的操作系统被称作<strong>分时操作系统</strong>。</p><p>Linux 本身只是<strong>操作系统的内核</strong>。内核是使其它程序能够运行的基础。它实现了多任务和硬件管理，用户或者系统管理员交互运行的所有程序实际上都运行在内核之上。其中有些程序是必需的，比如说，命令行解释器（<strong>shell</strong>），它用于用户交互和编写 shell 脚本。 <strong>Linus 没有自己去开发这些应用程序</strong>，而是使用已有的自由软件。这减少了搭建开发环境所需花费的工作量。</p></li><li><p>linux 重要人物</p><p>Linus Torvalds：Linux 之父</p></li><li><p>linux 与 windows 的不同</p><ol><li><strong>Windows 没有的</strong></li></ol><ul><li>稳定的系统</li><li>安全性和漏洞的快速修补</li><li>多用户</li><li>用户和用户组的规划</li><li>相对较少的系统资源占用</li><li>可定制裁剪，移植到嵌入式平台（如安卓设备）</li><li>可选择的多种图形用户界面（如 GNOME，KDE）</li></ul><ol start="2"><li><strong>Linux 没有的</strong></li></ol><ul><li>特定的支持厂商</li><li>足够的游戏娱乐支持度</li><li>足够的专业软件支持度</li></ul></li><li><p>如何学习 linux</p><p><strong>明确目的</strong>：搭建服务器/做程序开发/日常办公/娱乐游戏</p><p><strong>面对现实</strong>：命令行/图形界面</p><p>学习Linux操作系统本身还是某一个Linux发行版（Ubuntu，CentOS，Fedora，OoenSUSE，Debian，Mint等）</p><blockquote><p>注重基础，从头开始。</p></blockquote><img src="http://image.kmoon.fun//images/202210281138744.png" alt="1" style="zoom: 67%;"></li></ul><h3 id="二、基本概念及操作"><a href="#二、基本概念及操作" class="headerlink" title="二、基本概念及操作"></a>二、基本概念及操作</h3><ol><li><p>Linux桌面环境</p><p>UNIX/Linux 本身是<strong>没有图形界面</strong>的，我们通常在 UNIX/Linux 发行版上看到的图形界面实际都只是运行在 Linux 系统之上的一套<strong>软件</strong>。</p><p>最流行的实现客户端功能的桌面环境有 <strong>KDE</strong>，<strong>GNOME</strong>，<strong>XFCE</strong>，<strong>LXDE</strong> 。</p></li><li><p>Linux终端</p><p>通常我们在使用 Linux 时，并不是直接与系统打交道，而是通过一个叫做 <strong>Shell</strong> 的中间程序来完成的，在图形界面下为了实现让我们在一个窗口中完成用户输入和显示输出，Linux 系统还提供了一个叫做<strong>终端模拟器</strong>的程序（<strong>Terminal</strong>）。</p><p>几个比较常见的终端模拟器： gnome-terminal，Konsole，xterm，rxvt，kvt，nxterm 和 eterm 。</p></li><li><p>Shell</p><p>Shell 是指“提供给使用者使用界面”的软件（<strong>命令解析器</strong>），类似于 DOS 下的 command（命令行）和后来的 cmd.exe 。</p><p>UNIX/Linux 操作系统下的 Shell 既是用户交互的界面，也是控制系统的<strong>脚本语言</strong>。</p></li><li><p>命令行操作</p><p>在 linux 中，最最重要的就是命令，这就包含了2个过程，输入和输出。</p><p>输入就是打开终端，键入命令然后回车。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#创建一个名为 file 的文件，touch是一个命令</span><span class="token function">touch</span> <span class="token function">file</span><span class="token comment">#一次性创建多个文件</span><span class="token function">touch</span> file_<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">10</span><span class="token punctuation">}</span>.txt<span class="token comment">#进入一个目录，cd是一个命令</span><span class="token builtin class-name">cd</span> /etc/<span class="token comment">#查看当前所在目录</span><span class="token builtin class-name">pwd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出就是返回你想要的结果，比如查看文件内容，执行程序等</p><p><strong>重要快捷键</strong></p><p>【Tab】命令补全、目录补全、命令参数补全</p><p>【Ctrl+c】强行停止当前进程</p><p>【↑\↓】历史输入命令查询</p><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td><code>Ctrl+d</code></td><td>键盘输入结束或退出终端</td></tr><tr><td><code>Ctrl+s</code></td><td>暂停当前程序，暂停后按下任意键恢复运行</td></tr><tr><td><code>Ctrl+z</code></td><td>将当前程序放到后台运行，恢复到前台为命令<code>fg</code></td></tr><tr><td><code>Ctrl+a</code></td><td>将光标移至输入行头，相当于<code>Home</code>键</td></tr><tr><td><code>Ctrl+e</code></td><td>将光标移至输入行末，相当于<code>End</code>键</td></tr><tr><td><code>Ctrl+k</code></td><td>删除从光标所在位置到行末</td></tr><tr><td><code>Alt+Backspace</code></td><td>向前删除一个单词</td></tr><tr><td><code>Shift+PgUp</code></td><td>将终端显示向上滚动</td></tr><tr><td><code>Shift+PgDn</code></td><td>将终端显示向下滚动</td></tr></tbody></table><p><strong>通配符</strong></p><p>通配符是一种特殊语句，主要有<strong>星号（*）和问号（?）</strong>，用来对字符串进行<strong>模糊匹配</strong>（比如文件名、参数名）。</p><p>Shell 常用通配符：</p><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td><code>*</code></td><td>匹配 0 或<strong>多个</strong>字符</td></tr><tr><td><code>?</code></td><td>匹配任意<strong>一个</strong>字符</td></tr><tr><td><code>[list]</code></td><td>匹配 list 中的<strong>任意单一字符</strong></td></tr><tr><td><code>[^list]</code></td><td>匹配 除 list 中的任意单一字符以外的字符</td></tr><tr><td><code>[c1-c2]</code></td><td>匹配 c1-c2 中的任意单一字符 如：[0-9][a-z]</td></tr><tr><td><code>{string1,string2,...}</code></td><td>匹配 string1 或 string2 (或更多)其一字符串</td></tr><tr><td><code>{c1..c2}</code></td><td>匹配 c1-c2 中全部字符 如{1..10}</td></tr></tbody></table><p><strong>帮助</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">man</span> 命令<span class="token function">man</span> <span class="token operator">&lt;</span>command_name<span class="token operator">&gt;</span><span class="token function">ls</span> <span class="token parameter variable">--help</span> 命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>区段</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>一般命令</td></tr><tr><td>2</td><td>系统调用</td></tr><tr><td>3</td><td>库函数，涵盖了 C 标准函数库</td></tr><tr><td>4</td><td>特殊文件（通常是/dev 中的设备）和驱动程序</td></tr><tr><td>5</td><td>文件格式和约定</td></tr><tr><td>6</td><td>游戏和屏保</td></tr><tr><td>7</td><td>杂项</td></tr><tr><td>8</td><td>系统管理命令和守护进程</td></tr></tbody></table></li></ol><h3 id="三、用户及文件权限管理"><a href="#三、用户及文件权限管理" class="headerlink" title="三、用户及文件权限管理"></a>三、用户及文件权限管理</h3><p>Linux 是一个可以实现多用户登录的操作系统，比如“李雷”和“韩梅梅”都可以同时登录同一台主机，他们共享一些主机的资源，但他们也分别有自己的用户空间，用于存放各自的文件。但实际上他们的文件都是放在同一个物理磁盘上的甚至同一个逻辑分区或者目录里，但是由于 Linux 的 <strong>用户管理</strong> 和 <strong>权限机制</strong>，不同用户不可以轻易地查看、修改彼此的文件。</p><h4 id="1-查看用户"><a href="#1-查看用户" class="headerlink" title="1. 查看用户"></a>1. 查看用户</h4><p>   <img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221023203741550.png" alt="image-20221023203741550"></p><ul><li>whoami 查看当前用户名</li><li>pts 表示伪终端</li><li>第三列表示当前伪终端的启动时间</li></ul><p>   若当前使用的shell不是登录式的shell（login shell），上述命令不会输出任何内容</p><p>   判断是不是login shell可以执行<code>echo $0</code>命令，如果返回 zsh、/bin/zsh、/bin/bash 这种格式，说明是非登录式 Shell（non-login shell）；如果返回 -zsh、-bash 则说明是登录式 Shell，这时你执行 <code>who am i</code> 就会有输出。</p><p>   <img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221023204223451.png" alt="image-20221023204223451"></p><p>   本地使用shell就是非登录式，通过ssh连接就是登录式</p><ul><li>who命令</li></ul><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>-a</code></td><td>打印能打印的全部</td></tr><tr><td><code>-d</code></td><td>打印死掉的进程</td></tr><tr><td><code>-m</code></td><td>同<code>am i</code>，<code>mom likes</code></td></tr><tr><td><code>-q</code></td><td>打印当前登录用户数及用户名</td></tr><tr><td><code>-u</code></td><td>打印当前登录用户登录信息</td></tr><tr><td><code>-r</code></td><td>打印运行等级</td></tr></tbody></table><h4 id="2-创建用户"><a href="#2-创建用户" class="headerlink" title="2. 创建用户"></a>2. 创建用户</h4><p>在 Linux 系统里， <code>root</code>账户拥有整个系统至高无上的权限，比如新建和添加用户。</p><blockquote><p>root权限，系统权限的一种，与system权限可以理解成一个概念，但高于administrator权限，root 是 Linux 和 UNIX 系统中的超级管理员用户帐户，该帐户拥有整个系统至高无上的权力，所有对象他都可以操作，所以很多黑客在入侵系统的时候，都要把权限提升到 root 权限，这个操作等同于在 Windows 下就是将新建的非法帐户添加到 Administrators 用户组。更比如安卓操作系统中（基于 Linux 内核）获得 root 权限之后就意味着已经获得了手机的最高权限，这时候你可以对手机中的任何文件（包括系统文件）执行所有增、删、改、查的操作。</p></blockquote><p>大部分 Linux 系统在安装时都会建议用户新建一个用户而不是直接使用 root 用户进行登录，一般我们登录系统时都是以普通账户的身份登录的，要创建用户需要 root 权限，这里就要用到 <code>sudo</code> 这个命令了。</p><p>不过使用这个命令有两个大前提，一是你要知道当前登录用户的密码，二是当前用户必须在 <code>sudo</code> 用户组。</p><p><strong>注意 Linux 环境下输入密码是不会显示的</strong></p><ul><li>su <user> 可以切换用户user，需要输入密码</user></li><li>sudo <cmd> 以特权级别运行cmd命令，需要当前用户属于sudo组，且需要输入密码</cmd></li><li>su  -<user> 切换用户，环境变量和工作目录也会对应变化</user></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> adduser lilei 新建一个叫lilei的用户，同时也会默认为新的用户在/home 目录下创建一个工作目录<span class="token function">su</span> <span class="token parameter variable">-l</span> lilei 切换用户到lilei<span class="token builtin class-name">pwd</span> 查看当前所在目录<span class="token builtin class-name">exit</span> 或ctrl+D 注销<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-用户组"><a href="#3-用户组" class="headerlink" title="3. 用户组"></a>3. 用户组</h4><p>在 Linux 里面每个用户都有一个归属（用户组），用户组简单地理解就是一组用户的集合，它们<strong>共享一些资源和权限</strong>，同时拥有私有资源，就跟家的形式差不多，你的兄弟姐妹（不同的用户）属于同一个家（用户组），你们可以共同拥有这个家（共享资源），爸妈对待你们都一样（共享权限），你偶尔写写日记，其他人未经允许不能查看（私有资源和权限）。当然一个用户是可以属于多个用户组的，正如你既属于家庭，又属于学校或公司。</p><ul><li>groups命令</li></ul><pre class="line-numbers language-SHELL" data-language="SHELL"><code class="language-SHELL">groups shiyanlou<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221023210639037.png" alt="image-20221023210639037"></p><p>其中冒号之前表示<strong>用户</strong>，后面表示该用户<strong>所属的用户组</strong>。</p><p>每次新建用户如果不指定用户组的话，默认会自动创建一个与用户名相同的用户组。</p><p>默认情况下在 sudo 用户组里的可以使用 sudo 命令获得 root 权限。</p><p>shiyanlou 用户也可以使用 sudo 命令，为什么这里没有显示在 sudo 用户组里呢？可以查看下 <code>/etc/sudoers.d/shiyanlou</code> 文件，我们在 <code>/etc/sudoers.d</code> 目录下创建了这个文件，从而给 shiyanlou 用户赋予了 sudo 权限</p><ul><li>查看 /etc/group 文件</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/group <span class="token operator">|</span> <span class="token function">sort</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cat命令用于读取指定文件的内容并打印到终端输出</p><p>| sort表示将读取的文本进行一个字典排序再输出</p><h5 id="etc-group-文件格式说明"><a href="#etc-group-文件格式说明" class="headerlink" title="/etc/group 文件格式说明"></a><code>/etc/group</code> 文件格式说明</h5><p>/etc/group 的内容包括用户组（Group）、用户组口令、GID（组 ID） 及该用户组所包含的用户（User），每个用户组一条记录。格式如下：</p><blockquote><p>group_name:password:GID:user_list</p></blockquote><p>password字段为X表示密码不可见</p><p>如果用户的 GID 等于用户组的 GID，那么最后一个字段 <code>user_list</code> 就是空的，这里的 GID 是指用户默认所在组的 GID，可以使用 <code>id</code> 命令查看。比如 shiyanlou 用户，在 <code>/etc/group</code> 中的 shiyanlou 用户组后面是不会显示的。lilei 用户，在 <code>/etc/group</code> 中的 lilei 用户组后面是不会显示的。</p><p><strong>将其他用户加入sudo用户组</strong></p><p>默认情况下新创建的用户是不具有 root 权限的，也不在 sudo 用户组，可以让其加入 sudo 用户组从而获取 root 权限：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> <span class="token parameter variable">-l</span> lilei<span class="token function">sudo</span> <span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221023212800149.png" alt="image-20221023212800149"></p><p>提示 lilei 不在 sudoers 文件中，意思就是 lilei 不在 sudo 用户组中.</p><p>使用 <code>usermod</code> 命令可以为用户添加用户组，同样使用该命令你必需有 root 权限，你可以直接使用 root 用户为其它用户添加用户组，或者用其它已经在 sudo 用户组的用户使用 sudo 命令获取权限来执行该命令。</p><p><img src="C:\Users\34538\AppData\Roaming\Typora\typora-user-images\image-20221023213033545.png" alt="image-20221023213033545"></p><h4 id="4-用户组"><a href="#4-用户组" class="headerlink" title="4. 用户组"></a>4. 用户组</h4><ul><li><p><code>deluser &lt;user&gt; --remove-home</code></p><p>使用 <code>--remove-home</code> 参数在删除用户时候会一并将该用户的工作目录一并删除。</p><p>如果不使用那么系统会自动在 /home 目录为该用户保留工作目录。</p></li></ul><p>删除用户组可以使用 <code>groupdel</code> 命令，倘若该群组中仍包括某些用户，则必须先删除这些用户后，才能删除群组</p><h4 id="5-文件权限"><a href="#5-文件权限" class="headerlink" title="5. 文件权限"></a>5. 文件权限</h4><p>文件权限就是文件的访问控制权限，即哪些用户和组群可以访问文件以及可以执行什么样的操作。</p><ul><li>查看文件权限</li></ul><p><code>ls -l</code> 使用较长格列出文件</p><img src="http://image.kmoon.fun//images/202210281138928.png" alt="pic" style="zoom:67%;"><ul><li><p>文件类型</p></li><li><p>文件权限</p><p>读权限，表示你可以使用 <code>cat &lt;file name&gt;</code> 之类的命令来读取某个文件的内容；</p><p>写权限，表示你可以编辑和修改某个文件的内容；</p><p>执行权限，通常指可以运行的二进制程序文件或者脚本文件，如同 Windows 上的 <code>exe</code> 后缀的文件，不过 Linux 上不是通过文件后缀名来区分文件的类型。</p><p><strong>一个目录同时具有读权限和执行权限才可以打开并查看内部文件，而一个目录要有写权限才允许在其中创建其它文件</strong>，这是因为目录文件实际保存着该目录里面的文件的列表等信息。</p><p>所有者权限，这一点相信你应该明白了，至于所属用户组权限，是指你所在的用户组中的所有其它用户对于该文件的权限，比如，你有一个 iPad，那么这个用户组权限就决定了你的兄弟姐妹有没有权限使用它破坏它和占有它。</p></li><li><p>链接数</p><blockquote><p>链接到该文件所在的 inode 结点的文件名数目</p></blockquote></li><li><p>文件大小</p><blockquote><p>以 inode 结点大小为单位来表示的文件大小，你可以给 ls 加上 <code>-lh</code> 参数来更直观的查看文件的大小。</p></blockquote></li><li><p>ls命令</p><ul><li><p>显示除了 <code>.</code>（当前目录）和 <code>..</code>（上一级目录）之外的所有文件，包括隐藏文件（Linux 下以 <code>.</code> 开头的文件为隐藏文件）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-a</span><span class="token function">ls</span> <span class="token parameter variable">-al</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>查看某一个目录的完整属性，而不是显示目录里面的文件属性：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-dl</span> <span class="token operator">&lt;</span>目录名<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>显示所有文件大小</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-asSh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中小 s 为显示文件大小，大 S 为按文件大小排序，若需要知道如何按其它方式排序，可以使用 <code>man ls</code> 命令查询。</p></li></ul></li><li><p>变更文件所有者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> shiyanlou iphone11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改文件权限</p></li></ul><h3 id="Linux目录结构及文件基本操作"><a href="#Linux目录结构及文件基本操作" class="headerlink" title="Linux目录结构及文件基本操作"></a>Linux目录结构及文件基本操作</h3><h3 id="环境变量与文件查找"><a href="#环境变量与文件查找" class="headerlink" title="环境变量与文件查找"></a>环境变量与文件查找</h3><h3 id="寻找文件"><a href="#寻找文件" class="headerlink" title="寻找文件"></a>寻找文件</h3><h3 id="文件打包与解压缩"><a href="#文件打包与解压缩" class="headerlink" title="文件打包与解压缩"></a>文件打包与解压缩</h3><h3 id="文件系统操作与磁盘管理"><a href="#文件系统操作与磁盘管理" class="headerlink" title="文件系统操作与磁盘管理"></a>文件系统操作与磁盘管理</h3><h3 id="Linux下的帮助命令"><a href="#Linux下的帮助命令" class="headerlink" title="Linux下的帮助命令"></a>Linux下的帮助命令</h3><h3 id="Linux任务计划crontab"><a href="#Linux任务计划crontab" class="headerlink" title="Linux任务计划crontab"></a>Linux任务计划crontab</h3><h3 id="备份日志"><a href="#备份日志" class="headerlink" title="备份日志"></a>备份日志</h3><h3 id="命令执行顺序控制与管道"><a href="#命令执行顺序控制与管道" class="headerlink" title="命令执行顺序控制与管道"></a>命令执行顺序控制与管道</h3><h3 id="简单的文本处理"><a href="#简单的文本处理" class="headerlink" title="简单的文本处理"></a>简单的文本处理</h3><h3 id="数据流重定向"><a href="#数据流重定向" class="headerlink" title="数据流重定向"></a>数据流重定向</h3><h3 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h3><h3 id="正则表达式基础"><a href="#正则表达式基础" class="headerlink" title="正则表达式基础"></a>正则表达式基础</h3><h3 id="数据提取"><a href="#数据提取" class="headerlink" title="数据提取"></a>数据提取</h3><h3 id="Linux下的软件安装"><a href="#Linux下的软件安装" class="headerlink" title="Linux下的软件安装"></a>Linux下的软件安装</h3><h3 id="Linux进程概念"><a href="#Linux进程概念" class="headerlink" title="Linux进程概念"></a>Linux进程概念</h3><h3 id="Linux进程管理"><a href="#Linux进程管理" class="headerlink" title="Linux进程管理"></a>Linux进程管理</h3><h3 id="Linux日志系统"><a href="#Linux日志系统" class="headerlink" title="Linux日志系统"></a>Linux日志系统</h3><h3 id="没用但有趣的命令"><a href="#没用但有趣的命令" class="headerlink" title="没用但有趣的命令"></a>没用但有趣的命令</h3><ol><li><p>输出字符图形</p><p>banner</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> sysvbanner<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="http://image.kmoon.fun//images/202210281138699.png" alt="image-20221023202213026" style="zoom:50%;"><p>printerbanner</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">printerbanner <span class="token parameter variable">-w</span> <span class="token number">50</span> H<span class="token parameter variable">-w</span> 指定打印宽度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="http://image.kmoon.fun//images/202210281138998.png" alt="image-20221023202436432" style="zoom: 33%;"><p>toilet</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> toilettoilet hushan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="http://image.kmoon.fun//images/202210281138096.png" alt="image-20221023202916555" style="zoom: 50%;"><p>figlet</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> figletfiglet hushan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="http://image.kmoon.fun//images/202210281138463.png" alt="image-20221023203039199" style="zoom: 67%;"></li><li></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;没有结果就是最好的结果									——Linux哲学&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Linux入门学习记录 ing~&lt;/p&gt;</summary>
    
    
    
    <category term="学习札记" scheme="https://www.kmoon.fun/categories/%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0/"/>
    
    
    <category term="Linux" scheme="https://www.kmoon.fun/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>学习札记-51单片机(C语言版)</title>
    <link href="https://www.kmoon.fun/2022/51dpj/"/>
    <id>https://www.kmoon.fun/2022/51dpj/</id>
    <published>2022-09-27T10:52:12.000Z</published>
    <updated>2022-12-01T07:36:40.529Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>做技术必须要认真，很多人做事的时候喜欢糊弄，但做技术绝对不可以。<br>技术是逻辑性很强的东西，不应该有任何侥幸心理，你糊弄它它就糊弄你。——李冬明【前言</p></blockquote><p>Last Update：2022.11.26</p><p>Tips：仅个人理解，未对硬件原理深究,若发现错误敬请斧正。</p><span id="more"></span><h2 id="一、概论"><a href="#一、概论" class="headerlink" title="一、概论"></a>一、概论</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><img src="https://img.gejiba.com/images/6511d16815b36b665708bd037e836282.png" alt="6511d16815b36b665708bd037e836282.png" style="zoom: 33%;"><h4 id="Keil"><a href="#Keil" class="headerlink" title="Keil"></a>Keil</h4><p><strong>Keil uVision5安装</strong></p><p>无脑下一步即可，注意<strong>安装路径</strong>不要出现<strong>中文</strong>字符</p><p><strong>基本介绍</strong></p><p>菜单栏、工具栏、工程管理区、程序代码区域、信息输出窗口</p><p><strong>使用步骤</strong></p><ol><li><p>新建工程 .uvproj</p></li><li><p>选择单片机型号 Intel—&gt;80/87C52</p></li><li><p>保存工程</p></li><li><p>创建编写代码的文件</p></li><li><p>添加文件到工程中</p></li><li><p>编写程序</p></li><li><p>编译</p></li><li><p>下载</p></li></ol><h4 id="STC-ISP下载"><a href="#STC-ISP下载" class="headerlink" title="STC-ISP下载"></a>STC-ISP下载</h4><h5 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h5><h5 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h5><ol><li>选择单片机型号</li><li>找到编译的hex文件</li><li>选择COM口号</li><li>冷启动下载</li></ol><h3 id="单片机初识"><a href="#单片机初识" class="headerlink" title="单片机初识"></a>单片机初识</h3><h4 id="内部资源"><a href="#内部资源" class="headerlink" title="内部资源"></a><strong>内部资源</strong></h4><ol><li><p><strong>Flash</strong>——程序存储空间</p><p><strong>可重复擦写</strong>、容量大、成本低、<strong>断电后数据不丢失</strong>，类似计算机的<strong>硬盘</strong>。</p></li><li><p><strong>RAM</strong>——程序运行过程中产生的和需要的数据，类似计算器。</p><p><strong>断电后数据丢失</strong>，读写速度非常快，寿命无限。</p></li><li><p><strong>SFR</strong>——特殊功能寄存器</p><p>单片机<strong>每个功能都会对应一个或多个SFR</strong></p></li></ol><h4 id="最小系统"><a href="#最小系统" class="headerlink" title="最小系统"></a><strong>最小系统</strong></h4><img src="http://image.kmoon.fun//images/202211261307761.png" alt="image-20221126130654622" style="zoom:50%;"><ol><li><p>电源</p></li><li><p>晶振</p><p>晶体振荡器，为单片机系统提供基准时钟信号。</p><p>通常分为有源晶振和无源晶振两种类型。</p><p>无源晶体一般称为crystal（晶体），有源晶体叫做oscillator（振荡器）。</p></li><li><p>复位电路</p><p>上电复位、手动复位、程序自动复位。</p><p>上电复位保证单片机每次都从一个固定的相同的状态开始工作</p><p>手动复位：重启</p><p>程序自动复位：看门狗模块</p></li></ol><h2 id="二、硬件基础"><a href="#二、硬件基础" class="headerlink" title="二、硬件基础"></a>二、硬件基础</h2><p><img src="https://img.gejiba.com/images/df80c35a1447f55f04968de95f5d121a.png" alt="df80c35a1447f55f04968de95f5d121a.png"></p><p><img src="http://image.kmoon.fun//images/202211231407102.png" alt="image-20221123140750758"></p><h3 id="LED"><a href="#LED" class="headerlink" title="LED"></a>LED</h3><p>发光二极管，俗称LED小灯</p><p>开发板共8个LED小灯，通过<strong>P0</strong>口（<strong>74HC254</strong>）控制。</p><p><code>sfr P0=0x80;</code></p><h3 id="电磁干扰EMI"><a href="#电磁干扰EMI" class="headerlink" title="电磁干扰EMI"></a>电磁干扰EMI</h3><h3 id="去耦电容"><a href="#去耦电容" class="headerlink" title="去耦电容"></a>去耦电容</h3><ol><li>缓冲作用</li><li>稳定作用</li></ol><h3 id="三极管"><a href="#三极管" class="headerlink" title="三极管"></a>三极管</h3><img src="http://image.kmoon.fun//images/202211261419771.png" alt="image-20221126141946694" style="zoom:80%;"><img src="http://image.kmoon.fun//images/202211261426223.png" alt="image-20221126142644145" style="zoom:80%;"><h3 id="74HC245"><a href="#74HC245" class="headerlink" title="74HC245"></a>74HC245</h3><p>双向缓冲器</p><p>74HC245左侧是通过P0口控制</p><p><img src="http://image.kmoon.fun//images/202211261518886.png" alt="image-20221126151834778"></p><h3 id="74HC138"><a href="#74HC138" class="headerlink" title="74HC138"></a>74HC138</h3><p><img src="http://image.kmoon.fun//images/202211261842963.png" alt="image-20221126184201825"></p><p>把3种输入状态翻译成8种输出</p><p>三八译码器 输出低电平有效</p><p>74HC138作为8个LED的总开关（<strong>LEDS6</strong>）</p><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><p>51单片机内部有T0，T1两个定时器</p><p>定时器存储寄存器</p><table><thead><tr><th align="center">名称</th><th align="center">描述</th><th align="center">SFR地址</th><th align="center">复位值</th></tr></thead><tbody><tr><td align="center">TH0</td><td align="center">定时器0高字节</td><td align="center">0x8C</td><td align="center">0X00</td></tr><tr><td align="center">TL0</td><td align="center">定时器0低字节</td><td align="center">0x8A</td><td align="center">0X00</td></tr><tr><td align="center">TH1</td><td align="center">定时器1高字节</td><td align="center">0x8D</td><td align="center">0X00</td></tr><tr><td align="center">TL1</td><td align="center">定时器1低字节</td><td align="center">0x8B</td><td align="center">0X00</td></tr></tbody></table><p><img src="http://image.kmoon.fun//images/202211261954575.png" alt="image-20221126195432501"></p><p>TCON</p><p>TMOD</p><p><img src="http://image.kmoon.fun//images/202211262000412.png" alt="image-20221126200005339"></p><p>工作模式</p><p><strong>模式1</strong>：THn和TLn组成一个<strong>16位</strong>的定时器，<strong>计数范围是0~65535</strong></p><p><strong>模式2</strong>：<strong>8位</strong>自动重装载模式，<strong>只有TLn做加1计数，计数范围0~255</strong>，THn的值不会变化，而会保持原来的值，<strong>定时器溢出后THn重装到TLn</strong></p><p><strong>定时器的应用</strong></p><ol><li>设置特殊功能寄存器TMOD，配置好工作模式</li><li>设置计数寄存器TH0和TL0的初值</li><li>设置TCON，通过TR0置1来让定时器开始计数</li><li>判断TCON寄存器的TF0位，监测定时器溢出情况</li></ol><p><strong>！计算定时：</strong></p><p><strong>晶振是11.0592MHz，时钟周期就是1/11059200，机器周期是12/11056200</strong></p><p>计算所需的定时需要经过几个机器周期，再用定时器的溢出值减去经过的时钟周期，得到初始值，就可以给TH，TL设置初值，记得转成对应进制。</p><p><strong>总结：</strong></p><p><strong>TMOD 模式</strong></p><p><strong>TH TL 初值</strong></p><p><strong>TR 启动计时</strong></p><p><strong>TF 溢出停止</strong></p><p><img src="http://image.kmoon.fun//images/202211262008271.png" alt="image-20221126200846185"></p><h3 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h3><img src="http://image.kmoon.fun//images/202211262224704.png" alt="image-20221126222447627" style="zoom:67%;"><p>控制中断的寄存器有两个：<strong>中断使能寄存器</strong>和<strong>中断优先级寄存器</strong></p><p>中断使能寄存器IE：</p><table><thead><tr><th align="center">位</th><th align="center">符号</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">7</td><td align="center">EA</td><td align="center">总中断使能位，相当于总开关</td></tr><tr><td align="center">6</td><td align="center">–</td><td align="center">–</td></tr><tr><td align="center">5</td><td align="center">ET2</td><td align="center">定时器2中断使能</td></tr><tr><td align="center">4</td><td align="center">ES</td><td align="center">串口中断使能</td></tr><tr><td align="center">3</td><td align="center">ET1</td><td align="center">定时器1中断使能</td></tr><tr><td align="center">2</td><td align="center">EX1</td><td align="center">外部中断1使能</td></tr><tr><td align="center">1</td><td align="center">ET0</td><td align="center">定时器0中断使能</td></tr><tr><td align="center">0</td><td align="center">EX0</td><td align="center">外部中断0使能</td></tr></tbody></table><p>中断查询序列</p><table><thead><tr><th align="center">中断函数编号</th><th align="center">中断名称</th><th align="center">中断标志位</th><th align="center">中断使能位</th><th align="center">中断向量地址</th><th align="center">默认优先级</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">外部中断0</td><td align="center">IE0</td><td align="center">EX0</td><td align="center">0x0003</td><td align="center">1(最高)</td></tr><tr><td align="center">1</td><td align="center">T0中断</td><td align="center">TF0</td><td align="center">ET0</td><td align="center">0x000B</td><td align="center">2</td></tr><tr><td align="center">2</td><td align="center">外部中断1</td><td align="center">IE1</td><td align="center">EX1</td><td align="center">0x0013</td><td align="center">3</td></tr><tr><td align="center">3</td><td align="center">T1中断</td><td align="center">TF1</td><td align="center">ET1</td><td align="center">0x001B</td><td align="center">4</td></tr><tr><td align="center">4</td><td align="center">UART中断</td><td align="center">TI/RI</td><td align="center">ES</td><td align="center">0x0023</td><td align="center">5</td></tr><tr><td align="center">5</td><td align="center">T2中断</td><td align="center">TF2/EXF2</td><td align="center">ET2</td><td align="center">0x002B</td><td align="center">6</td></tr></tbody></table><p><strong>EA=1 总开关</strong> <strong>0-5位相当于分开关</strong></p><p>中断函数不返回任何值</p><p>interrupt关键字</p><p>中断的优先级IP：</p><ol><li>抢占优先级</li><li>固有优先级</li></ol><h3 id="单片机I-x2F-O口"><a href="#单片机I-x2F-O口" class="headerlink" title="单片机I/O口"></a>单片机I/O口</h3><h3 id="上下拉电阻"><a href="#上下拉电阻" class="headerlink" title="上下拉电阻"></a>上下拉电阻</h3><h3 id="步进电机"><a href="#步进电机" class="headerlink" title="步进电机"></a>步进电机</h3><h3 id="蜂鸣器"><a href="#蜂鸣器" class="headerlink" title="蜂鸣器"></a>蜂鸣器</h3><p>压电式、磁电式</p><p>有源、无源</p><h3 id="UART串口通信"><a href="#UART串口通信" class="headerlink" title="UART串口通信"></a>UART串口通信</h3><p>并行通信</p><p>串行通信</p><p><img src="http://image.kmoon.fun//images/202211231513014.png" alt="image-20221123151259940"></p><p><strong>低位先发 高位后发</strong></p><p>波特率：发送二进制数据位的速率</p><p>即发送1位二进制数据的持续时间=1/baud</p><p>通信之前必须保<strong>持波特率一致</strong></p><p><img src="http://image.kmoon.fun//images/202211231521011.png" alt="image-20221123152142940"></p><h2 id="三、C语言基础"><a href="#三、C语言基础" class="headerlink" title="三、C语言基础"></a>三、C语言基础</h2><h3 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h3><p>二进制0b，十进制，十六进制0x</p><h3 id="移位"><a href="#移位" class="headerlink" title="移位"></a>移位</h3><p>&gt;&gt;   &lt;&lt;</p><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><ol><li>逻辑与 &amp;&amp;</li><li>逻辑或 ||</li><li>逻辑非 ！</li><li>按位与 &amp;</li><li>按位或 |</li><li>按位取反 ~</li><li>按位异或 ^</li></ol><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p><img src="http://image.kmoon.fun//images/202211261902983.png" alt="image-20221126190246901"></p><h3 id="类型和范围"><a href="#类型和范围" class="headerlink" title="类型和范围"></a>类型和范围</h3><img src="https://img.gejiba.com/images/2f997ffd9a36c8138208363f238f6d72.png" alt="2f997ffd9a36c8138208363f238f6d72.png" style="zoom: 67%;"><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>局部变量</p><p>全局变量</p><h3 id="存储类别"><a href="#存储类别" class="headerlink" title="存储类别"></a>存储类别</h3><p>static 静态变量</p><h3 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h3><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>声明、定义</p><p>实参、形参</p><h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><p>函数名（实参列表）</p><p>先定义，后调用。</p><h3 id="sfr关键字"><a href="#sfr关键字" class="headerlink" title="sfr关键字"></a>sfr关键字</h3><p>51单片机内部有许多小模块，每个模块居住在拥有唯一房间号的房间内，同时每个模块都有8个控制单元。</p><p>51单片机内部有许多寄存器，如果想使用必须提前进行sfr声明，或者包含reg52.h头文件</p><pre class="line-numbers language-none"><code class="language-none">#include &lt;reg52.h&gt;sfr P0 = 0x80;//定义一个单片机特殊功能寄存器//P0就是一个功能模块，住在0x80这个房间，通过设置P0内部这个模块的8个开关，来让单片机的P0这8个I/O口输出高低电平<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="sbit关键字"><a href="#sbit关键字" class="headerlink" title="sbit关键字"></a>sbit关键字</h3><pre class="line-numbers language-none"><code class="language-none">sbit LED = P0^0//LED就代表P0.0口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>sbit 就是对8个开关其中一个进行定义</p><p>位定义：sbit就是对SFR里面的8个开关其中的一个进行定义</p><h3 id="code关键字"><a href="#code关键字" class="headerlink" title="code关键字"></a>code关键字</h3><p>数据存储在Flash中，<strong>无需更改</strong></p><h3 id="延时"><a href="#延时" class="headerlink" title="延时"></a>延时</h3><ol><li><p>非精确延时</p><p>for(i=0;i&lt;100;i++)</p><p>i=100;while(i–)</p></li><li><p>精确延时</p><p>用定时器定时</p><p>利用率函数 _nop_() 一个NOP的时间是一个机器周期的时间</p></li></ol><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>声明</p><p>初始化</p><p>使用和赋值</p><h3 id="作用域-1"><a href="#作用域-1" class="headerlink" title="作用域"></a>作用域</h3><p>局部变量：函数内部变量、函数形参</p><p>全局变量：函数外声明的变量</p><h3 id="变量存储类别"><a href="#变量存储类别" class="headerlink" title="变量存储类别"></a>变量存储类别</h3><p>自动auto：未加static修饰的函数局部变量自动分配存储空间 结束后自动释放内存</p><p>静态static：全局变量+static修饰的局部变量只赋一次初值 保持前一次执行结果</p><p>寄存器register</p><p>外部extern</p><h3 id="数组-1"><a href="#数组-1" class="headerlink" title="数组"></a>数组</h3><h3 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h3><h3 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h3><h2 id="四、模块学习"><a href="#四、模块学习" class="headerlink" title="四、模块学习"></a>四、模块学习</h2><p>REG52.H头文件快速对照</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">__REG52_H__</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__REG52_H__</span></span><span class="token comment">/*  BYTE Registers  */</span>sfr P0    <span class="token operator">=</span> <span class="token number">0x80</span><span class="token punctuation">;</span>sfr P1    <span class="token operator">=</span> <span class="token number">0x90</span><span class="token punctuation">;</span>sfr P2    <span class="token operator">=</span> <span class="token number">0xA0</span><span class="token punctuation">;</span>sfr P3    <span class="token operator">=</span> <span class="token number">0xB0</span><span class="token punctuation">;</span>sfr PSW   <span class="token operator">=</span> <span class="token number">0xD0</span><span class="token punctuation">;</span>sfr ACC   <span class="token operator">=</span> <span class="token number">0xE0</span><span class="token punctuation">;</span>sfr B     <span class="token operator">=</span> <span class="token number">0xF0</span><span class="token punctuation">;</span>sfr SP    <span class="token operator">=</span> <span class="token number">0x81</span><span class="token punctuation">;</span>sfr DPL   <span class="token operator">=</span> <span class="token number">0x82</span><span class="token punctuation">;</span>sfr DPH   <span class="token operator">=</span> <span class="token number">0x83</span><span class="token punctuation">;</span>sfr PCON  <span class="token operator">=</span> <span class="token number">0x87</span><span class="token punctuation">;</span>sfr TCON  <span class="token operator">=</span> <span class="token number">0x88</span><span class="token punctuation">;</span>sfr TMOD  <span class="token operator">=</span> <span class="token number">0x89</span><span class="token punctuation">;</span>sfr TL0   <span class="token operator">=</span> <span class="token number">0x8A</span><span class="token punctuation">;</span>sfr TL1   <span class="token operator">=</span> <span class="token number">0x8B</span><span class="token punctuation">;</span>sfr TH0   <span class="token operator">=</span> <span class="token number">0x8C</span><span class="token punctuation">;</span>sfr TH1   <span class="token operator">=</span> <span class="token number">0x8D</span><span class="token punctuation">;</span>sfr IE    <span class="token operator">=</span> <span class="token number">0xA8</span><span class="token punctuation">;</span>sfr IP    <span class="token operator">=</span> <span class="token number">0xB8</span><span class="token punctuation">;</span>sfr SCON  <span class="token operator">=</span> <span class="token number">0x98</span><span class="token punctuation">;</span>sfr SBUF  <span class="token operator">=</span> <span class="token number">0x99</span><span class="token punctuation">;</span><span class="token comment">/*  8052 Extensions  */</span>sfr T2CON  <span class="token operator">=</span> <span class="token number">0xC8</span><span class="token punctuation">;</span>sfr RCAP2L <span class="token operator">=</span> <span class="token number">0xCA</span><span class="token punctuation">;</span>sfr RCAP2H <span class="token operator">=</span> <span class="token number">0xCB</span><span class="token punctuation">;</span>sfr TL2    <span class="token operator">=</span> <span class="token number">0xCC</span><span class="token punctuation">;</span>sfr TH2    <span class="token operator">=</span> <span class="token number">0xCD</span><span class="token punctuation">;</span><span class="token comment">/*  BIT Registers  */</span><span class="token comment">/*  PSW  */</span>sbit CY    <span class="token operator">=</span> PSW<span class="token operator">^</span><span class="token number">7</span><span class="token punctuation">;</span>sbit AC    <span class="token operator">=</span> PSW<span class="token operator">^</span><span class="token number">6</span><span class="token punctuation">;</span>sbit F0    <span class="token operator">=</span> PSW<span class="token operator">^</span><span class="token number">5</span><span class="token punctuation">;</span>sbit RS1   <span class="token operator">=</span> PSW<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span>sbit RS0   <span class="token operator">=</span> PSW<span class="token operator">^</span><span class="token number">3</span><span class="token punctuation">;</span>sbit OV    <span class="token operator">=</span> PSW<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>sbit P     <span class="token operator">=</span> PSW<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//8052 only</span><span class="token comment">/*  TCON  */</span>sbit TF1   <span class="token operator">=</span> TCON<span class="token operator">^</span><span class="token number">7</span><span class="token punctuation">;</span>sbit TR1   <span class="token operator">=</span> TCON<span class="token operator">^</span><span class="token number">6</span><span class="token punctuation">;</span>sbit TF0   <span class="token operator">=</span> TCON<span class="token operator">^</span><span class="token number">5</span><span class="token punctuation">;</span>sbit TR0   <span class="token operator">=</span> TCON<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span>sbit IE1   <span class="token operator">=</span> TCON<span class="token operator">^</span><span class="token number">3</span><span class="token punctuation">;</span>sbit IT1   <span class="token operator">=</span> TCON<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>sbit IE0   <span class="token operator">=</span> TCON<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">;</span>sbit IT0   <span class="token operator">=</span> TCON<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">/*  IE  */</span>sbit EA    <span class="token operator">=</span> IE<span class="token operator">^</span><span class="token number">7</span><span class="token punctuation">;</span>sbit ET2   <span class="token operator">=</span> IE<span class="token operator">^</span><span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">//8052 only</span>sbit ES    <span class="token operator">=</span> IE<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span>sbit ET1   <span class="token operator">=</span> IE<span class="token operator">^</span><span class="token number">3</span><span class="token punctuation">;</span>sbit EX1   <span class="token operator">=</span> IE<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>sbit ET0   <span class="token operator">=</span> IE<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">;</span>sbit EX0   <span class="token operator">=</span> IE<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">/*  IP  */</span>sbit PT2   <span class="token operator">=</span> IP<span class="token operator">^</span><span class="token number">5</span><span class="token punctuation">;</span>sbit PS    <span class="token operator">=</span> IP<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span>sbit PT1   <span class="token operator">=</span> IP<span class="token operator">^</span><span class="token number">3</span><span class="token punctuation">;</span>sbit PX1   <span class="token operator">=</span> IP<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>sbit PT0   <span class="token operator">=</span> IP<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">;</span>sbit PX0   <span class="token operator">=</span> IP<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">/*  P3  */</span>sbit RD    <span class="token operator">=</span> P3<span class="token operator">^</span><span class="token number">7</span><span class="token punctuation">;</span>sbit WR    <span class="token operator">=</span> P3<span class="token operator">^</span><span class="token number">6</span><span class="token punctuation">;</span>sbit T1    <span class="token operator">=</span> P3<span class="token operator">^</span><span class="token number">5</span><span class="token punctuation">;</span>sbit T0    <span class="token operator">=</span> P3<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span>sbit INT1  <span class="token operator">=</span> P3<span class="token operator">^</span><span class="token number">3</span><span class="token punctuation">;</span>sbit INT0  <span class="token operator">=</span> P3<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>sbit TXD   <span class="token operator">=</span> P3<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">;</span>sbit RXD   <span class="token operator">=</span> P3<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">/*  SCON  */</span>sbit SM0   <span class="token operator">=</span> SCON<span class="token operator">^</span><span class="token number">7</span><span class="token punctuation">;</span>sbit SM1   <span class="token operator">=</span> SCON<span class="token operator">^</span><span class="token number">6</span><span class="token punctuation">;</span>sbit SM2   <span class="token operator">=</span> SCON<span class="token operator">^</span><span class="token number">5</span><span class="token punctuation">;</span>sbit REN   <span class="token operator">=</span> SCON<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span>sbit TB8   <span class="token operator">=</span> SCON<span class="token operator">^</span><span class="token number">3</span><span class="token punctuation">;</span>sbit RB8   <span class="token operator">=</span> SCON<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>sbit TI    <span class="token operator">=</span> SCON<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">;</span>sbit RI    <span class="token operator">=</span> SCON<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">/*  P1  */</span>sbit T2EX  <span class="token operator">=</span> P1<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 8052 only</span>sbit T2    <span class="token operator">=</span> P1<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 8052 only</span>             <span class="token comment">/*  T2CON  */</span>sbit TF2    <span class="token operator">=</span> T2CON<span class="token operator">^</span><span class="token number">7</span><span class="token punctuation">;</span>sbit EXF2   <span class="token operator">=</span> T2CON<span class="token operator">^</span><span class="token number">6</span><span class="token punctuation">;</span>sbit RCLK   <span class="token operator">=</span> T2CON<span class="token operator">^</span><span class="token number">5</span><span class="token punctuation">;</span>sbit TCLK   <span class="token operator">=</span> T2CON<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span>sbit EXEN2  <span class="token operator">=</span> T2CON<span class="token operator">^</span><span class="token number">3</span><span class="token punctuation">;</span>sbit TR2    <span class="token operator">=</span> T2CON<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>sbit C_T2   <span class="token operator">=</span> T2CON<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">;</span>sbit CP_RL2 <span class="token operator">=</span> T2CON<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="LED小灯"><a href="#LED小灯" class="headerlink" title="LED小灯"></a>LED小灯</h3><img src="https://img.gejiba.com/images/23b83fbfea5d0ffd4c50daeefc7d940f.png" alt="23b83fbfea5d0ffd4c50daeefc7d940f.png" style="zoom:50%;"><h5 id="点亮、熄灭、闪烁"><a href="#点亮、熄灭、闪烁" class="headerlink" title="点亮、熄灭、闪烁"></a>点亮、熄灭、闪烁</h5><p>74HC254输入分别控制8个不同的LED小灯</p><p>LED=0</p><p>LED=1</p><p>循环</p><h5 id="定时器-1"><a href="#定时器-1" class="headerlink" title="定时器"></a>定时器</h5><p>非精确定时</p><p>精确定时 定时模式选择0、1</p><h3 id="流水灯"><a href="#流水灯" class="headerlink" title="流水灯"></a>流水灯</h3><h5 id="左右移动"><a href="#左右移动" class="headerlink" title="左右移动"></a>左右移动</h5><p>动态扫描</p><h3 id="LED数码管"><a href="#LED数码管" class="headerlink" title="LED数码管"></a>LED数码管</h3><p>数码管共有a,b,c,d,e,f,g,dp 8个段，每个段都是一个led小灯</p><p>由74HC138控制三极管的导通来控制整个数码管的使能</p><p><strong>真值表</strong></p><p><img src="http://image.kmoon.fun//images/202211262038772.png" alt="image-20221126203841702"></p><h5 id="静态显示"><a href="#静态显示" class="headerlink" title="静态显示"></a>静态显示</h5><h5 id="动态显示"><a href="#动态显示" class="headerlink" title="动态显示"></a>动态显示</h5><img src="http://image.kmoon.fun//images/202211262147399.png" alt="image-20221126214735326" style="zoom: 80%;"><p>74HC138只能在同一个时间导通一个三极管，数码管是靠6个三极管来控制。</p><p>100Hz无闪烁（欺骗你的眼睛） 动态扫描</p><h5 id="消隐"><a href="#消隐" class="headerlink" title="消隐"></a>消隐</h5><p>主要是在数码管<strong>位选和段选产生的瞬态</strong>造成的，解决方法分以下两种：</p><ol><li><p>关闭段</p><p>刷新之前关闭所有段，改变好了位选后再打开段即可</p><p>在switch(i)前加一句P0=0XFF。</p></li><li><p>关闭位</p><p>关闭数码管的位，赋值过程都做好后再重新打开</p><p>在switch(i)前加一句ENLED=1，等赋值完成在重新赋值后break。</p></li></ol><h3 id="LED点阵"><a href="#LED点阵" class="headerlink" title="LED点阵"></a>LED点阵</h3><img src="https://img.gejiba.com/images/cd10d6e1fa6f001af44a46128d220289.png" alt="cd10d6e1fa6f001af44a46128d220289.png" style="zoom:50%;"><p>一个8x8的点阵由64个LED小灯组成</p><p>控制点阵左侧引脚（阳极）的74HC138是原理图上的<strong>U4</strong>，8个引脚自上而下依次由U4的Y0~Y7输出来控制</p><p>使能U4：ENLEN=0,ADDR3=0</p><p>分开关：ADDR210,控制8排点阵LED</p><h5 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h5><p>P0整体控制一行点阵LED</p><h5 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h5><h3 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h3><img src="https://img.gejiba.com/images/ec58822f5aac7ef43eaa790114a53247.png" alt="ec58822f5aac7ef43eaa790114a53247.png" style="zoom: 67%;"><p><strong>P2口（8位）控制keyOut1<del>4和KeyIn1</del>4</strong></p><h5 id="独立按键"><a href="#独立按键" class="headerlink" title="独立按键"></a>独立按键</h5><p>各自与独立的输入线相连接</p><h5 id="矩阵按键"><a href="#矩阵按键" class="headerlink" title="矩阵按键"></a>矩阵按键</h5><p>“多键一按”</p><h5 id="按键消抖"><a href="#按键消抖" class="headerlink" title="按键消抖"></a>按键消抖</h5><h3 id="电机"><a href="#电机" class="headerlink" title="电机"></a>电机</h3><img src="https://img.gejiba.com/images/d81a3297fc5b22355a9ec04c1d26d5de.png" alt="d81a3297fc5b22355a9ec04c1d26d5de.png" style="zoom:67%;"><p><strong>转动</strong></p><h3 id="蜂鸣器-1"><a href="#蜂鸣器-1" class="headerlink" title="蜂鸣器"></a>蜂鸣器</h3><h3 id="UART串口通信-1"><a href="#UART串口通信-1" class="headerlink" title="UART串口通信"></a>UART串口通信</h3><p> P3.0P3.1</p><p>RXDTXD</p><img src="http://image.kmoon.fun//images/202212011528631.png" alt="image-20221201152758485" style="zoom:67%;"><h3 id="1602液晶"><a href="#1602液晶" class="headerlink" title="1602液晶"></a>1602液晶</h3><h3 id="I2C总线"><a href="#I2C总线" class="headerlink" title="I2C总线"></a>I2C总线</h3><h3 id="E²PROM"><a href="#E²PROM" class="headerlink" title="E²PROM"></a>E²PROM</h3><h3 id="实时时钟DS1302"><a href="#实时时钟DS1302" class="headerlink" title="实时时钟DS1302"></a>实时时钟DS1302</h3><ol><li><p>BCD码</p><p>0-9：0b0000-0b1001</p></li><li><p>SPI时序</p><p>高速 全双工 同步通信总线</p><img src="http://image.kmoon.fun//images/202211081412855.png" alt="image-20221108141216732" style="zoom:67%;"><p>SPI四种模式：时钟极性/相位–&gt;数据采样/输出</p><img src="http://image.kmoon.fun//images/202211081414016.png" alt="image-20221108141441956" style="zoom: 67%;"><p>实时时钟芯片DS1302</p><p>DS102.c文件</p></li></ol><h3 id="红外通信"><a href="#红外通信" class="headerlink" title="红外通信"></a>红外通信</h3><p>1. </p><h3 id="A-x2F-D-D-x2F-A"><a href="#A-x2F-D-D-x2F-A" class="headerlink" title="A/D D/A"></a>A/D D/A</h3><h3 id="RS-485通信与Modbus"><a href="#RS-485通信与Modbus" class="headerlink" title="RS-485通信与Modbus"></a>RS-485通信与Modbus</h3><h2 id="实践项目"><a href="#实践项目" class="headerlink" title="实践项目"></a>实践项目</h2><h3 id="多功能电子钟"><a href="#多功能电子钟" class="headerlink" title="多功能电子钟"></a>多功能电子钟</h3><h3 id="简易信号发生器"><a href="#简易信号发生器" class="headerlink" title="简易信号发生器"></a>简易信号发生器</h3><h3 id="温度传感器DS18B20"><a href="#温度传感器DS18B20" class="headerlink" title="温度传感器DS18B20"></a>温度传感器DS18B20</h3><h3 id="电子钟"><a href="#电子钟" class="headerlink" title="电子钟"></a>电子钟</h3><h3 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h3><h2 id="五、代码思路"><a href="#五、代码思路" class="headerlink" title="五、代码思路"></a>五、代码思路</h2><blockquote><p><strong>&lt;Tips：前面程序解释说明过的后续不再写出&gt;</strong></p></blockquote><p>闲话少叙，开始吧~</p><h3 id="1-点亮LED小灯"><a href="#1-点亮LED小灯" class="headerlink" title="1. 点亮LED小灯"></a>1. 点亮LED小灯</h3><p>​思路：</p><p>​<strong>总开关</strong>74HC138（<strong>U3</strong>）使能，74HC138输入控制<strong>LEDS6分开关</strong>为低电平，三极管Q16导通，74HC245（<strong>P0口</strong>）输入低电平，点亮对应小灯。</p>   <pre class="line-numbers language-C" data-language="C"><code class="language-C">#include &lt;reg52.h&gt;   //本程序中相当于sfr P0 = 0x80;  //P0为一个功能模块，有8个LED小灯,8个控制开关,输入低电平0为亮sbit LED = P0^0;     //位地址声明，注意：sbit必须小写、P大写！ //P0^0表示74HC254一个输入值，即第一个LED的开关输入值//因为74HC138（U3）为8个LED小灯总开关//P1为一个功能模块，控制74HC138（U3）sbit ADDR0 = P1^0; //ADDR0~2表示74HC138输入A0-2sbit ADDR1 = P1^1;   sbit ADDR2 = P1^2;sbit ADDR3 = P1^3; //ADDR3代表74HC138使能端E3,高电平有效sbit ENLED = P1^4; //ENLED代表74HC138使能端E1非,E2非,低电平有效void main(){    ENLED = 0;    ADDR3 = 1;        ADDR2 = 1; //74HC138输入110，控制LEDS6（分开关）    ADDR1 = 1;    ADDR0 = 0;        LED = 0;        //点亮小灯        while (1);      //程序停止在这里}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-LED闪烁"><a href="#2-LED闪烁" class="headerlink" title="2. LED闪烁"></a>2. LED闪烁</h3><p>   思路：LED=0亮，LED=1灭,中间+<strong>延时</strong>即可</p>   <pre class="line-numbers language-c" data-language="c"><code class="language-c">sbit LED <span class="token operator">=</span> P0<span class="token operator">^</span>O<span class="token punctuation">;</span><span class="token comment">//也可以选择其他小灯P0^X</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//定义一个无符号整型变量i赋初值0</span>        <span class="token comment">//74HC138（U3）使能</span>    <span class="token comment">//经U3的Y6输出开启三极管Q16</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        LED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                  <span class="token comment">//点亮小灯</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">30000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//延时一段时间</span>        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                  <span class="token comment">//熄灭小灯</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">30000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//延时一段时间</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-P0同时控制8个LED小灯"><a href="#3-P0同时控制8个LED小灯" class="headerlink" title="3. P0同时控制8个LED小灯"></a>3. P0同时控制8个LED小灯</h3><p>   思路：直接设置P0为<strong>16进制</strong>，转换为2进制就是8位，分别控制LED小灯亮灭（0/1）</p>   <pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    P0 <span class="token operator">=</span> <span class="token number">0xFE</span><span class="token punctuation">;</span>    <span class="token comment">//向P0写入数据来控制LED小灯,0XFE=11111110,即点亮最后一个小灯</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-流水灯左-x2F-右移"><a href="#4-流水灯左-x2F-右移" class="headerlink" title="4. 流水灯左/右移"></a>4. 流水灯左/右移</h3><p>   思路：P0统一控制，<strong>P0的值不断变化</strong>（移位）</p>   <pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//左移</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>     <span class="token comment">//定义循环变量i，用于软件延时</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//定义计数变量cnt，用于移位控制</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token punctuation">{</span>        P0 <span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">0x01</span> <span class="token operator">&lt;&lt;</span> cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//P0等于1左移cnt位，控制8个LED ~表示二进制取反</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">20000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//软件延时</span>        cnt<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token comment">//移位计数变量自加1</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;=</span> <span class="token number">8</span><span class="token punctuation">)</span>             <span class="token comment">//移位计数超过7后，再重新从0开始</span>        <span class="token punctuation">{</span>            cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//右移</span>P0 <span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">0x80</span> <span class="token operator">&gt;&gt;</span> cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//P0等于0x80右移cnt位，控制8个LED</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-花样流水灯-循环往返"><a href="#5-花样流水灯-循环往返" class="headerlink" title="5. 花样流水灯(循环往返)"></a>5. 花样流水灯(循环往返)</h3><p>   思路：主要是初值设定＋条件语句+<strong>判断</strong>（移到头后重新换方向移动）</p>   <pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token comment">//定义循环变量i，用于软件延时</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> dir <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token comment">//定义移位方向变量dir，用于控制移位的方向</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> shift <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span>  <span class="token comment">//定义循环移位变量shift，并赋初值0x01</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        P0 <span class="token operator">=</span> <span class="token operator">~</span>shift<span class="token punctuation">;</span>              <span class="token comment">//P0等于循环移位变量取反，控制8个LED</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">20000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//软件延时</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>dir <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>             <span class="token comment">//移位方向变量为0时，左移</span>        <span class="token punctuation">{</span>            shift <span class="token operator">=</span> shift <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>   <span class="token comment">//循环移位变量左移1位</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>shift <span class="token operator">==</span> <span class="token number">0x80</span><span class="token punctuation">)</span>    <span class="token comment">//左移到最左端后，改变移位方向</span>            <span class="token punctuation">{</span>                dir <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>                      <span class="token comment">//移位方向变量不为0时，右移</span>        <span class="token punctuation">{</span>            shift <span class="token operator">=</span> shift <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>   <span class="token comment">//循环移位变量右移1位</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>shift <span class="token operator">==</span> <span class="token number">0x01</span><span class="token punctuation">)</span>    <span class="token comment">//右移到最右端后，改变移位方向</span>            <span class="token punctuation">{</span>                dir <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-LED定时闪烁"><a href="#6-LED定时闪烁" class="headerlink" title="6. LED定时闪烁"></a>6. LED定时闪烁</h3><p>   思路：选择定时器模式-&gt;计算定时时长-&gt;设置初值-&gt;启动定时</p>   <pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//定义一个计数变量，记录T0溢出次数</span>    TMOD <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span>  <span class="token comment">//设置T0为模式1(16位定时器，范围0~65535)</span>    TH0  <span class="token operator">=</span> <span class="token number">0xB8</span><span class="token punctuation">;</span>  <span class="token comment">//为T0赋初值0xB800（溢出一次为0.02s）</span>    TL0  <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span>    TR0  <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">//启动T0</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">//函数一直在这里循环定时,溢出TF0=1，时间为0.02s//</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>TF0 <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment">//判断T0是否溢出</span>        <span class="token punctuation">{</span>            TF0 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>         <span class="token comment">//T0溢出后，清零中断标志</span>            TH0 <span class="token operator">=</span> <span class="token number">0xB8</span><span class="token punctuation">;</span>      <span class="token comment">//重新赋初值</span>            TL0 <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span>            cnt<span class="token operator">++</span><span class="token punctuation">;</span>           <span class="token comment">//计数值自加1（1X0.02s）</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;=</span> <span class="token number">50</span><span class="token punctuation">)</span>   <span class="token comment">//判断T0溢出是否达到50次（1s）</span>            <span class="token punctuation">{</span>                cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>     <span class="token comment">//达到50次后计数值清零</span>                LED <span class="token operator">=</span> <span class="token operator">~</span>LED<span class="token punctuation">;</span>  <span class="token comment">//LED取反：0--&gt;1、1--&gt;0</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-数码管显示”1”"><a href="#7-数码管显示”1”" class="headerlink" title="7. 数码管显示”1”"></a>7. 数码管显示”1”</h3><p>   思路：</p><p>   <strong>涉及新的模块，我们重新讲一遍。</strong></p><p>   <strong>总开关</strong>74HC138使能：ENLED=0,ADDR3=1</p><p>   74HC138输入值ADDR012=000，选择控制<strong>分开关</strong>LEDS0，即第一个数码管DS1</p><p>   P0控制DB_(DB)，即数码管各段输入，低电平有效</p>   <pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;reg52.h&gt;</span></span>sbit ADDR0 <span class="token operator">=</span> P1<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span>sbit ADDR1 <span class="token operator">=</span> P1<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">;</span>sbit ADDR2 <span class="token operator">=</span> P1<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>sbit ADDR3 <span class="token operator">=</span> P1<span class="token operator">^</span><span class="token number">3</span><span class="token punctuation">;</span>sbit ENLED <span class="token operator">=</span> P1<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ENLED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">//使能U3，选择数码管DS1</span>    ADDR3 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">//分开关</span>    ADDR2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    ADDR1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    ADDR0 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    P0 <span class="token operator">=</span> <span class="token number">0xF9</span><span class="token punctuation">;</span>    <span class="token comment">//点亮数码管段b和c</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-数码管静态显示秒表（单个数码管）"><a href="#8-数码管静态显示秒表（单个数码管）" class="headerlink" title="8. 数码管静态显示秒表（单个数码管）"></a>8. 数码管静态显示秒表（单个数码管）</h3><p>   思路：数组循环索引</p>   <pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//用数组来存储数码管的真值表</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> code LedChar<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span>    <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//记录T0中断次数</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> sec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//记录经过的秒数</span>        <span class="token comment">//！注意:之前解释说明过的重复代码省略</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>TF0 <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment">//判断T0是否溢出</span>        <span class="token punctuation">{</span>            TF0 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>         <span class="token comment">//T0溢出后，清零中断标志</span>            TH0 <span class="token operator">=</span> <span class="token number">0xB8</span><span class="token punctuation">;</span>      <span class="token comment">//并重新赋初值</span>            TL0 <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span>            cnt<span class="token operator">++</span><span class="token punctuation">;</span>           <span class="token comment">//计数值自加1</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;=</span> <span class="token number">50</span><span class="token punctuation">)</span>   <span class="token comment">//判断T0溢出是否达到50次（1s）</span>            <span class="token punctuation">{</span>                cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token comment">//达到50次后计数值清零</span>                P0 <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>sec<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//当前秒数对应的真值表中的值送到P0口</span>                sec<span class="token operator">++</span><span class="token punctuation">;</span>              <span class="token comment">//秒数记录自加1</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>sec <span class="token operator">&gt;=</span> <span class="token number">16</span><span class="token punctuation">)</span>      <span class="token comment">//当秒数超过0x0F(15)后，重新从0开始</span>                <span class="token punctuation">{</span>                    sec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-使用定时器实现左右移动的流水灯"><a href="#9-使用定时器实现左右移动的流水灯" class="headerlink" title="9. 使用定时器实现左右移动的流水灯"></a>9. 使用定时器实现左右移动的流水灯</h3><p>   思路：第5题加个定时器而已</p>   <pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token comment">//定义计数变量cnt，记录T0溢出次数</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> dir <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token comment">//定义移位方向变量dir，用于控制移位的方向</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> shift <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span>  <span class="token comment">//定义循环移位变量shift，并赋初值0x01</span>    <span class="token comment">//省略74HC138使能，输入值，定时器初始化</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token punctuation">{</span>        P0 <span class="token operator">=</span> <span class="token operator">~</span>shift<span class="token punctuation">;</span>       <span class="token comment">//P0等于循环移位变量取反，控制8个LED</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>TF0 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//当TF0等于0时一直执行空循环，即停在这里直到T0溢出</span>        TF0 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>           <span class="token comment">//T0溢出后，清零中断标志</span>        TH0 <span class="token operator">=</span> <span class="token number">0xB8</span><span class="token punctuation">;</span>        <span class="token comment">//并重新赋初值</span>        TL0 <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span>        cnt<span class="token operator">++</span><span class="token punctuation">;</span>             <span class="token comment">//计数值自加1</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">)</span>     <span class="token comment">//T0溢出达到10次后，控制移位（0.2s）</span>        <span class="token punctuation">{</span>            cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>dir <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token comment">//移位方向变量为0时，左移</span>            <span class="token punctuation">{</span>                shift <span class="token operator">=</span> shift <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">//循环移位变量左移1位</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>shift <span class="token operator">==</span> <span class="token number">0x80</span><span class="token punctuation">)</span>   <span class="token comment">//左移到最左端后，改变移位方向</span>                <span class="token punctuation">{</span>                    dir <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span>                     <span class="token comment">//移位方向变量不为0时，右移</span>            <span class="token punctuation">{</span>                shift <span class="token operator">=</span> shift <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">//循环移位变量右移1位</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>shift <span class="token operator">==</span> <span class="token number">0x01</span><span class="token punctuation">)</span>   <span class="token comment">//右移到最右端后，改变移位方向</span>                <span class="token punctuation">{</span>                    dir <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-数码管静态显示秒表（倒计时）"><a href="#10-数码管静态显示秒表（倒计时）" class="headerlink" title="10. 数码管静态显示秒表（倒计时）"></a>10. 数码管静态显示秒表（倒计时）</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c">思路：第<span class="token number">8</span>题数组逆置或者变换sec```c<span class="token keyword">unsigned</span> <span class="token keyword">char</span> sec <span class="token operator">=</span> <span class="token number">0x0F</span><span class="token punctuation">;</span>  <span class="token comment">//记录经过的秒数，倒计时初值0x0F(15)</span><span class="token keyword">if</span> <span class="token punctuation">(</span>sec <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token comment">//当秒数大于0时，减1</span>                <span class="token punctuation">{</span>                    sec<span class="token operator">--</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">else</span>                <span class="token comment">//当秒数等于0时，重新赋初值0x0F</span>                <span class="token punctuation">{</span>                    sec <span class="token operator">=</span> <span class="token number">0x0F</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>```<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-数码管动态显示秒表（多个数码管）"><a href="#11-数码管动态显示秒表（多个数码管）" class="headerlink" title="11. 数码管动态显示秒表（多个数码管）"></a>11. 数码管动态显示秒表（多个数码管）</h3><p>思路：(障眼法)</p><p>通过瞬间改变分开关74HC138输入值+P0的值，控制6个数码管显示数字</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">char</span> code LedChar<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment">//数码管显示字符转换表</span>    <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span>    <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> LedBuff<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment">//数码管显示缓冲区，初值0xFF确保启动时都不亮</span>    <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">//动态扫描的索引</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span>  cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//记录T0中断次数</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> sec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//记录经过的秒数</span>    <span class="token comment">//因为需要动态改变ADDR0-2的值，所以不需要再初始化了</span>    TMOD <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span>  <span class="token comment">//设置T0为模式1</span>    TH0  <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>  <span class="token comment">//为T0赋初值0xFC67，定时1ms</span>    TL0  <span class="token operator">=</span> <span class="token number">0x67</span><span class="token punctuation">;</span>    TR0  <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">//启动T0</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>TF0 <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>         <span class="token comment">//判断T0是否溢出</span>        <span class="token punctuation">{</span>            TF0 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          <span class="token comment">//T0溢出后，清零中断标志</span>            TH0 <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>       <span class="token comment">//并重新赋初值</span>            TL0 <span class="token operator">=</span> <span class="token number">0x67</span><span class="token punctuation">;</span>            cnt<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment">//计数值自加1</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;=</span> <span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token comment">//判断T0溢出是否达到1000次（1s）</span>            <span class="token punctuation">{</span>                cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token comment">//达到1000次后计数值清零</span>                sec<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token comment">//秒计数自加1</span>                <span class="token comment">//以下代码将sec按十进制位从低到高依次提取并转为数码管显示字符</span>                LedBuff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>sec<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                LedBuff<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>sec<span class="token operator">/</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                LedBuff<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>sec<span class="token operator">/</span><span class="token number">100</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                LedBuff<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>sec<span class="token operator">/</span><span class="token number">1000</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                LedBuff<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>sec<span class="token operator">/</span><span class="token number">10000</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                LedBuff<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>sec<span class="token operator">/</span><span class="token number">100000</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//以下代码完成数码管动态扫描刷新（控制6个数码管）</span>            <span class="token comment">//看上去是6个数码管同时变化，但是是以极快的速度切换</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//最右边数码管</span>                <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//依次进位</span>                <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//举个例子</span>当计数到sec<span class="token operator">=</span><span class="token number">123456</span>时，P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>LedChar<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0x82</span><span class="token punctuation">(</span>数码管显示<span class="token number">6</span><span class="token punctuation">)</span> 即个位显示<span class="token number">6</span>```<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    </p><h3 id="12-数码管动态显示秒表（中断函数消隐）"><a href="#12-数码管动态显示秒表（中断函数消隐）" class="headerlink" title="12. 数码管动态显示秒表（中断函数消隐）"></a>12. 数码管动态显示秒表（中断函数消隐）</h3><p>思路:</p><p>消隐就是位选和段选，两个等一个搞好了在搞后一个。</p><p>下面程序的执行过程：定时到1ms-&gt;中断1次-&gt;定时到1s-&gt;进入中断函数-&gt;控制6个数码管</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        EA <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>       <span class="token comment">//使能总中断,只要用到中断就要EA=1</span>    <span class="token comment">//这里选用定时器0中断，因为定时器使用的是T0</span>    ET0  <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">//使能T0中断，分开关</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;=</span> <span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token comment">//判断T0溢出是否达到1000次</span>        <span class="token punctuation">{</span>            cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token comment">//达到1000次后计数值清零</span>            sec<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token comment">//秒计数自加1</span>            <span class="token comment">//以下代码将sec按十进制位从低到高依次提取并转为数码管显示字符</span>            LedBuff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>sec<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment">//...</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">/* 定时器0中断服务函数 */</span><span class="token comment">// TF=1溢出1次就会调用中断函数1次（该程序中每1ms调用1次中断函数）</span><span class="token keyword">void</span> <span class="token function">InterruptTimer0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span><span class="token comment">//N×8+3=中断向量地址，使单片机找到对应中断函数</span><span class="token punctuation">{</span>    TH0 <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>  <span class="token comment">//重新加载初值</span>    TL0 <span class="token operator">=</span> <span class="token number">0x67</span><span class="token punctuation">;</span>    cnt<span class="token operator">++</span><span class="token punctuation">;</span>       <span class="token comment">//中断次数计数值加1</span>    <span class="token comment">//以下代码完成数码管动态扫描刷新</span>    P0 <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>   <span class="token comment">//显示消隐（全灭）</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token comment">//...</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="13-数码管动态显示秒表（高位0不显示）"><a href="#13-数码管动态显示秒表（高位0不显示）" class="headerlink" title="13. 数码管动态显示秒表（高位0不显示）"></a>13. 数码管动态显示秒表（高位0不显示）</h3><p>思路：</p><p>取余只提取低位，即遇到0不显示</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">char</span> code LedChar<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment">//数码管显示字符转换表</span>    <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span>    <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> LedBuff<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment">//数码管显示缓冲区，初值0xFF确保启动时都不亮</span>    <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token comment">//动态扫描的索引</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//记录T0中断次数</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">char</span> j<span class="token punctuation">;</span>  <span class="token comment">//循环变量</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> sec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//记录经过的秒数</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//中间转换缓冲区</span>    EA <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>       <span class="token comment">//使能总中断</span>    ET0  <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">//使能T0中断</span>    <span class="token comment">//...</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;=</span> <span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token comment">//判断T0溢出是否达到1000次</span>        <span class="token punctuation">{</span>            cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token comment">//达到1000次后计数值清零</span>            sec<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token comment">//秒计数自加1</span>            <span class="token comment">//将sec按十进制位从低到高依次提取到buf数组中</span>            buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">/</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            buf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">/</span><span class="token number">100</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            buf<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">/</span><span class="token number">1000</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">/</span><span class="token number">10000</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            buf<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">/</span><span class="token number">100000</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            <span class="token comment">//从最高为开始，遇到0不显示，遇到非0退出循环</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">&gt;=</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>buf<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                    LedBuff<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>                <span class="token keyword">else</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//将剩余的有效数字位如实转换</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token punctuation">;</span> j<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span>  <span class="token comment">//for()起始未对j操作，j即保持上个循环结束时的值</span>            <span class="token punctuation">{</span>                LedBuff<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>buf<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">/* 定时器0中断服务函数 */</span><span class="token comment">//略</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="14-数码管动态显示999999倒计时（定时器T1中断）"><a href="#14-数码管动态显示999999倒计时（定时器T1中断）" class="headerlink" title="14. 数码管动态显示999999倒计时（定时器T1中断）"></a>14. 数码管动态显示999999倒计时（定时器<strong>T1</strong>中断）</h3><p>思路：</p><p>定时器T1中断，则定时器选择T1模式</p><p>倒序取余，高位0不显示，低位非0照常显示</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">char</span> code LedChar<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment">//数码管显示字符转换表</span>    <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span>    <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> LedBuff<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment">//数码管显示缓冲区，初值0xFF确保启动时都不亮</span>    <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">char</span> j<span class="token punctuation">;</span>  <span class="token comment">//循环变量</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> sec <span class="token operator">=</span> <span class="token number">1000000</span><span class="token punctuation">;</span>  <span class="token comment">//记录经过的秒数，倒计时初值为999999+1</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//中间转换缓冲区</span>    EA <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>       <span class="token comment">//使能总中断</span>    ENLED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">//使能U3</span>    ADDR3 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">//因为需要动态改变ADDR0-2的值，所以不需要再初始化了</span>    TMOD <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">;</span>  <span class="token comment">//设置T1为模式1</span>    TH1  <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>  <span class="token comment">//为T1赋初值0xFC67，定时1ms</span>    TL1  <span class="token operator">=</span> <span class="token number">0x67</span><span class="token punctuation">;</span>    ET1  <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">//使能T1中断</span>    TR1  <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">//启动T1</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;=</span> <span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token comment">//判断T1溢出是否达到1000次</span>        <span class="token punctuation">{</span>            cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token comment">//达到1000次后计数值清零</span>            sec<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token comment">//秒计数自减1</span>            <span class="token comment">//将sec按十进制位从低到高依次提取到buf数组中</span>            buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">/</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            buf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">/</span><span class="token number">100</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            buf<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">/</span><span class="token number">1000</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">/</span><span class="token number">10000</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            buf<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> sec<span class="token operator">/</span><span class="token number">100000</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            <span class="token comment">//从最高为开始，遇到0不显示，遇到非0退出循环</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">&gt;=</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>buf<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                    LedBuff<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>                <span class="token keyword">else</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//将剩余的有效数字位如实转换</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token punctuation">;</span> j<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span>  <span class="token comment">//for()起始未对j操作，j即保持上个循环结束时的值</span>            <span class="token punctuation">{</span>                LedBuff<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>buf<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">/* 定时器1中断服务函数 */</span><span class="token keyword">void</span> <span class="token function">InterruptTimer1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">3</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token comment">//动态扫描的索引</span>    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//记录T1中断次数</span>    TH1 <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>  <span class="token comment">//重新加载初值</span>    TL1 <span class="token operator">=</span> <span class="token number">0x67</span><span class="token punctuation">;</span>    cnt<span class="token operator">++</span><span class="token punctuation">;</span>       <span class="token comment">//中断次数计数值加1</span>    <span class="token comment">//以下代码完成数码管动态扫描刷新</span>    P0 <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>   <span class="token comment">//显示消隐</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="15-点亮点阵左上角LED小灯"><a href="#15-点亮点阵左上角LED小灯" class="headerlink" title="15. 点亮点阵左上角LED小灯"></a>15. 点亮点阵左上角LED小灯</h3><p>思路：</p><p>涉及新的模块，点阵LED由总开关74HC138（U4）控制</p><p>使能U4：ENLEN=0,ADDR3=0</p><p>分开关：ADDR210,控制8牌点阵LED</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">sbit LED<span class="token operator">=</span>P0<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span>sbit ADDR0<span class="token operator">=</span>P1<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span>sbit ADDR1<span class="token operator">=</span>P1<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">;</span>sbit ADDR2<span class="token operator">=</span>P1<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>sbit ADDR3<span class="token operator">=</span>P1<span class="token operator">^</span><span class="token number">3</span><span class="token punctuation">;</span>sbit ENLED<span class="token operator">=</span>P1<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ENLED<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//使能U4</span>    ADDR3<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//使能第一行点阵LED分开关</span>    ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        LED<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//点亮左上角第一个LED</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="16-点亮点阵第二行LED小灯"><a href="#16-点亮点阵第二行LED小灯" class="headerlink" title="16. 点亮点阵第二行LED小灯"></a>16. 点亮点阵第二行LED小灯</h3><p>思路：使能第二行分开关，然后P0整体赋值即可点亮一行</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>P0<span class="token operator">=</span><span class="token number">0x00</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="17-点亮点阵全部LED小灯（定时器中断）"><a href="#17-点亮点阵全部LED小灯（定时器中断）" class="headerlink" title="17. 点亮点阵全部LED小灯（定时器中断）"></a>17. 点亮点阵全部LED小灯（定时器中断）</h3><p>思路：设置定时器模式T0，定义定时器0中断服务函数，动态扫描即可点亮全部点阵LED</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    EA<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//使能总中断</span>    ENLED<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//使能U4</span>    ADDR3<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    TMOD<span class="token operator">=</span><span class="token number">0x01</span><span class="token punctuation">;</span><span class="token comment">//设置计时T0为模式1</span>    THO<span class="token operator">=</span><span class="token number">0xFC</span><span class="token punctuation">;</span><span class="token comment">//设置初值</span>    TL0<span class="token operator">=</span><span class="token number">0X67</span><span class="token punctuation">;</span>    ET0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//使能T0中断（分开关）</span>    TR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//启动定时器T0</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//定时器0中断服务函数</span><span class="token keyword">void</span> <span class="token function">InterruptTime0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    TH0<span class="token operator">=</span><span class="token number">0xFC</span><span class="token punctuation">;</span>    THL<span class="token operator">=</span><span class="token number">0x67</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0x00</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0x00</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0x00</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0x00</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0x00</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0x00</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0x00</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0x00</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="18-点阵显示静态字符（字模软件）"><a href="#18-点阵显示静态字符（字模软件）" class="headerlink" title="18. 点阵显示静态字符（字模软件）"></a>18. 点阵显示静态字符（字模软件）</h3><p>思路：</p><p>学会字模软件的使用，定义数组即可</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">char</span> code image<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment">//图片的字模表</span>    <span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    EA <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>       <span class="token comment">//使能总中断</span>    ENLED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">//使能U4，选择LED点阵</span>    ADDR3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    TMOD <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span>  <span class="token comment">//设置T0为模式1</span>    TH0  <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>  <span class="token comment">//为T0赋初值0xFC67，定时1ms</span>    TL0  <span class="token operator">=</span> <span class="token number">0x67</span><span class="token punctuation">;</span>    ET0  <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">//使能T0中断</span>    TR0  <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">//启动T0</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 定时器0中断服务函数 */</span><span class="token keyword">void</span> <span class="token function">InterruptTimer0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//动态扫描的索引</span>    TH0 <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>  <span class="token comment">//重新加载初值</span>    TL0 <span class="token operator">=</span> <span class="token number">0x67</span><span class="token punctuation">;</span>    <span class="token comment">//以下代码完成LED点阵动态扫描刷新</span>    P0 <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>   <span class="token comment">//显示消隐</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="19-点阵的动画显示（纵向-x2F-横向移动）"><a href="#19-点阵的动画显示（纵向-x2F-横向移动）" class="headerlink" title="19. 点阵的动画显示（纵向/横向移动）"></a>19. 点阵的动画显示（纵向/横向移动）</h3><p>思路：</p><p>多张图片分别进行取模，方向不是问题，关键是定义图片的字模表数组</p><p>横向移动需要使用二维数组，因为字模数据不是连续的，对需要的图片逐一取模。</p><p>可以理解为switch语句下面的代码是同时执行的，动态扫描一张图片，然后250ms换下一张图片（只有一行不同）。</p><p>横向移动就是每250ms换一张图片，但是因为字模数据不是连续的，所以新的图片是全新的图片。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">char</span> code image<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment">//图片的字模表</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0xF9</span><span class="token punctuation">,</span><span class="token number">0xF9</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0xE7</span><span class="token punctuation">,</span><span class="token number">0xE7</span><span class="token punctuation">,</span><span class="token number">0xE7</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x91</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0x89</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xE7</span><span class="token punctuation">,</span><span class="token number">0xC3</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0xBD</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0xBD</span><span class="token punctuation">,</span><span class="token number">0xBD</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">/* 定时器0中断服务函数 */</span><span class="token keyword">void</span> <span class="token function">InterruptTimer0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//动态扫描的索引</span>    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> tmr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//250ms软件定时器</span>    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//图片刷新索引</span>    TH0 <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>  <span class="token comment">//重新加载初值</span>    TL0 <span class="token operator">=</span> <span class="token number">0x67</span><span class="token punctuation">;</span>    <span class="token comment">//以下代码完成LED点阵动态扫描刷新</span>    P0 <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>   <span class="token comment">//显示消隐</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//以下代码完成每250ms改变一帧图像</span>    tmr<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>tmr <span class="token operator">&gt;=</span> <span class="token number">250</span><span class="token punctuation">)</span>  <span class="token comment">//达到250ms时改变一次图片索引</span>    <span class="token punctuation">{</span>        tmr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        index<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">32</span><span class="token punctuation">)</span>  <span class="token comment">//图片索引达到32后归零(最后一张图片)</span>        <span class="token punctuation">{</span>            index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//横向移动</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> code image<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧1</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x7F</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x7F</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧2</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x3F</span><span class="token punctuation">,</span><span class="token number">0x7F</span><span class="token punctuation">,</span><span class="token number">0x7F</span><span class="token punctuation">,</span><span class="token number">0x7F</span><span class="token punctuation">,</span><span class="token number">0x7F</span><span class="token punctuation">,</span><span class="token number">0x7F</span><span class="token punctuation">,</span><span class="token number">0x3F</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧3</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x1F</span><span class="token punctuation">,</span><span class="token number">0x3F</span><span class="token punctuation">,</span><span class="token number">0x3F</span><span class="token punctuation">,</span><span class="token number">0x3F</span><span class="token punctuation">,</span><span class="token number">0x3F</span><span class="token punctuation">,</span><span class="token number">0x3F</span><span class="token punctuation">,</span><span class="token number">0x1F</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧4</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x0F</span><span class="token punctuation">,</span><span class="token number">0x9F</span><span class="token punctuation">,</span><span class="token number">0x9F</span><span class="token punctuation">,</span><span class="token number">0x9F</span><span class="token punctuation">,</span><span class="token number">0x9F</span><span class="token punctuation">,</span><span class="token number">0x9F</span><span class="token punctuation">,</span><span class="token number">0x0F</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧5</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x87</span><span class="token punctuation">,</span><span class="token number">0xCF</span><span class="token punctuation">,</span><span class="token number">0xCF</span><span class="token punctuation">,</span><span class="token number">0xCF</span><span class="token punctuation">,</span><span class="token number">0xCF</span><span class="token punctuation">,</span><span class="token number">0xCF</span><span class="token punctuation">,</span><span class="token number">0x87</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧6</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xC3</span><span class="token punctuation">,</span><span class="token number">0xE7</span><span class="token punctuation">,</span><span class="token number">0xE7</span><span class="token punctuation">,</span><span class="token number">0xE7</span><span class="token punctuation">,</span><span class="token number">0xE7</span><span class="token punctuation">,</span><span class="token number">0xE7</span><span class="token punctuation">,</span><span class="token number">0xC3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧7</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xE1</span><span class="token punctuation">,</span><span class="token number">0x73</span><span class="token punctuation">,</span><span class="token number">0x73</span><span class="token punctuation">,</span><span class="token number">0x73</span><span class="token punctuation">,</span><span class="token number">0xF3</span><span class="token punctuation">,</span><span class="token number">0xF3</span><span class="token punctuation">,</span><span class="token number">0xE1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧8</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x70</span><span class="token punctuation">,</span><span class="token number">0x39</span><span class="token punctuation">,</span><span class="token number">0x39</span><span class="token punctuation">,</span><span class="token number">0x39</span><span class="token punctuation">,</span><span class="token number">0x79</span><span class="token punctuation">,</span><span class="token number">0xF9</span><span class="token punctuation">,</span><span class="token number">0xF0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧9</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x38</span><span class="token punctuation">,</span><span class="token number">0x1C</span><span class="token punctuation">,</span><span class="token number">0x1C</span><span class="token punctuation">,</span><span class="token number">0x1C</span><span class="token punctuation">,</span><span class="token number">0x3C</span><span class="token punctuation">,</span><span class="token number">0x7C</span><span class="token punctuation">,</span><span class="token number">0xF8</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧10</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x9C</span><span class="token punctuation">,</span><span class="token number">0x0E</span><span class="token punctuation">,</span><span class="token number">0x0E</span><span class="token punctuation">,</span><span class="token number">0x0E</span><span class="token punctuation">,</span><span class="token number">0x1E</span><span class="token punctuation">,</span><span class="token number">0x3E</span><span class="token punctuation">,</span><span class="token number">0x7C</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧11</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xCE</span><span class="token punctuation">,</span><span class="token number">0x07</span><span class="token punctuation">,</span><span class="token number">0x07</span><span class="token punctuation">,</span><span class="token number">0x07</span><span class="token punctuation">,</span><span class="token number">0x0F</span><span class="token punctuation">,</span><span class="token number">0x1F</span><span class="token punctuation">,</span><span class="token number">0x3E</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧12</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x67</span><span class="token punctuation">,</span><span class="token number">0x03</span><span class="token punctuation">,</span><span class="token number">0x03</span><span class="token punctuation">,</span><span class="token number">0x03</span><span class="token punctuation">,</span><span class="token number">0x07</span><span class="token punctuation">,</span><span class="token number">0x0F</span><span class="token punctuation">,</span><span class="token number">0x9F</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧13</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x33</span><span class="token punctuation">,</span><span class="token number">0x01</span><span class="token punctuation">,</span><span class="token number">0x01</span><span class="token punctuation">,</span><span class="token number">0x01</span><span class="token punctuation">,</span><span class="token number">0x03</span><span class="token punctuation">,</span><span class="token number">0x87</span><span class="token punctuation">,</span><span class="token number">0xCF</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧14</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0xC3</span><span class="token punctuation">,</span><span class="token number">0xE7</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧15</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xCC</span><span class="token punctuation">,</span><span class="token number">0x80</span><span class="token punctuation">,</span><span class="token number">0x80</span><span class="token punctuation">,</span><span class="token number">0x80</span><span class="token punctuation">,</span><span class="token number">0xC0</span><span class="token punctuation">,</span><span class="token number">0xE1</span><span class="token punctuation">,</span><span class="token number">0xF3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧16</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xE6</span><span class="token punctuation">,</span><span class="token number">0xC0</span><span class="token punctuation">,</span><span class="token number">0xC0</span><span class="token punctuation">,</span><span class="token number">0xC0</span><span class="token punctuation">,</span><span class="token number">0xE0</span><span class="token punctuation">,</span><span class="token number">0xF0</span><span class="token punctuation">,</span><span class="token number">0xF9</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧17</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x73</span><span class="token punctuation">,</span><span class="token number">0x60</span><span class="token punctuation">,</span><span class="token number">0x60</span><span class="token punctuation">,</span><span class="token number">0x60</span><span class="token punctuation">,</span><span class="token number">0x70</span><span class="token punctuation">,</span><span class="token number">0x78</span><span class="token punctuation">,</span><span class="token number">0xFC</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧18</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x39</span><span class="token punctuation">,</span><span class="token number">0x30</span><span class="token punctuation">,</span><span class="token number">0x30</span><span class="token punctuation">,</span><span class="token number">0x30</span><span class="token punctuation">,</span><span class="token number">0x38</span><span class="token punctuation">,</span><span class="token number">0x3C</span><span class="token punctuation">,</span><span class="token number">0x7E</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧19</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x9C</span><span class="token punctuation">,</span><span class="token number">0x98</span><span class="token punctuation">,</span><span class="token number">0x98</span><span class="token punctuation">,</span><span class="token number">0x98</span><span class="token punctuation">,</span><span class="token number">0x9C</span><span class="token punctuation">,</span><span class="token number">0x1E</span><span class="token punctuation">,</span><span class="token number">0x3F</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧20</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xCE</span><span class="token punctuation">,</span><span class="token number">0xCC</span><span class="token punctuation">,</span><span class="token number">0xCC</span><span class="token punctuation">,</span><span class="token number">0xCC</span><span class="token punctuation">,</span><span class="token number">0xCE</span><span class="token punctuation">,</span><span class="token number">0x0F</span><span class="token punctuation">,</span><span class="token number">0x1F</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧21</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x67</span><span class="token punctuation">,</span><span class="token number">0x66</span><span class="token punctuation">,</span><span class="token number">0x66</span><span class="token punctuation">,</span><span class="token number">0x66</span><span class="token punctuation">,</span><span class="token number">0x67</span><span class="token punctuation">,</span><span class="token number">0x07</span><span class="token punctuation">,</span><span class="token number">0x0F</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧22</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x33</span><span class="token punctuation">,</span><span class="token number">0x33</span><span class="token punctuation">,</span><span class="token number">0x33</span><span class="token punctuation">,</span><span class="token number">0x33</span><span class="token punctuation">,</span><span class="token number">0x33</span><span class="token punctuation">,</span><span class="token number">0x03</span><span class="token punctuation">,</span><span class="token number">0x87</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧23</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x99</span><span class="token punctuation">,</span><span class="token number">0x81</span><span class="token punctuation">,</span><span class="token number">0xC3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧24</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xCC</span><span class="token punctuation">,</span><span class="token number">0xCC</span><span class="token punctuation">,</span><span class="token number">0xCC</span><span class="token punctuation">,</span><span class="token number">0xCC</span><span class="token punctuation">,</span><span class="token number">0xCC</span><span class="token punctuation">,</span><span class="token number">0xC0</span><span class="token punctuation">,</span><span class="token number">0xE1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧25</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xE6</span><span class="token punctuation">,</span><span class="token number">0xE6</span><span class="token punctuation">,</span><span class="token number">0xE6</span><span class="token punctuation">,</span><span class="token number">0xE6</span><span class="token punctuation">,</span><span class="token number">0xE6</span><span class="token punctuation">,</span><span class="token number">0xE0</span><span class="token punctuation">,</span><span class="token number">0xF0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧26</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xF3</span><span class="token punctuation">,</span><span class="token number">0xF3</span><span class="token punctuation">,</span><span class="token number">0xF3</span><span class="token punctuation">,</span><span class="token number">0xF3</span><span class="token punctuation">,</span><span class="token number">0xF3</span><span class="token punctuation">,</span><span class="token number">0xF0</span><span class="token punctuation">,</span><span class="token number">0xF8</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧27</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xF9</span><span class="token punctuation">,</span><span class="token number">0xF9</span><span class="token punctuation">,</span><span class="token number">0xF9</span><span class="token punctuation">,</span><span class="token number">0xF9</span><span class="token punctuation">,</span><span class="token number">0xF9</span><span class="token punctuation">,</span><span class="token number">0xF8</span><span class="token punctuation">,</span><span class="token number">0xFC</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧28</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFC</span><span class="token punctuation">,</span><span class="token number">0xFC</span><span class="token punctuation">,</span><span class="token number">0xFC</span><span class="token punctuation">,</span><span class="token number">0xFC</span><span class="token punctuation">,</span><span class="token number">0xFC</span><span class="token punctuation">,</span><span class="token number">0xFC</span><span class="token punctuation">,</span><span class="token number">0xFE</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//动画帧29</span>    <span class="token punctuation">{</span><span class="token number">0xFF</span><span class="token punctuation">,</span><span class="token number">0xFE</span><span class="token punctuation">,</span><span class="token number">0xFE</span><span class="token punctuation">,</span><span class="token number">0xFE</span><span class="token punctuation">,</span><span class="token number">0xFE</span><span class="token punctuation">,</span><span class="token number">0xFE</span><span class="token punctuation">,</span><span class="token number">0xFE</span><span class="token punctuation">,</span><span class="token number">0xFF</span><span class="token punctuation">}</span>   <span class="token comment">//动画帧30</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">/* 定时器0中断服务函数 */</span><span class="token keyword">void</span> <span class="token function">InterruptTimer0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span><span class="token punctuation">{</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//以下代码完成每250ms改变一帧图像</span>    tmr<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>tmr <span class="token operator">&gt;=</span> <span class="token number">250</span><span class="token punctuation">)</span>  <span class="token comment">//达到250ms时改变一次图片索引</span>    <span class="token punctuation">{</span>        tmr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        index<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">30</span><span class="token punctuation">)</span>  <span class="token comment">//图片索引达到30后归零</span>        <span class="token punctuation">{</span>            index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="20-点阵实现9-0的倒计时牌显示"><a href="#20-点阵实现9-0的倒计时牌显示" class="headerlink" title="20. 点阵实现9~0的倒计时牌显示"></a>20. 点阵实现9~0的倒计时牌显示</h3><p>思路：</p><p>对9-0数字分别取模，然后定义数组，动态刷新即可。</p><p>因为字模数据不连续，所以需要二维数组。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">char</span> code image<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token punctuation">{</span><span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数字0</span>    <span class="token punctuation">{</span><span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数字1</span>    <span class="token punctuation">{</span><span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数字2</span>    <span class="token punctuation">{</span><span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数字3</span>    <span class="token punctuation">{</span><span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数字4</span>    <span class="token punctuation">{</span><span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数字5</span>    <span class="token punctuation">{</span><span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数字6</span>    <span class="token punctuation">{</span><span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数字7</span>    <span class="token punctuation">{</span><span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数字8</span>    <span class="token punctuation">{</span><span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数字9</span>    <span class="token punctuation">{</span><span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//全亮</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">/* 定时器0中断服务函数 */</span><span class="token keyword">void</span> <span class="token function">InterruptTimer0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span><span class="token punctuation">{</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>image<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//以下代码完成每秒改变一帧图像</span>    tmr<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>tmr <span class="token operator">&gt;=</span> <span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token comment">//达到1000ms时改变一次图片索引</span>    <span class="token punctuation">{</span>        tmr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment">//图片索引10~0循环</span>            index <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            index<span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="21-实现流水灯、数码管和点阵的同时显示"><a href="#21-实现流水灯、数码管和点阵的同时显示" class="headerlink" title="21. 实现流水灯、数码管和点阵的同时显示"></a>21. <strong>实现流水灯、数码管和点阵的同时显示</strong></h3><p>思路：动态刷新 注意总开关和分开关使能就行</p><p>同样理解：因为刷新速度飞快，所以我们可以认为switch语句后面的同时执行</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/* 定时器0中断服务函数 */</span><span class="token keyword">void</span> <span class="token function">InterruptTimer0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//动态扫描的索引</span>    TH0 <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>  <span class="token comment">//重新加载初值</span>    TL0 <span class="token operator">=</span> <span class="token number">0x67</span><span class="token punctuation">;</span>    <span class="token comment">//以下代码完成LED点阵动态扫描刷新</span>    P0 <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>   <span class="token comment">//显示消隐</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">//点阵LED部分使能U4</span>        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token comment">//数码管部分  使能U3</span>        <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>  ADDR3 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>  ADDR3 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">11</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">12</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">13</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token comment">//独立LED部分  使能U3</span>        <span class="token keyword">case</span> <span class="token number">14</span><span class="token operator">:</span> ADDR3 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> P0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="22-秒计数函数"><a href="#22-秒计数函数" class="headerlink" title="22. 秒计数函数"></a>22. 秒计数函数</h3><pre class="line-numbers language-C" data-language="C"><code class="language-C">/* 秒计数函数，每秒进行一次秒数+1，并转换为数码管显示字符 */void SecondCount(){    static unsigned int  cnt = 0;  //记录T0中断次数    static unsigned long sec = 0;  //记录经过的秒数    cnt++;            //计数值自加1    if (cnt &gt;= 1000)  //判断T0溢出是否达到1000次    {        cnt = 0;      //达到1000次后计数值清零        sec++;        //秒计数自加1        LedBuff[0] = LedChar[sec%10];        LedBuff[1] = LedChar[sec/10%10];        LedBuff[2] = LedChar[sec/100%10];        LedBuff[3] = LedChar[sec/1000%10];        LedBuff[4] = LedChar[sec/10000%10];        LedBuff[5] = LedChar[sec/100000%10];    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="23-数码管动态扫描刷新函数"><a href="#23-数码管动态扫描刷新函数" class="headerlink" title="23. 数码管动态扫描刷新函数"></a>23. 数码管动态扫描刷新函数</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/* 数码管动态扫描刷新函数 */</span><span class="token keyword">void</span> <span class="token function">LedRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//动态扫描的索引</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> ADDR2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> ADDR1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ADDR0<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> P0<span class="token operator">=</span>LedBuff<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="24-独立按键的扫描（LED）"><a href="#24-独立按键的扫描（LED）" class="headerlink" title="24. 独立按键的扫描（LED）"></a>24. 独立按键的扫描（LED）</h3><p>思路：P2口（8位）控制KeyOut1<del>4，KeyIn1</del>4。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">sbit LED9 <span class="token operator">=</span> P0<span class="token operator">^</span><span class="token number">7</span><span class="token punctuation">;</span>sbit LED8 <span class="token operator">=</span> P0<span class="token operator">^</span><span class="token number">6</span><span class="token punctuation">;</span>sbit LED7 <span class="token operator">=</span> P0<span class="token operator">^</span><span class="token number">5</span><span class="token punctuation">;</span>sbit LED6 <span class="token operator">=</span> P0<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span>sbit KEY1 <span class="token operator">=</span> P2<span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">;</span>sbit KEY2 <span class="token operator">=</span> P2<span class="token operator">^</span><span class="token number">5</span><span class="token punctuation">;</span>sbit KEY3 <span class="token operator">=</span> P2<span class="token operator">^</span><span class="token number">6</span><span class="token punctuation">;</span>sbit KEY4 <span class="token operator">=</span> P2<span class="token operator">^</span><span class="token number">7</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//U3使能，LEDS6开启</span>        P2 <span class="token operator">=</span> <span class="token number">0xF7</span><span class="token punctuation">;</span>   <span class="token comment">//P2.3置0，即KeyOut1输出低电平</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">//将按键扫描引脚的值传递到LED上</span>        LED9 <span class="token operator">=</span> KEY1<span class="token punctuation">;</span>  <span class="token comment">//按下时为0，对应的LED点亮</span>        LED8 <span class="token operator">=</span> KEY2<span class="token punctuation">;</span>        LED7 <span class="token operator">=</span> KEY3<span class="token punctuation">;</span>        LED6 <span class="token operator">=</span> KEY4<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="25-按键消抖"><a href="#25-按键消抖" class="headerlink" title="25. 按键消抖"></a>25. 按键消抖</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">char</span> code LedChar<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment">//数码管显示字符转换表</span>    <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span>    <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    bit backup <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">//定义一个位变量，保存前一次扫描的按键值</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//定义一个计数变量，记录按键按下的次数</span>    <span class="token comment">//U3使能 </span>    <span class="token comment">//选择数码管DS1进行显示</span>    ADDR2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    ADDR1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    ADDR0 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    P2 <span class="token operator">=</span> <span class="token number">0xF7</span><span class="token punctuation">;</span>   <span class="token comment">//P2.3置0，即KeyOut1输出低电平</span>    P0 <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//显示按键次数初值</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>KEY4 <span class="token operator">!=</span> backup<span class="token punctuation">)</span>   <span class="token comment">//当前值与前次值不相等说明此时按键有动作</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>backup <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment">//如果前次值为0，则说明当前是由0变1，即按键弹起</span>            <span class="token punctuation">{</span>                cnt<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token comment">//按键次数+1</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>             <span class="token comment">//只用1个数码管显示，所以加到10就清零重新开始</span>                    cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                P0 <span class="token operator">=</span> LedChar<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//计数值显示到数码管上</span>            <span class="token punctuation">}</span>            backup <span class="token operator">=</span> KEY4<span class="token punctuation">;</span>   <span class="token comment">//更新备份为当前值，以备进行下次比较</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="26-矩阵按键的扫描、消抖、动作分离"><a href="#26-矩阵按键的扫描、消抖、动作分离" class="headerlink" title="26. 矩阵按键的扫描、消抖、动作分离"></a>26. 矩阵按键的扫描、消抖、动作分离</h3><h3 id="27-简易加法计算器"><a href="#27-简易加法计算器" class="headerlink" title="27. 简易加法计算器"></a>27. <strong>简易加法计算器</strong></h3><h3 id="28-按键实现数码管数字递减（F-0）"><a href="#28-按键实现数码管数字递减（F-0）" class="headerlink" title="28. 按键实现数码管数字递减（F~0）"></a>28. 按键实现数码管数字递减（F~0）</h3><h3 id="29-简易减法计算器（矩阵按键）"><a href="#29-简易减法计算器（矩阵按键）" class="headerlink" title="29. 简易减法计算器（矩阵按键）"></a>29. 简易减法计算器（矩阵按键）</h3><h3 id="30-电机简单转动"><a href="#30-电机简单转动" class="headerlink" title="30. 电机简单转动"></a>30. 电机简单转动</h3><h3 id="31-电机转动任意圈数（函数实现）"><a href="#31-电机转动任意圈数（函数实现）" class="headerlink" title="31. 电机转动任意圈数（函数实现）"></a>31. 电机转动任意圈数（函数实现）</h3><h3 id="32-电机转动任意圈数（定时中断实现）"><a href="#32-电机转动任意圈数（定时中断实现）" class="headerlink" title="32. 电机转动任意圈数（定时中断实现）"></a>32. 电机转动任意圈数（定时中断实现）</h3><h3 id="33-电机转动综合应用程序（按键控制）"><a href="#33-电机转动综合应用程序（按键控制）" class="headerlink" title="33. 电机转动综合应用程序（按键控制）"></a>33. 电机转动综合应用程序（按键控制）</h3><h3 id="34-步进电机正反转任意角度"><a href="#34-步进电机正反转任意角度" class="headerlink" title="34. 步进电机正反转任意角度"></a>34. 步进电机正反转任意角度</h3><h3 id="35-蜂鸣器指定频率发声"><a href="#35-蜂鸣器指定频率发声" class="headerlink" title="35. 蜂鸣器指定频率发声"></a>35. 蜂鸣器指定频率发声</h3><h3 id="36-蜂鸣器输出音乐（了解）"><a href="#36-蜂鸣器输出音乐（了解）" class="headerlink" title="36. 蜂鸣器输出音乐（了解）"></a>36. 蜂鸣器输出音乐（<strong>了解</strong>）</h3>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;做技术必须要认真，很多人做事的时候喜欢糊弄，但做技术绝对不可以。&lt;br&gt;技术是逻辑性很强的东西，不应该有任何侥幸心理，你糊弄它它就糊弄你。																												——李冬明【前言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Last Update：2022.11.26&lt;/p&gt;
&lt;p&gt;Tips：仅个人理解，未对硬件原理深究,若发现错误敬请斧正。&lt;/p&gt;</summary>
    
    
    
    <category term="学习札记" scheme="https://www.kmoon.fun/categories/%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0/"/>
    
    
    <category term="51单片机" scheme="https://www.kmoon.fun/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="C" scheme="https://www.kmoon.fun/tags/C/"/>
    
  </entry>
  
</feed>
